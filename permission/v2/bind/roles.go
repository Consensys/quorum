// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package bind

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// RoleManagerMetaData contains all meta data concerning the RoleManager contract.
var RoleManagerMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_roleId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_baseAccess\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_isVoter\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_isAdmin\",\"type\":\"bool\"}],\"name\":\"RoleCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_roleId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_roleId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_baseAccess\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isVoter\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_isAdmin\",\"type\":\"bool\"}],\"name\":\"addRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAccessLevelForUnconfiguredAccount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumberOfRoles\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_roleId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"}],\"name\":\"getRoleDetails\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"roleId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"orgId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"accessType\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"voter\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"admin\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rIndex\",\"type\":\"uint256\"}],\"name\":\"getRoleDetailsFromIndex\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"roleId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"orgId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"accessType\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"voter\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"admin\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_permUpgradable\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_roleId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_ultParent\",\"type\":\"string\"}],\"name\":\"isAdminRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"access\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_typeOfTxn\",\"type\":\"uint256\"}],\"name\":\"isTransactionAllowedBasedOnRoleAccess\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_roleId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_ultParent\",\"type\":\"string\"}],\"name\":\"isVoterRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_roleId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"}],\"name\":\"removeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_roleId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_ultParent\",\"type\":\"string\"}],\"name\":\"roleAccess\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_roleId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_ultParent\",\"type\":\"string\"}],\"name\":\"roleExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_accessLevel\",\"type\":\"uint256\"}],\"name\":\"setAccessLevelForUnconfiguredAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_roleId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_ultParent\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_typeOfTxn\",\"type\":\"uint256\"}],\"name\":\"transactionAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "0x608060405234801561000f575f80fd5b50612dfd8061001d5f395ff3fe608060405234801561000f575f80fd5b50600436106100e8575f3560e01c8063abf5739f1161008a578063cfc83dfa11610064578063cfc83dfa14610262578063d1f7786614610292578063deb16ba7146102c2578063e4604b61146102f2576100e8565b8063abf5739f146101e6578063be322e5414610216578063c4d66de814610246576100e8565b80637b713579116100c65780637b7135791461015b57806387f55d3114610177578063a451d4a814610195578063a6343012146101ca576100e8565b80630dca12f6146100ec5780631870aba31461010a5780633965c04a1461013f575b5f80fd5b6100f4610322565b6040516101019190611e93565b60405180910390f35b610124600480360381019061011f9190611f1e565b61032b565b60405161013696959493929190612040565b60405180910390f35b610159600480360381019061015491906120d7565b610708565b005b61017560048036038101906101709190612254565b61085b565b005b61017f610ba0565b60405161018c9190611e93565b60405180910390f35b6101af60048036038101906101aa91906120d7565b610bac565b6040516101c196959493929190612040565b60405180910390f35b6101e460048036038101906101df9190611f1e565b610dd7565b005b61020060048036038101906101fb9190612303565b611061565b60405161020d91906123a7565b60405180910390f35b610230600480360381019061022b91906123c0565b611179565b60405161023d91906123a7565b60405180910390f35b610260600480360381019061025b91906124ca565b61153b565b005b61027c60048036038101906102779190612303565b611768565b6040516102899190611e93565b60405180910390f35b6102ac60048036038101906102a791906124f5565b611866565b6040516102b991906123a7565b60405180910390f35b6102dc60048036038101906102d791906123c0565b611956565b6040516102e991906123a7565b60405180910390f35b61030c600480360381019061030791906125b9565b611d17565b60405161031991906123a7565b60405180910390f35b5f600454905090565b6060805f805f806103d18a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f8201169050808301925050505050505089898080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f8201169050808301925050505050505060405180602001604052805f815250611061565b61044b5789895f805f8085858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f82011690508083019250505050505050945090919293945060405180602001604052805f815250939291909550955095509550955095506106fb565b5f6104dc8b8b8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f820116905080830192505050505050508a8a8080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f82011690508083019250505050505050611dcf565b9050600181815481106104f2576104f16125f7565b5b905f5260205f2090600402015f0160018281548110610514576105136125f7565b5b905f5260205f20906004020160010160018381548110610537576105366125f7565b5b905f5260205f209060040201600201546001848154811061055b5761055a6125f7565b5b905f5260205f2090600402016003015f9054906101000a900460ff166001858154811061058b5761058a6125f7565b5b905f5260205f20906004020160030160019054906101000a900460ff16600186815481106105bc576105bb6125f7565b5b905f5260205f20906004020160030160029054906101000a900460ff168580546105e590612651565b80601f016020809104026020016040519081016040528092919081815260200182805461061190612651565b801561065c5780601f106106335761010080835404028352916020019161065c565b820191905f5260205f20905b81548152906001019060200180831161063f57829003601f168201915b5050505050955084805461066f90612651565b80601f016020809104026020016040519081016040528092919081815260200182805461069b90612651565b80156106e65780601f106106bd576101008083540402835291602001916106e6565b820191905f5260205f20905b8154815290600101906020018083116106c957829003601f168201915b50505050509450965096509650965096509650505b9499939850945094509450565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630e32cf906040518163ffffffff1660e01b8152600401602060405180830381865afa158015610770573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107949190612695565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610801576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f89061270a565b60405180910390fd5b5f8110158015610812575060078111155b610851576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084890612798565b60405180910390fd5b8060048190555050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630e32cf906040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108c3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108e79190612695565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610954576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094b9061270a565b60405180910390fd5b60088310610997576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098e90612800565b60405180910390fd5b5f60025f87876040516020016109ae92919061281e565b6040516020818303038152906040528051906020012081526020019081526020015f205414610a12576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a099061289d565b60405180910390fd5b60035f815480929190610a24906128e8565b919050555060035460025f8787604051602001610a4292919061281e565b6040516020818303038152906040528051906020012081526020019081526020015f208190555060016040518060c001604052808781526020018681526020018581526020018415158152602001831515815260200160011515815250908060018154018082558091505060019003905f5260205f2090600402015f909190919091505f820151815f019081610ad89190612acc565b506020820151816001019081610aee9190612acc565b50604082015181600201556060820151816003015f6101000a81548160ff02191690831515021790555060808201518160030160016101000a81548160ff02191690831515021790555060a08201518160030160026101000a81548160ff02191690831515021790555050507fefa5bc1bedbee25b04b00855c15a0c180ecb4a2440d4d08296e49561655e2b1c8585858585604051610b91959493929190612b9b565b60405180910390a15050505050565b5f600180549050905090565b6060805f805f8060018781548110610bc757610bc66125f7565b5b905f5260205f2090600402015f0160018881548110610be957610be86125f7565b5b905f5260205f20906004020160010160018981548110610c0c57610c0b6125f7565b5b905f5260205f2090600402016002015460018a81548110610c3057610c2f6125f7565b5b905f5260205f2090600402016003015f9054906101000a900460ff1660018b81548110610c6057610c5f6125f7565b5b905f5260205f20906004020160030160019054906101000a900460ff1660018c81548110610c9157610c906125f7565b5b905f5260205f20906004020160030160029054906101000a900460ff16858054610cba90612651565b80601f0160208091040260200160405190810160405280929190818152602001828054610ce690612651565b8015610d315780601f10610d0857610100808354040283529160200191610d31565b820191905f5260205f20905b815481529060010190602001808311610d1457829003601f168201915b50505050509550848054610d4490612651565b80601f0160208091040260200160405190810160405280929190818152602001828054610d7090612651565b8015610dbb5780601f10610d9257610100808354040283529160200191610dbb565b820191905f5260205f20905b815481529060010190602001808311610d9e57829003601f168201915b5050505050945095509550955095509550955091939550919395565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630e32cf906040518163ffffffff1660e01b8152600401602060405180830381865afa158015610e3f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e639190612695565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ed0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec79061270a565b60405180910390fd5b5f60025f86868686604051602001610eeb9493929190612c26565b6040516020818303038152906040528051906020012081526020019081526020015f205403610f4f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f4690612ca9565b60405180910390fd5b5f610fe085858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f8201169050808301925050505050505084848080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f82011690508083019250505050505050611dcf565b90505f60018281548110610ff757610ff66125f7565b5b905f5260205f20906004020160030160026101000a81548160ff0219169083151502179055507f1196059dd83524bf989fd94bb65808c09dbea2ab791fb6bfa87a0e0aa64b2ea6858585856040516110529493929190612c26565b60405180910390a15050505050565b5f805f60025f878760405160200161107a92919061281e565b6040516020818303038152906040528051906020012081526020019081526020015f2054146110e8576110ad8585611dcf565b9050600181815481106110c3576110c26125f7565b5b905f5260205f20906004020160030160029054906101000a900460ff16915050611172565b5f60025f87866040516020016110ff92919061281e565b6040516020818303038152906040528051906020012081526020019081526020015f20541461116d576111328584611dcf565b905060018181548110611148576111476125f7565b5b905f5260205f20906004020160030160029054906101000a900460ff16915050611172565b5f9150505b9392505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630e32cf906040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111e3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112079190612695565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611274576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161126b9061270a565b60405180910390fd5b61134887878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f8201169050808301925050505050505086868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f8201169050808301925050505050505085858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f82011690508083019250505050505050611061565b611354575f9050611531565b5f8060025f8a8a8a8a6040516020016113709493929190612c26565b6040516020818303038152906040528051906020012081526020019081526020015f2054146114305761142988888080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f8201169050808301925050505050505087878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f82011690508083019250505050505050611dcf565b90506114c3565b6114c088888080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f8201169050808301925050505050505085858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f82011690508083019250505050505050611dcf565b90505b600181815481106114d7576114d66125f7565b5b905f5260205f20906004020160030160029054906101000a900460ff16801561152d57506001818154811061150f5761150e6125f7565b5b905f5260205f20906004020160030160019054906101000a900460ff165b9150505b9695505050505050565b5f611544611e54565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff1614801561158c5750825b90505f60018367ffffffffffffffff161480156115bf57505f3073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156115cd575080155b15611604576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315611651576001855f0160086101000a81548160ff0219169083151502179055505b5f73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16036116bf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116b690612d11565b60405180910390fd5b855f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060056004819055508315611760575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d260016040516117579190612d7b565b60405180910390a15b505050505050565b5f805f60025f878760405160200161178192919061281e565b6040516020818303038152906040528051906020012081526020019081526020015f2054146117e2576117b48585611dcf565b9050600181815481106117ca576117c96125f7565b5b905f5260205f2090600402016002015491505061185f565b5f60025f87866040516020016117f992919061281e565b6040516020818303038152906040528051906020012081526020019081526020015f20541461185a5761182c8584611dcf565b905060018181548110611842576118416125f7565b5b905f5260205f2090600402016002015491505061185f565b5f9150505b9392505050565b5f8061193c89898080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f8201169050808301925050505050505088888080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f8201169050808301925050505050505087878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f82011690508083019250505050505050611768565b90506119488184611d17565b915050979650505050505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630e32cf906040518163ffffffff1660e01b8152600401602060405180830381865afa1580156119c0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906119e49190612695565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611a51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a489061270a565b60405180910390fd5b611b2587878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f8201169050808301925050505050505086868080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f8201169050808301925050505050505085858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f82011690508083019250505050505050611061565b611b31575f9050611d0d565b5f8060025f8a8a8a8a604051602001611b4d9493929190612c26565b6040516020818303038152906040528051906020012081526020019081526020015f205414611c0d57611c0688888080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f8201169050808301925050505050505087878080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f82011690508083019250505050505050611dcf565b9050611ca0565b611c9d88888080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f8201169050808301925050505050505085858080601f0160208091040260200160405190810160405280939291908181526020018383808284375f81840152601f19601f82011690508083019250505050505050611dcf565b90505b60018181548110611cb457611cb36125f7565b5b905f5260205f20906004020160030160029054906101000a900460ff168015611d09575060018181548110611cec57611ceb6125f7565b5b905f5260205f2090600402016003015f9054906101000a900460ff165b9150505b9695505050505050565b5f60038303611d295760019050611dc9565b600182148015611d4f57506001831480611d435750600583145b80611d4e5750600683145b5b15611d5d5760019050611dc9565b600282148015611d8357506002831480611d775750600683145b80611d825750600783145b5b15611d915760019050611dc9565b600382148015611db757506004831480611dab5750600583145b80611db65750600783145b5b15611dc55760019050611dc9565b5f90505b92915050565b5f8060025f8585604051602001611de792919061281e565b6040516020818303038152906040528051906020012081526020019081526020015f205490505f8103611e3d577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff915050611e4e565b600181611e4a9190612d94565b9150505b92915050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b5f819050919050565b611e8d81611e7b565b82525050565b5f602082019050611ea65f830184611e84565b92915050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f8083601f840112611ede57611edd611ebd565b5b8235905067ffffffffffffffff811115611efb57611efa611ec1565b5b602083019150836001820283011115611f1757611f16611ec5565b5b9250929050565b5f805f8060408587031215611f3657611f35611eb5565b5b5f85013567ffffffffffffffff811115611f5357611f52611eb9565b5b611f5f87828801611ec9565b9450945050602085013567ffffffffffffffff811115611f8257611f81611eb9565b5b611f8e87828801611ec9565b925092505092959194509250565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611fd3578082015181840152602081019050611fb8565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611ff882611f9c565b6120028185611fa6565b9350612012818560208601611fb6565b61201b81611fde565b840191505092915050565b5f8115159050919050565b61203a81612026565b82525050565b5f60c0820190508181035f8301526120588189611fee565b9050818103602083015261206c8188611fee565b905061207b6040830187611e84565b6120886060830186612031565b6120956080830185612031565b6120a260a0830184612031565b979650505050505050565b6120b681611e7b565b81146120c0575f80fd5b50565b5f813590506120d1816120ad565b92915050565b5f602082840312156120ec576120eb611eb5565b5b5f6120f9848285016120c3565b91505092915050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61213c82611fde565b810181811067ffffffffffffffff8211171561215b5761215a612106565b5b80604052505050565b5f61216d611eac565b90506121798282612133565b919050565b5f67ffffffffffffffff82111561219857612197612106565b5b6121a182611fde565b9050602081019050919050565b828183375f83830152505050565b5f6121ce6121c98461217e565b612164565b9050828152602081018484840111156121ea576121e9612102565b5b6121f58482856121ae565b509392505050565b5f82601f83011261221157612210611ebd565b5b81356122218482602086016121bc565b91505092915050565b61223381612026565b811461223d575f80fd5b50565b5f8135905061224e8161222a565b92915050565b5f805f805f60a0868803121561226d5761226c611eb5565b5b5f86013567ffffffffffffffff81111561228a57612289611eb9565b5b612296888289016121fd565b955050602086013567ffffffffffffffff8111156122b7576122b6611eb9565b5b6122c3888289016121fd565b94505060406122d4888289016120c3565b93505060606122e588828901612240565b92505060806122f688828901612240565b9150509295509295909350565b5f805f6060848603121561231a57612319611eb5565b5b5f84013567ffffffffffffffff81111561233757612336611eb9565b5b612343868287016121fd565b935050602084013567ffffffffffffffff81111561236457612363611eb9565b5b612370868287016121fd565b925050604084013567ffffffffffffffff81111561239157612390611eb9565b5b61239d868287016121fd565b9150509250925092565b5f6020820190506123ba5f830184612031565b92915050565b5f805f805f80606087890312156123da576123d9611eb5565b5b5f87013567ffffffffffffffff8111156123f7576123f6611eb9565b5b61240389828a01611ec9565b9650965050602087013567ffffffffffffffff81111561242657612425611eb9565b5b61243289828a01611ec9565b9450945050604087013567ffffffffffffffff81111561245557612454611eb9565b5b61246189828a01611ec9565b92509250509295509295509295565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61249982612470565b9050919050565b6124a98161248f565b81146124b3575f80fd5b50565b5f813590506124c4816124a0565b92915050565b5f602082840312156124df576124de611eb5565b5b5f6124ec848285016124b6565b91505092915050565b5f805f805f805f6080888a0312156125105761250f611eb5565b5b5f88013567ffffffffffffffff81111561252d5761252c611eb9565b5b6125398a828b01611ec9565b9750975050602088013567ffffffffffffffff81111561255c5761255b611eb9565b5b6125688a828b01611ec9565b9550955050604088013567ffffffffffffffff81111561258b5761258a611eb9565b5b6125978a828b01611ec9565b935093505060606125aa8a828b016120c3565b91505092959891949750929550565b5f80604083850312156125cf576125ce611eb5565b5b5f6125dc858286016120c3565b92505060206125ed858286016120c3565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061266857607f821691505b60208210810361267b5761267a612624565b5b50919050565b5f8151905061268f816124a0565b92915050565b5f602082840312156126aa576126a9611eb5565b5b5f6126b784828501612681565b91505092915050565b7f696e76616c69642063616c6c65720000000000000000000000000000000000005f82015250565b5f6126f4600e83611fa6565b91506126ff826126c0565b602082019050919050565b5f6020820190508181035f830152612721816126e8565b9050919050565b7f6163636573734c6576656c2076616c75652073686f756c6420626520626574775f8201527f65656e203020746f203700000000000000000000000000000000000000000000602082015250565b5f612782602a83611fa6565b915061278d82612728565b604082019050919050565b5f6020820190508181035f8301526127af81612776565b9050919050565b7f696e76616c6964206163636573732076616c75650000000000000000000000005f82015250565b5f6127ea601483611fa6565b91506127f5826127b6565b602082019050919050565b5f6020820190508181035f830152612817816127de565b9050919050565b5f6040820190508181035f8301526128368185611fee565b9050818103602083015261284a8184611fee565b90509392505050565b7f726f6c652065786973747320666f7220746865206f72670000000000000000005f82015250565b5f612887601783611fa6565b915061289282612853565b602082019050919050565b5f6020820190508181035f8301526128b48161287b565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6128f282611e7b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612924576129236128bb565b5b600182019050919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261298b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612950565b6129958683612950565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6129d06129cb6129c684611e7b565b6129ad565b611e7b565b9050919050565b5f819050919050565b6129e9836129b6565b6129fd6129f5826129d7565b84845461295c565b825550505050565b5f90565b612a11612a05565b612a1c8184846129e0565b505050565b5b81811015612a3f57612a345f82612a09565b600181019050612a22565b5050565b601f821115612a8457612a558161292f565b612a5e84612941565b81016020851015612a6d578190505b612a81612a7985612941565b830182612a21565b50505b505050565b5f82821c905092915050565b5f612aa45f1984600802612a89565b1980831691505092915050565b5f612abc8383612a95565b9150826002028217905092915050565b612ad582611f9c565b67ffffffffffffffff811115612aee57612aed612106565b5b612af88254612651565b612b03828285612a43565b5f60209050601f831160018114612b34575f8415612b22578287015190505b612b2c8582612ab1565b865550612b93565b601f198416612b428661292f565b5f5b82811015612b6957848901518255600182019150602085019450602081019050612b44565b86831015612b865784890151612b82601f891682612a95565b8355505b6001600288020188555050505b505050505050565b5f60a0820190508181035f830152612bb38188611fee565b90508181036020830152612bc78187611fee565b9050612bd66040830186611e84565b612be36060830185612031565b612bf06080830184612031565b9695505050505050565b5f612c058385611fa6565b9350612c128385846121ae565b612c1b83611fde565b840190509392505050565b5f6040820190508181035f830152612c3f818688612bfa565b90508181036020830152612c54818486612bfa565b905095945050505050565b7f726f6c6520646f6573206e6f74206578697374000000000000000000000000005f82015250565b5f612c93601383611fa6565b9150612c9e82612c5f565b602082019050919050565b5f6020820190508181035f830152612cc081612c87565b9050919050565b7f43616e6e6f742073657420746f20656d707479206164647265737300000000005f82015250565b5f612cfb601b83611fa6565b9150612d0682612cc7565b602082019050919050565b5f6020820190508181035f830152612d2881612cef565b9050919050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f612d65612d60612d5b84612d2f565b6129ad565b612d38565b9050919050565b612d7581612d4b565b82525050565b5f602082019050612d8e5f830184612d6c565b92915050565b5f612d9e82611e7b565b9150612da983611e7b565b9250828203905081811115612dc157612dc06128bb565b5b9291505056fea264697066735822122082d19b608d3f3dc145df55f3a571ea0eacd7f3550d3a9cc97c054192551892c964736f6c63430008180033",
}

// RoleManagerABI is the input ABI used to generate the binding from.
// Deprecated: Use RoleManagerMetaData.ABI instead.
var RoleManagerABI = RoleManagerMetaData.ABI

var RoleManagerParsedABI, _ = abi.JSON(strings.NewReader(RoleManagerABI))

// RoleManagerBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use RoleManagerMetaData.Bin instead.
var RoleManagerBin = RoleManagerMetaData.Bin

// DeployRoleManager deploys a new Ethereum contract, binding an instance of RoleManager to it.
func DeployRoleManager(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *RoleManager, error) {
	parsed, err := RoleManagerMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(RoleManagerBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &RoleManager{RoleManagerCaller: RoleManagerCaller{contract: contract}, RoleManagerTransactor: RoleManagerTransactor{contract: contract}, RoleManagerFilterer: RoleManagerFilterer{contract: contract}}, nil
}

// RoleManager is an auto generated Go binding around an Ethereum contract.
type RoleManager struct {
	RoleManagerCaller     // Read-only binding to the contract
	RoleManagerTransactor // Write-only binding to the contract
	RoleManagerFilterer   // Log filterer for contract events
}

// RoleManagerCaller is an auto generated read-only Go binding around an Ethereum contract.
type RoleManagerCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RoleManagerTransactor is an auto generated write-only Go binding around an Ethereum contract.
type RoleManagerTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RoleManagerFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type RoleManagerFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// RoleManagerSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type RoleManagerSession struct {
	Contract     *RoleManager      // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// RoleManagerCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type RoleManagerCallerSession struct {
	Contract *RoleManagerCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts      // Call options to use throughout this session
}

// RoleManagerTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type RoleManagerTransactorSession struct {
	Contract     *RoleManagerTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts      // Transaction auth options to use throughout this session
}

// RoleManagerRaw is an auto generated low-level Go binding around an Ethereum contract.
type RoleManagerRaw struct {
	Contract *RoleManager // Generic contract binding to access the raw methods on
}

// RoleManagerCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type RoleManagerCallerRaw struct {
	Contract *RoleManagerCaller // Generic read-only contract binding to access the raw methods on
}

// RoleManagerTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type RoleManagerTransactorRaw struct {
	Contract *RoleManagerTransactor // Generic write-only contract binding to access the raw methods on
}

// NewRoleManager creates a new instance of RoleManager, bound to a specific deployed contract.
func NewRoleManager(address common.Address, backend bind.ContractBackend) (*RoleManager, error) {
	contract, err := bindRoleManager(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &RoleManager{RoleManagerCaller: RoleManagerCaller{contract: contract}, RoleManagerTransactor: RoleManagerTransactor{contract: contract}, RoleManagerFilterer: RoleManagerFilterer{contract: contract}}, nil
}

// NewRoleManagerCaller creates a new read-only instance of RoleManager, bound to a specific deployed contract.
func NewRoleManagerCaller(address common.Address, caller bind.ContractCaller) (*RoleManagerCaller, error) {
	contract, err := bindRoleManager(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &RoleManagerCaller{contract: contract}, nil
}

// NewRoleManagerTransactor creates a new write-only instance of RoleManager, bound to a specific deployed contract.
func NewRoleManagerTransactor(address common.Address, transactor bind.ContractTransactor) (*RoleManagerTransactor, error) {
	contract, err := bindRoleManager(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &RoleManagerTransactor{contract: contract}, nil
}

// NewRoleManagerFilterer creates a new log filterer instance of RoleManager, bound to a specific deployed contract.
func NewRoleManagerFilterer(address common.Address, filterer bind.ContractFilterer) (*RoleManagerFilterer, error) {
	contract, err := bindRoleManager(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &RoleManagerFilterer{contract: contract}, nil
}

// bindRoleManager binds a generic wrapper to an already deployed contract.
func bindRoleManager(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(RoleManagerABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_RoleManager *RoleManagerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _RoleManager.Contract.RoleManagerCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_RoleManager *RoleManagerRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _RoleManager.Contract.RoleManagerTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_RoleManager *RoleManagerRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _RoleManager.Contract.RoleManagerTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_RoleManager *RoleManagerCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _RoleManager.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_RoleManager *RoleManagerTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _RoleManager.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_RoleManager *RoleManagerTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _RoleManager.Contract.contract.Transact(opts, method, params...)
}

// GetAccessLevelForUnconfiguredAccount is a free data retrieval call binding the contract method 0x0dca12f6.
//
// Solidity: function getAccessLevelForUnconfiguredAccount() view returns(uint256)
func (_RoleManager *RoleManagerCaller) GetAccessLevelForUnconfiguredAccount(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _RoleManager.contract.Call(opts, &out, "getAccessLevelForUnconfiguredAccount")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetAccessLevelForUnconfiguredAccount is a free data retrieval call binding the contract method 0x0dca12f6.
//
// Solidity: function getAccessLevelForUnconfiguredAccount() view returns(uint256)
func (_RoleManager *RoleManagerSession) GetAccessLevelForUnconfiguredAccount() (*big.Int, error) {
	return _RoleManager.Contract.GetAccessLevelForUnconfiguredAccount(&_RoleManager.CallOpts)
}

// GetAccessLevelForUnconfiguredAccount is a free data retrieval call binding the contract method 0x0dca12f6.
//
// Solidity: function getAccessLevelForUnconfiguredAccount() view returns(uint256)
func (_RoleManager *RoleManagerCallerSession) GetAccessLevelForUnconfiguredAccount() (*big.Int, error) {
	return _RoleManager.Contract.GetAccessLevelForUnconfiguredAccount(&_RoleManager.CallOpts)
}

// GetNumberOfRoles is a free data retrieval call binding the contract method 0x87f55d31.
//
// Solidity: function getNumberOfRoles() view returns(uint256)
func (_RoleManager *RoleManagerCaller) GetNumberOfRoles(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _RoleManager.contract.Call(opts, &out, "getNumberOfRoles")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetNumberOfRoles is a free data retrieval call binding the contract method 0x87f55d31.
//
// Solidity: function getNumberOfRoles() view returns(uint256)
func (_RoleManager *RoleManagerSession) GetNumberOfRoles() (*big.Int, error) {
	return _RoleManager.Contract.GetNumberOfRoles(&_RoleManager.CallOpts)
}

// GetNumberOfRoles is a free data retrieval call binding the contract method 0x87f55d31.
//
// Solidity: function getNumberOfRoles() view returns(uint256)
func (_RoleManager *RoleManagerCallerSession) GetNumberOfRoles() (*big.Int, error) {
	return _RoleManager.Contract.GetNumberOfRoles(&_RoleManager.CallOpts)
}

// GetRoleDetails is a free data retrieval call binding the contract method 0x1870aba3.
//
// Solidity: function getRoleDetails(string _roleId, string _orgId) view returns(string roleId, string orgId, uint256 accessType, bool voter, bool admin, bool active)
func (_RoleManager *RoleManagerCaller) GetRoleDetails(opts *bind.CallOpts, _roleId string, _orgId string) (struct {
	RoleId     string
	OrgId      string
	AccessType *big.Int
	Voter      bool
	Admin      bool
	Active     bool
}, error) {
	var out []interface{}
	err := _RoleManager.contract.Call(opts, &out, "getRoleDetails", _roleId, _orgId)

	outstruct := new(struct {
		RoleId     string
		OrgId      string
		AccessType *big.Int
		Voter      bool
		Admin      bool
		Active     bool
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.RoleId = *abi.ConvertType(out[0], new(string)).(*string)
	outstruct.OrgId = *abi.ConvertType(out[1], new(string)).(*string)
	outstruct.AccessType = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)
	outstruct.Voter = *abi.ConvertType(out[3], new(bool)).(*bool)
	outstruct.Admin = *abi.ConvertType(out[4], new(bool)).(*bool)
	outstruct.Active = *abi.ConvertType(out[5], new(bool)).(*bool)

	return *outstruct, err

}

// GetRoleDetails is a free data retrieval call binding the contract method 0x1870aba3.
//
// Solidity: function getRoleDetails(string _roleId, string _orgId) view returns(string roleId, string orgId, uint256 accessType, bool voter, bool admin, bool active)
func (_RoleManager *RoleManagerSession) GetRoleDetails(_roleId string, _orgId string) (struct {
	RoleId     string
	OrgId      string
	AccessType *big.Int
	Voter      bool
	Admin      bool
	Active     bool
}, error) {
	return _RoleManager.Contract.GetRoleDetails(&_RoleManager.CallOpts, _roleId, _orgId)
}

// GetRoleDetails is a free data retrieval call binding the contract method 0x1870aba3.
//
// Solidity: function getRoleDetails(string _roleId, string _orgId) view returns(string roleId, string orgId, uint256 accessType, bool voter, bool admin, bool active)
func (_RoleManager *RoleManagerCallerSession) GetRoleDetails(_roleId string, _orgId string) (struct {
	RoleId     string
	OrgId      string
	AccessType *big.Int
	Voter      bool
	Admin      bool
	Active     bool
}, error) {
	return _RoleManager.Contract.GetRoleDetails(&_RoleManager.CallOpts, _roleId, _orgId)
}

// GetRoleDetailsFromIndex is a free data retrieval call binding the contract method 0xa451d4a8.
//
// Solidity: function getRoleDetailsFromIndex(uint256 _rIndex) view returns(string roleId, string orgId, uint256 accessType, bool voter, bool admin, bool active)
func (_RoleManager *RoleManagerCaller) GetRoleDetailsFromIndex(opts *bind.CallOpts, _rIndex *big.Int) (struct {
	RoleId     string
	OrgId      string
	AccessType *big.Int
	Voter      bool
	Admin      bool
	Active     bool
}, error) {
	var out []interface{}
	err := _RoleManager.contract.Call(opts, &out, "getRoleDetailsFromIndex", _rIndex)

	outstruct := new(struct {
		RoleId     string
		OrgId      string
		AccessType *big.Int
		Voter      bool
		Admin      bool
		Active     bool
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.RoleId = *abi.ConvertType(out[0], new(string)).(*string)
	outstruct.OrgId = *abi.ConvertType(out[1], new(string)).(*string)
	outstruct.AccessType = *abi.ConvertType(out[2], new(*big.Int)).(**big.Int)
	outstruct.Voter = *abi.ConvertType(out[3], new(bool)).(*bool)
	outstruct.Admin = *abi.ConvertType(out[4], new(bool)).(*bool)
	outstruct.Active = *abi.ConvertType(out[5], new(bool)).(*bool)

	return *outstruct, err

}

// GetRoleDetailsFromIndex is a free data retrieval call binding the contract method 0xa451d4a8.
//
// Solidity: function getRoleDetailsFromIndex(uint256 _rIndex) view returns(string roleId, string orgId, uint256 accessType, bool voter, bool admin, bool active)
func (_RoleManager *RoleManagerSession) GetRoleDetailsFromIndex(_rIndex *big.Int) (struct {
	RoleId     string
	OrgId      string
	AccessType *big.Int
	Voter      bool
	Admin      bool
	Active     bool
}, error) {
	return _RoleManager.Contract.GetRoleDetailsFromIndex(&_RoleManager.CallOpts, _rIndex)
}

// GetRoleDetailsFromIndex is a free data retrieval call binding the contract method 0xa451d4a8.
//
// Solidity: function getRoleDetailsFromIndex(uint256 _rIndex) view returns(string roleId, string orgId, uint256 accessType, bool voter, bool admin, bool active)
func (_RoleManager *RoleManagerCallerSession) GetRoleDetailsFromIndex(_rIndex *big.Int) (struct {
	RoleId     string
	OrgId      string
	AccessType *big.Int
	Voter      bool
	Admin      bool
	Active     bool
}, error) {
	return _RoleManager.Contract.GetRoleDetailsFromIndex(&_RoleManager.CallOpts, _rIndex)
}

// IsAdminRole is a free data retrieval call binding the contract method 0xbe322e54.
//
// Solidity: function isAdminRole(string _roleId, string _orgId, string _ultParent) view returns(bool)
func (_RoleManager *RoleManagerCaller) IsAdminRole(opts *bind.CallOpts, _roleId string, _orgId string, _ultParent string) (bool, error) {
	var out []interface{}
	err := _RoleManager.contract.Call(opts, &out, "isAdminRole", _roleId, _orgId, _ultParent)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsAdminRole is a free data retrieval call binding the contract method 0xbe322e54.
//
// Solidity: function isAdminRole(string _roleId, string _orgId, string _ultParent) view returns(bool)
func (_RoleManager *RoleManagerSession) IsAdminRole(_roleId string, _orgId string, _ultParent string) (bool, error) {
	return _RoleManager.Contract.IsAdminRole(&_RoleManager.CallOpts, _roleId, _orgId, _ultParent)
}

// IsAdminRole is a free data retrieval call binding the contract method 0xbe322e54.
//
// Solidity: function isAdminRole(string _roleId, string _orgId, string _ultParent) view returns(bool)
func (_RoleManager *RoleManagerCallerSession) IsAdminRole(_roleId string, _orgId string, _ultParent string) (bool, error) {
	return _RoleManager.Contract.IsAdminRole(&_RoleManager.CallOpts, _roleId, _orgId, _ultParent)
}

// IsTransactionAllowedBasedOnRoleAccess is a free data retrieval call binding the contract method 0xe4604b61.
//
// Solidity: function isTransactionAllowedBasedOnRoleAccess(uint256 access, uint256 _typeOfTxn) pure returns(bool)
func (_RoleManager *RoleManagerCaller) IsTransactionAllowedBasedOnRoleAccess(opts *bind.CallOpts, access *big.Int, _typeOfTxn *big.Int) (bool, error) {
	var out []interface{}
	err := _RoleManager.contract.Call(opts, &out, "isTransactionAllowedBasedOnRoleAccess", access, _typeOfTxn)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsTransactionAllowedBasedOnRoleAccess is a free data retrieval call binding the contract method 0xe4604b61.
//
// Solidity: function isTransactionAllowedBasedOnRoleAccess(uint256 access, uint256 _typeOfTxn) pure returns(bool)
func (_RoleManager *RoleManagerSession) IsTransactionAllowedBasedOnRoleAccess(access *big.Int, _typeOfTxn *big.Int) (bool, error) {
	return _RoleManager.Contract.IsTransactionAllowedBasedOnRoleAccess(&_RoleManager.CallOpts, access, _typeOfTxn)
}

// IsTransactionAllowedBasedOnRoleAccess is a free data retrieval call binding the contract method 0xe4604b61.
//
// Solidity: function isTransactionAllowedBasedOnRoleAccess(uint256 access, uint256 _typeOfTxn) pure returns(bool)
func (_RoleManager *RoleManagerCallerSession) IsTransactionAllowedBasedOnRoleAccess(access *big.Int, _typeOfTxn *big.Int) (bool, error) {
	return _RoleManager.Contract.IsTransactionAllowedBasedOnRoleAccess(&_RoleManager.CallOpts, access, _typeOfTxn)
}

// IsVoterRole is a free data retrieval call binding the contract method 0xdeb16ba7.
//
// Solidity: function isVoterRole(string _roleId, string _orgId, string _ultParent) view returns(bool)
func (_RoleManager *RoleManagerCaller) IsVoterRole(opts *bind.CallOpts, _roleId string, _orgId string, _ultParent string) (bool, error) {
	var out []interface{}
	err := _RoleManager.contract.Call(opts, &out, "isVoterRole", _roleId, _orgId, _ultParent)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsVoterRole is a free data retrieval call binding the contract method 0xdeb16ba7.
//
// Solidity: function isVoterRole(string _roleId, string _orgId, string _ultParent) view returns(bool)
func (_RoleManager *RoleManagerSession) IsVoterRole(_roleId string, _orgId string, _ultParent string) (bool, error) {
	return _RoleManager.Contract.IsVoterRole(&_RoleManager.CallOpts, _roleId, _orgId, _ultParent)
}

// IsVoterRole is a free data retrieval call binding the contract method 0xdeb16ba7.
//
// Solidity: function isVoterRole(string _roleId, string _orgId, string _ultParent) view returns(bool)
func (_RoleManager *RoleManagerCallerSession) IsVoterRole(_roleId string, _orgId string, _ultParent string) (bool, error) {
	return _RoleManager.Contract.IsVoterRole(&_RoleManager.CallOpts, _roleId, _orgId, _ultParent)
}

// RoleAccess is a free data retrieval call binding the contract method 0xcfc83dfa.
//
// Solidity: function roleAccess(string _roleId, string _orgId, string _ultParent) view returns(uint256)
func (_RoleManager *RoleManagerCaller) RoleAccess(opts *bind.CallOpts, _roleId string, _orgId string, _ultParent string) (*big.Int, error) {
	var out []interface{}
	err := _RoleManager.contract.Call(opts, &out, "roleAccess", _roleId, _orgId, _ultParent)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// RoleAccess is a free data retrieval call binding the contract method 0xcfc83dfa.
//
// Solidity: function roleAccess(string _roleId, string _orgId, string _ultParent) view returns(uint256)
func (_RoleManager *RoleManagerSession) RoleAccess(_roleId string, _orgId string, _ultParent string) (*big.Int, error) {
	return _RoleManager.Contract.RoleAccess(&_RoleManager.CallOpts, _roleId, _orgId, _ultParent)
}

// RoleAccess is a free data retrieval call binding the contract method 0xcfc83dfa.
//
// Solidity: function roleAccess(string _roleId, string _orgId, string _ultParent) view returns(uint256)
func (_RoleManager *RoleManagerCallerSession) RoleAccess(_roleId string, _orgId string, _ultParent string) (*big.Int, error) {
	return _RoleManager.Contract.RoleAccess(&_RoleManager.CallOpts, _roleId, _orgId, _ultParent)
}

// RoleExists is a free data retrieval call binding the contract method 0xabf5739f.
//
// Solidity: function roleExists(string _roleId, string _orgId, string _ultParent) view returns(bool)
func (_RoleManager *RoleManagerCaller) RoleExists(opts *bind.CallOpts, _roleId string, _orgId string, _ultParent string) (bool, error) {
	var out []interface{}
	err := _RoleManager.contract.Call(opts, &out, "roleExists", _roleId, _orgId, _ultParent)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// RoleExists is a free data retrieval call binding the contract method 0xabf5739f.
//
// Solidity: function roleExists(string _roleId, string _orgId, string _ultParent) view returns(bool)
func (_RoleManager *RoleManagerSession) RoleExists(_roleId string, _orgId string, _ultParent string) (bool, error) {
	return _RoleManager.Contract.RoleExists(&_RoleManager.CallOpts, _roleId, _orgId, _ultParent)
}

// RoleExists is a free data retrieval call binding the contract method 0xabf5739f.
//
// Solidity: function roleExists(string _roleId, string _orgId, string _ultParent) view returns(bool)
func (_RoleManager *RoleManagerCallerSession) RoleExists(_roleId string, _orgId string, _ultParent string) (bool, error) {
	return _RoleManager.Contract.RoleExists(&_RoleManager.CallOpts, _roleId, _orgId, _ultParent)
}

// TransactionAllowed is a free data retrieval call binding the contract method 0xd1f77866.
//
// Solidity: function transactionAllowed(string _roleId, string _orgId, string _ultParent, uint256 _typeOfTxn) view returns(bool)
func (_RoleManager *RoleManagerCaller) TransactionAllowed(opts *bind.CallOpts, _roleId string, _orgId string, _ultParent string, _typeOfTxn *big.Int) (bool, error) {
	var out []interface{}
	err := _RoleManager.contract.Call(opts, &out, "transactionAllowed", _roleId, _orgId, _ultParent, _typeOfTxn)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// TransactionAllowed is a free data retrieval call binding the contract method 0xd1f77866.
//
// Solidity: function transactionAllowed(string _roleId, string _orgId, string _ultParent, uint256 _typeOfTxn) view returns(bool)
func (_RoleManager *RoleManagerSession) TransactionAllowed(_roleId string, _orgId string, _ultParent string, _typeOfTxn *big.Int) (bool, error) {
	return _RoleManager.Contract.TransactionAllowed(&_RoleManager.CallOpts, _roleId, _orgId, _ultParent, _typeOfTxn)
}

// TransactionAllowed is a free data retrieval call binding the contract method 0xd1f77866.
//
// Solidity: function transactionAllowed(string _roleId, string _orgId, string _ultParent, uint256 _typeOfTxn) view returns(bool)
func (_RoleManager *RoleManagerCallerSession) TransactionAllowed(_roleId string, _orgId string, _ultParent string, _typeOfTxn *big.Int) (bool, error) {
	return _RoleManager.Contract.TransactionAllowed(&_RoleManager.CallOpts, _roleId, _orgId, _ultParent, _typeOfTxn)
}

// AddRole is a paid mutator transaction binding the contract method 0x7b713579.
//
// Solidity: function addRole(string _roleId, string _orgId, uint256 _baseAccess, bool _isVoter, bool _isAdmin) returns()
func (_RoleManager *RoleManagerTransactor) AddRole(opts *bind.TransactOpts, _roleId string, _orgId string, _baseAccess *big.Int, _isVoter bool, _isAdmin bool) (*types.Transaction, error) {
	return _RoleManager.contract.Transact(opts, "addRole", _roleId, _orgId, _baseAccess, _isVoter, _isAdmin)
}

// AddRole is a paid mutator transaction binding the contract method 0x7b713579.
//
// Solidity: function addRole(string _roleId, string _orgId, uint256 _baseAccess, bool _isVoter, bool _isAdmin) returns()
func (_RoleManager *RoleManagerSession) AddRole(_roleId string, _orgId string, _baseAccess *big.Int, _isVoter bool, _isAdmin bool) (*types.Transaction, error) {
	return _RoleManager.Contract.AddRole(&_RoleManager.TransactOpts, _roleId, _orgId, _baseAccess, _isVoter, _isAdmin)
}

// AddRole is a paid mutator transaction binding the contract method 0x7b713579.
//
// Solidity: function addRole(string _roleId, string _orgId, uint256 _baseAccess, bool _isVoter, bool _isAdmin) returns()
func (_RoleManager *RoleManagerTransactorSession) AddRole(_roleId string, _orgId string, _baseAccess *big.Int, _isVoter bool, _isAdmin bool) (*types.Transaction, error) {
	return _RoleManager.Contract.AddRole(&_RoleManager.TransactOpts, _roleId, _orgId, _baseAccess, _isVoter, _isAdmin)
}

// Initialize is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address _permUpgradable) returns()
func (_RoleManager *RoleManagerTransactor) Initialize(opts *bind.TransactOpts, _permUpgradable common.Address) (*types.Transaction, error) {
	return _RoleManager.contract.Transact(opts, "initialize", _permUpgradable)
}

// Initialize is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address _permUpgradable) returns()
func (_RoleManager *RoleManagerSession) Initialize(_permUpgradable common.Address) (*types.Transaction, error) {
	return _RoleManager.Contract.Initialize(&_RoleManager.TransactOpts, _permUpgradable)
}

// Initialize is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address _permUpgradable) returns()
func (_RoleManager *RoleManagerTransactorSession) Initialize(_permUpgradable common.Address) (*types.Transaction, error) {
	return _RoleManager.Contract.Initialize(&_RoleManager.TransactOpts, _permUpgradable)
}

// RemoveRole is a paid mutator transaction binding the contract method 0xa6343012.
//
// Solidity: function removeRole(string _roleId, string _orgId) returns()
func (_RoleManager *RoleManagerTransactor) RemoveRole(opts *bind.TransactOpts, _roleId string, _orgId string) (*types.Transaction, error) {
	return _RoleManager.contract.Transact(opts, "removeRole", _roleId, _orgId)
}

// RemoveRole is a paid mutator transaction binding the contract method 0xa6343012.
//
// Solidity: function removeRole(string _roleId, string _orgId) returns()
func (_RoleManager *RoleManagerSession) RemoveRole(_roleId string, _orgId string) (*types.Transaction, error) {
	return _RoleManager.Contract.RemoveRole(&_RoleManager.TransactOpts, _roleId, _orgId)
}

// RemoveRole is a paid mutator transaction binding the contract method 0xa6343012.
//
// Solidity: function removeRole(string _roleId, string _orgId) returns()
func (_RoleManager *RoleManagerTransactorSession) RemoveRole(_roleId string, _orgId string) (*types.Transaction, error) {
	return _RoleManager.Contract.RemoveRole(&_RoleManager.TransactOpts, _roleId, _orgId)
}

// SetAccessLevelForUnconfiguredAccount is a paid mutator transaction binding the contract method 0x3965c04a.
//
// Solidity: function setAccessLevelForUnconfiguredAccount(uint256 _accessLevel) returns()
func (_RoleManager *RoleManagerTransactor) SetAccessLevelForUnconfiguredAccount(opts *bind.TransactOpts, _accessLevel *big.Int) (*types.Transaction, error) {
	return _RoleManager.contract.Transact(opts, "setAccessLevelForUnconfiguredAccount", _accessLevel)
}

// SetAccessLevelForUnconfiguredAccount is a paid mutator transaction binding the contract method 0x3965c04a.
//
// Solidity: function setAccessLevelForUnconfiguredAccount(uint256 _accessLevel) returns()
func (_RoleManager *RoleManagerSession) SetAccessLevelForUnconfiguredAccount(_accessLevel *big.Int) (*types.Transaction, error) {
	return _RoleManager.Contract.SetAccessLevelForUnconfiguredAccount(&_RoleManager.TransactOpts, _accessLevel)
}

// SetAccessLevelForUnconfiguredAccount is a paid mutator transaction binding the contract method 0x3965c04a.
//
// Solidity: function setAccessLevelForUnconfiguredAccount(uint256 _accessLevel) returns()
func (_RoleManager *RoleManagerTransactorSession) SetAccessLevelForUnconfiguredAccount(_accessLevel *big.Int) (*types.Transaction, error) {
	return _RoleManager.Contract.SetAccessLevelForUnconfiguredAccount(&_RoleManager.TransactOpts, _accessLevel)
}

// RoleManagerInitializedRolesIterator is returned from FilterInitializedRoles and is used to iterate over the raw logs and unpacked data for InitializedRoles events raised by the RoleManager contract.
type RoleManagerInitializedRolesIterator struct {
	Event *RoleManagerInitializedRoles // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *RoleManagerInitializedRolesIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(RoleManagerInitializedRoles)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(RoleManagerInitializedRoles)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *RoleManagerInitializedRolesIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *RoleManagerInitializedRolesIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// RoleManagerInitializedRoles represents a InitializedRoles event raised by the RoleManager contract.
type RoleManagerInitializedRoles struct {
	Version uint64
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitializedRoles is a free log retrieval operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_RoleManager *RoleManagerFilterer) FilterInitializedRoles(opts *bind.FilterOpts) (*RoleManagerInitializedRolesIterator, error) {

	logs, sub, err := _RoleManager.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &RoleManagerInitializedRolesIterator{contract: _RoleManager.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

var InitializedRolesTopicHash = "0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2"

// WatchInitializedRoles is a free log subscription operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_RoleManager *RoleManagerFilterer) WatchInitializedRoles(opts *bind.WatchOpts, sink chan<- *RoleManagerInitializedRoles) (event.Subscription, error) {

	logs, sub, err := _RoleManager.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(RoleManagerInitializedRoles)
				if err := _RoleManager.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitializedRoles is a log parse operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_RoleManager *RoleManagerFilterer) ParseInitializedRoles(log types.Log) (*RoleManagerInitializedRoles, error) {
	event := new(RoleManagerInitializedRoles)
	if err := _RoleManager.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// RoleManagerRoleCreatedIterator is returned from FilterRoleCreated and is used to iterate over the raw logs and unpacked data for RoleCreated events raised by the RoleManager contract.
type RoleManagerRoleCreatedIterator struct {
	Event *RoleManagerRoleCreated // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *RoleManagerRoleCreatedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(RoleManagerRoleCreated)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(RoleManagerRoleCreated)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *RoleManagerRoleCreatedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *RoleManagerRoleCreatedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// RoleManagerRoleCreated represents a RoleCreated event raised by the RoleManager contract.
type RoleManagerRoleCreated struct {
	RoleId     string
	OrgId      string
	BaseAccess *big.Int
	IsVoter    bool
	IsAdmin    bool
	Raw        types.Log // Blockchain specific contextual infos
}

// FilterRoleCreated is a free log retrieval operation binding the contract event 0xefa5bc1bedbee25b04b00855c15a0c180ecb4a2440d4d08296e49561655e2b1c.
//
// Solidity: event RoleCreated(string _roleId, string _orgId, uint256 _baseAccess, bool _isVoter, bool _isAdmin)
func (_RoleManager *RoleManagerFilterer) FilterRoleCreated(opts *bind.FilterOpts) (*RoleManagerRoleCreatedIterator, error) {

	logs, sub, err := _RoleManager.contract.FilterLogs(opts, "RoleCreated")
	if err != nil {
		return nil, err
	}
	return &RoleManagerRoleCreatedIterator{contract: _RoleManager.contract, event: "RoleCreated", logs: logs, sub: sub}, nil
}

var RoleCreatedTopicHash = "0xefa5bc1bedbee25b04b00855c15a0c180ecb4a2440d4d08296e49561655e2b1c"

// WatchRoleCreated is a free log subscription operation binding the contract event 0xefa5bc1bedbee25b04b00855c15a0c180ecb4a2440d4d08296e49561655e2b1c.
//
// Solidity: event RoleCreated(string _roleId, string _orgId, uint256 _baseAccess, bool _isVoter, bool _isAdmin)
func (_RoleManager *RoleManagerFilterer) WatchRoleCreated(opts *bind.WatchOpts, sink chan<- *RoleManagerRoleCreated) (event.Subscription, error) {

	logs, sub, err := _RoleManager.contract.WatchLogs(opts, "RoleCreated")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(RoleManagerRoleCreated)
				if err := _RoleManager.contract.UnpackLog(event, "RoleCreated", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRoleCreated is a log parse operation binding the contract event 0xefa5bc1bedbee25b04b00855c15a0c180ecb4a2440d4d08296e49561655e2b1c.
//
// Solidity: event RoleCreated(string _roleId, string _orgId, uint256 _baseAccess, bool _isVoter, bool _isAdmin)
func (_RoleManager *RoleManagerFilterer) ParseRoleCreated(log types.Log) (*RoleManagerRoleCreated, error) {
	event := new(RoleManagerRoleCreated)
	if err := _RoleManager.contract.UnpackLog(event, "RoleCreated", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// RoleManagerRoleRevokedIterator is returned from FilterRoleRevoked and is used to iterate over the raw logs and unpacked data for RoleRevoked events raised by the RoleManager contract.
type RoleManagerRoleRevokedIterator struct {
	Event *RoleManagerRoleRevoked // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *RoleManagerRoleRevokedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(RoleManagerRoleRevoked)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(RoleManagerRoleRevoked)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *RoleManagerRoleRevokedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *RoleManagerRoleRevokedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// RoleManagerRoleRevoked represents a RoleRevoked event raised by the RoleManager contract.
type RoleManagerRoleRevoked struct {
	RoleId string
	OrgId  string
	Raw    types.Log // Blockchain specific contextual infos
}

// FilterRoleRevoked is a free log retrieval operation binding the contract event 0x1196059dd83524bf989fd94bb65808c09dbea2ab791fb6bfa87a0e0aa64b2ea6.
//
// Solidity: event RoleRevoked(string _roleId, string _orgId)
func (_RoleManager *RoleManagerFilterer) FilterRoleRevoked(opts *bind.FilterOpts) (*RoleManagerRoleRevokedIterator, error) {

	logs, sub, err := _RoleManager.contract.FilterLogs(opts, "RoleRevoked")
	if err != nil {
		return nil, err
	}
	return &RoleManagerRoleRevokedIterator{contract: _RoleManager.contract, event: "RoleRevoked", logs: logs, sub: sub}, nil
}

var RoleRevokedTopicHash = "0x1196059dd83524bf989fd94bb65808c09dbea2ab791fb6bfa87a0e0aa64b2ea6"

// WatchRoleRevoked is a free log subscription operation binding the contract event 0x1196059dd83524bf989fd94bb65808c09dbea2ab791fb6bfa87a0e0aa64b2ea6.
//
// Solidity: event RoleRevoked(string _roleId, string _orgId)
func (_RoleManager *RoleManagerFilterer) WatchRoleRevoked(opts *bind.WatchOpts, sink chan<- *RoleManagerRoleRevoked) (event.Subscription, error) {

	logs, sub, err := _RoleManager.contract.WatchLogs(opts, "RoleRevoked")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(RoleManagerRoleRevoked)
				if err := _RoleManager.contract.UnpackLog(event, "RoleRevoked", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseRoleRevoked is a log parse operation binding the contract event 0x1196059dd83524bf989fd94bb65808c09dbea2ab791fb6bfa87a0e0aa64b2ea6.
//
// Solidity: event RoleRevoked(string _roleId, string _orgId)
func (_RoleManager *RoleManagerFilterer) ParseRoleRevoked(log types.Log) (*RoleManagerRoleRevoked, error) {
	event := new(RoleManagerRoleRevoked)
	if err := _RoleManager.contract.UnpackLog(event, "RoleRevoked", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
