// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package bind

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// PermInterfaceMetaData contains all meta data concerning the PermInterface contract.
var PermInterfaceMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_acct\",\"type\":\"address\"}],\"name\":\"addAdminAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_enodeId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_ip\",\"type\":\"string\"},{\"internalType\":\"uint16\",\"name\":\"_port\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_raftport\",\"type\":\"uint16\"}],\"name\":\"addAdminNode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_contractKey\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"}],\"name\":\"addContractWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_roleId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_access\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_voter\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"_admin\",\"type\":\"bool\"}],\"name\":\"addNewRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_enodeId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_ip\",\"type\":\"string\"},{\"internalType\":\"uint16\",\"name\":\"_port\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_raftport\",\"type\":\"uint16\"}],\"name\":\"addNode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_enodeId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_ip\",\"type\":\"string\"},{\"internalType\":\"uint16\",\"name\":\"_port\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_raftport\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"addOrg\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_pOrgId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_enodeId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_ip\",\"type\":\"string\"},{\"internalType\":\"uint16\",\"name\":\"_port\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_raftport\",\"type\":\"uint16\"}],\"name\":\"addSubOrg\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"approveAdminRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"approveBlacklistedAccountRecovery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_enodeId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_ip\",\"type\":\"string\"},{\"internalType\":\"uint16\",\"name\":\"_port\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_raftport\",\"type\":\"uint16\"}],\"name\":\"approveBlacklistedNodeRecovery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_enodeId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_ip\",\"type\":\"string\"},{\"internalType\":\"uint16\",\"name\":\"_port\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_raftport\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"approveOrg\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_action\",\"type\":\"uint256\"}],\"name\":\"approveOrgStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_roleId\",\"type\":\"string\"}],\"name\":\"assignAccountRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_roleId\",\"type\":\"string\"}],\"name\":\"assignAdminRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_enodeId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_ip\",\"type\":\"string\"},{\"internalType\":\"uint16\",\"name\":\"_port\",\"type\":\"uint16\"}],\"name\":\"connectionAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAccessLevelForUnconfiguredAccount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNetworkBootStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"}],\"name\":\"getPendingOp\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPermissionsImpl\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_breadth\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_depth\",\"type\":\"uint256\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_permImplUpgradeable\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isNetworkAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"}],\"name\":\"isOrgAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_roleId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"}],\"name\":\"removeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_contractAddress\",\"type\":\"address\"}],\"name\":\"revokeContractWhitelistByAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_contractKey\",\"type\":\"string\"}],\"name\":\"revokeContractWhitelistByKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_accessLevel\",\"type\":\"uint256\"}],\"name\":\"setAccessLevelForUnconfiguredAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_isIpValidationEnabled\",\"type\":\"bool\"}],\"name\":\"setIpValidation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_permImplementation\",\"type\":\"address\"}],\"name\":\"setPermImplementation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_nwAdminOrg\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_nwAdminRole\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_oAdminRole\",\"type\":\"string\"}],\"name\":\"setPolicy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"startBlacklistedAccountRecovery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_enodeId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_ip\",\"type\":\"string\"},{\"internalType\":\"uint16\",\"name\":\"_port\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_raftport\",\"type\":\"uint16\"}],\"name\":\"startBlacklistedNodeRecovery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"transactionAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_action\",\"type\":\"uint256\"}],\"name\":\"updateAccountStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateNetworkBootStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_enodeId\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_ip\",\"type\":\"string\"},{\"internalType\":\"uint16\",\"name\":\"_port\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"_raftport\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"_action\",\"type\":\"uint256\"}],\"name\":\"updateNodeStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_action\",\"type\":\"uint256\"}],\"name\":\"updateOrgStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_orgId\",\"type\":\"string\"}],\"name\":\"validateAccount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "0x608060405234801561000f575f80fd5b506138168061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610230575f3560e01c806351f604c31161012e5780639fc666b2116100b6578063c4d66de81161007a578063c4d66de814610628578063d1aa0c2014610644578063ef5f719614610674578063f346a3a714610690578063fa279d61146106c357610230565b80639fc666b21461059c578063a5843f08146105b8578063a6343012146105d4578063a97914bf146105f0578063bb3b6e801461060c57610230565b806384b7a84a116100fd57806384b7a84a146104e85780638683c7fe1461050457806391ba3f9614610520578063936421d51461053c5780639bd381011461056c57610230565b806351f604c31461046457806358dcff71146104805780635be9672c1461049c5780636b568d76146104b857610230565b80633968b9e3116101bc57806345a59e5b1161018057806345a59e5b146103c25780634cbfa82e146103f25780634fe57e7a14610410578063511bbd9f1461042c578063513a32771461044857610230565b80633968b9e3146103345780633e239b23146103505780633f9be4971461036c57806343de646c1461038857806344478e79146103a457610230565b80632e125a6c116102035780632e125a6c146102a85780632f7f0a12146102c457806331459617146102e057806331e8a9d9146102fc5780633965c04a1461031857610230565b806303ed6933146102345780630dca12f61461025257806316724c44146102705780631b6102201461028c575b5f80fd5b61023c6106df565b6040516102499190611eee565b60405180910390f35b61025a610706565b6040516102679190611f1f565b60405180910390f35b61028a60048036038101906102859190611fd4565b610799565b005b6102a660048036038101906102a19190612031565b610829565b005b6102c260048036038101906102bd9190612250565b6108c0565b005b6102de60048036038101906102d99190612349565b610959565b005b6102fa60048036038101906102f59190611fd4565b6109ef565b005b610316600480360381019061031191906123da565b610a7f565b005b610332600480360381019061032d919061242f565b610b09565b005b61034e6004803603810190610349919061245a565b610b93565b005b61036a60048036038101906103659190611fd4565b610c1d565b005b610386600480360381019061038191906124a1565b610cad565b005b6103a2600480360381019061039d919061257e565b610d46565b005b6103ac610ddc565b6040516103b99190612629565b60405180910390f35b6103dc60048036038101906103d79190612642565b610e70565b6040516103e99190612629565b60405180910390f35b6103fa610f1c565b6040516104079190612629565b60405180910390f35b61042a600480360381019061042591906123da565b610faf565b005b610446600480360381019061044191906123da565b611037565b005b610462600480360381019061045d91906126d3565b611108565b005b61047e600480360381019061047991906127da565b6111a1565b005b61049a60048036038101906104959190612891565b61123d565b005b6104b660048036038101906104b1919061295c565b6112d3565b005b6104d260048036038101906104cd91906129b9565b611363565b6040516104df9190612629565b60405180910390f35b61050260048036038101906104fd9190612a16565b611409565b005b61051e60048036038101906105199190612a87565b61149c565b005b61053a60048036038101906105359190612891565b61152d565b005b61055660048036038101906105519190612b78565b6115c3565b6040516105639190612629565b60405180910390f35b610586600480360381019061058191906129b9565b611675565b6040516105939190612629565b60405180910390f35b6105b660048036038101906105b19190612c22565b61171b565b005b6105d260048036038101906105cd9190612c4d565b6117a3565b005b6105ee60048036038101906105e99190612c8b565b61182e565b005b61060a60048036038101906106059190611fd4565b6118c1565b005b6106266004803603810190610621919061295c565b611951565b005b610642600480360381019061063d91906123da565b6119e1565b005b61065e600480360381019061065991906123da565b611c07565b60405161066b9190612629565b60405180910390f35b61068e60048036038101906106899190612891565b611ca7565b005b6106aa60048036038101906106a59190612d09565b611d3d565b6040516106ba9493929190612dce565b60405180910390f35b6106dd60048036038101906106d891906126d3565b611def565b005b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630dca12f66040518163ffffffff1660e01b8152600401602060405180830381865afa158015610770573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107949190612e33565b905090565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166388843041848484336040518563ffffffff1660e01b81526004016107f79493929190612e8a565b5f604051808303815f87803b15801561080e575f80fd5b505af1158015610820573d5f803e3d5ffd5b50505050505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631b6102208787878787876040518763ffffffff1660e01b815260040161088b96959493929190612ec8565b5f604051808303815f87803b1580156108a2575f80fd5b505af11580156108b4573d5f803e3d5ffd5b50505050505050505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166368a61273878787878787336040518863ffffffff1660e01b81526004016109249796959493929190612f27565b5f604051808303815f87803b15801561093b575f80fd5b505af115801561094d573d5f803e3d5ffd5b50505050505050505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638baa81918686868686336040518763ffffffff1660e01b81526004016109bb96959493929190612fb0565b5f604051808303815f87803b1580156109d2575f80fd5b505af11580156109e4573d5f803e3d5ffd5b505050505050505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166327bb2cad848484336040518563ffffffff1660e01b8152600401610a4d9493929190612e8a565b5f604051808303815f87803b158015610a64575f80fd5b505af1158015610a76573d5f803e3d5ffd5b50505050505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d43815f882336040518363ffffffff1660e01b8152600401610ad9929190613005565b5f604051808303815f87803b158015610af0575f80fd5b505af1158015610b02573d5f803e3d5ffd5b5050505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166368f808e582336040518363ffffffff1660e01b8152600401610b6392919061302c565b5f604051808303815f87803b158015610b7a575f80fd5b505af1158015610b8c573d5f803e3d5ffd5b5050505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632a768da282336040518363ffffffff1660e01b8152600401610bed929190613053565b5f604051808303815f87803b158015610c04575f80fd5b505af1158015610c16573d5f803e3d5ffd5b5050505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634b20f45f848484336040518563ffffffff1660e01b8152600401610c7b9493929190612e8a565b5f604051808303815f87803b158015610c92575f80fd5b505af1158015610ca4573d5f803e3d5ffd5b50505050505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b9b7fe6c878787878787336040518863ffffffff1660e01b8152600401610d119796959493929190613081565b5f604051808303815f87803b158015610d28575f80fd5b505af1158015610d3a573d5f803e3d5ffd5b50505050505050505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663404bf3eb8686868686336040518763ffffffff1660e01b8152600401610da896959493929190613103565b5f604051808303815f87803b158015610dbf575f80fd5b505af1158015610dd1573d5f803e3d5ffd5b505050505050505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166344478e796040518163ffffffff1660e01b81526004016020604051808303815f875af1158015610e47573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e6b919061316c565b905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166345a59e5b87878787876040518663ffffffff1660e01b8152600401610ed2959493929190613197565b602060405180830381865afa158015610eed573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f11919061316c565b905095945050505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634cbfa82e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610f86573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610faa919061316c565b905090565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16634fe57e7a826040518263ffffffff1660e01b81526004016110079190611eee565b5f604051808303815f87803b15801561101e575f80fd5b505af1158015611030573d5f803e3d5ffd5b5050505050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110bd90613228565b60405180910390fd5b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e91b0e19878787878787336040518863ffffffff1660e01b815260040161116c9796959493929190613246565b5f604051808303815f87803b158015611183575f80fd5b505af1158015611195573d5f803e3d5ffd5b50505050505050505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631b04c27688888888888888336040518963ffffffff1660e01b81526004016112079897969594939291906132c8565b5f604051808303815f87803b15801561121e575f80fd5b505af1158015611230573d5f803e3d5ffd5b5050505050505050505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a042bf408686868686336040518763ffffffff1660e01b815260040161129f96959493929190613339565b5f604051808303815f87803b1580156112b6575f80fd5b505af11580156112c8573d5f803e3d5ffd5b505050505050505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663b5546564848484336040518563ffffffff1660e01b815260040161133194939291906133ad565b5f604051808303815f87803b158015611348575f80fd5b505af115801561135a573d5f803e3d5ffd5b50505050505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636b568d768585856040518463ffffffff1660e01b81526004016113c1939291906133eb565b602060405180830381865afa1580156113dc573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611400919061316c565b90509392505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166304e81f1e85858585336040518663ffffffff1660e01b815260040161146995949392919061341b565b5f604051808303815f87803b158015611480575f80fd5b505af1158015611492573d5f803e3d5ffd5b5050505050505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638683c7fe858585856040518563ffffffff1660e01b81526004016114fa9493929190613467565b5f604051808303815f87803b158015611511575f80fd5b505af1158015611523573d5f803e3d5ffd5b5050505050505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d621d9578686868686336040518763ffffffff1660e01b815260040161158f96959493929190613339565b5f604051808303815f87803b1580156115a6575f80fd5b505af11580156115b8573d5f803e3d5ffd5b505050505050505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663936421d5898989898989896040518863ffffffff1660e01b815260040161162997969594939291906134f4565b602060405180830381865afa158015611644573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611668919061316c565b9050979650505050505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639bd381018585856040518463ffffffff1660e01b81526004016116d3939291906133eb565b602060405180830381865afa1580156116ee573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611712919061316c565b90509392505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639fc666b2826040518263ffffffff1660e01b81526004016117739190612629565b5f604051808303815f87803b15801561178a575f80fd5b505af115801561179c573d5f803e3d5ffd5b5050505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a5843f0883836040518363ffffffff1660e01b81526004016117fd92919061355c565b5f604051808303815f87803b158015611814575f80fd5b505af1158015611826573d5f803e3d5ffd5b505050505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635ca5adbe85858585336040518663ffffffff1660e01b815260040161188e959493929190613583565b5f604051808303815f87803b1580156118a5575f80fd5b505af11580156118b7573d5f803e3d5ffd5b5050505050505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631c249912848484336040518563ffffffff1660e01b815260040161191f9493929190612e8a565b5f604051808303815f87803b158015611936575f80fd5b505af1158015611948573d5f803e3d5ffd5b50505050505050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633cf5f33b848484336040518563ffffffff1660e01b81526004016119af94939291906133ad565b5f604051808303815f87803b1580156119c6575f80fd5b505af11580156119d8573d5f803e3d5ffd5b50505050505050565b5f6119ea611e88565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f808267ffffffffffffffff16148015611a325750825b90505f60018367ffffffffffffffff16148015611a6557505f3073ffffffffffffffffffffffffffffffffffffffff163b145b905081158015611a73575080155b15611aaa576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315611af7576001855f0160086101000a81548160ff0219169083151502179055505b5f73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1603611b65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b5c90613614565b60405180910390fd5b8560025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508315611bff575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051611bf69190613687565b60405180910390a15b505050505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663d1aa0c20836040518263ffffffff1660e01b8152600401611c619190611eee565b602060405180830381865afa158015611c7c573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611ca0919061316c565b9050919050565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ecad01d58686868686336040518763ffffffff1660e01b8152600401611d0996959493929190613339565b5f604051808303815f87803b158015611d20575f80fd5b505af1158015611d32573d5f803e3d5ffd5b505050505050505050565b6060805f805f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f346a3a787876040518363ffffffff1660e01b8152600401611d9c9291906136a0565b5f60405180830381865afa158015611db6573d5f803e3d5ffd5b505050506040513d5f823e3d601f19601f82011682018060405250810190611dde9190613744565b935093509350935092959194509250565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f75f0a06878787878787336040518863ffffffff1660e01b8152600401611e539796959493929190613246565b5f604051808303815f87803b158015611e6a575f80fd5b505af1158015611e7c573d5f803e3d5ffd5b50505050505050505050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611ed882611eaf565b9050919050565b611ee881611ece565b82525050565b5f602082019050611f015f830184611edf565b92915050565b5f819050919050565b611f1981611f07565b82525050565b5f602082019050611f325f830184611f10565b92915050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f8083601f840112611f6a57611f69611f49565b5b8235905067ffffffffffffffff811115611f8757611f86611f4d565b5b602083019150836001820283011115611fa357611fa2611f51565b5b9250929050565b611fb381611ece565b8114611fbd575f80fd5b50565b5f81359050611fce81611faa565b92915050565b5f805f60408486031215611feb57611fea611f41565b5b5f84013567ffffffffffffffff81111561200857612007611f45565b5b61201486828701611f55565b9350935050602061202786828701611fc0565b9150509250925092565b5f805f805f806060878903121561204b5761204a611f41565b5b5f87013567ffffffffffffffff81111561206857612067611f45565b5b61207489828a01611f55565b9650965050602087013567ffffffffffffffff81111561209757612096611f45565b5b6120a389828a01611f55565b9450945050604087013567ffffffffffffffff8111156120c6576120c5611f45565b5b6120d289828a01611f55565b92509250509295509295509295565b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61212b826120e5565b810181811067ffffffffffffffff8211171561214a576121496120f5565b5b80604052505050565b5f61215c611f38565b90506121688282612122565b919050565b5f67ffffffffffffffff821115612187576121866120f5565b5b612190826120e5565b9050602081019050919050565b828183375f83830152505050565b5f6121bd6121b88461216d565b612153565b9050828152602081018484840111156121d9576121d86120e1565b5b6121e484828561219d565b509392505050565b5f82601f830112612200576121ff611f49565b5b81356122108482602086016121ab565b91505092915050565b5f61ffff82169050919050565b61222f81612219565b8114612239575f80fd5b50565b5f8135905061224a81612226565b92915050565b5f805f805f8060c0878903121561226a57612269611f41565b5b5f87013567ffffffffffffffff81111561228757612286611f45565b5b61229389828a016121ec565b965050602087013567ffffffffffffffff8111156122b4576122b3611f45565b5b6122c089828a016121ec565b955050604087013567ffffffffffffffff8111156122e1576122e0611f45565b5b6122ed89828a016121ec565b945050606087013567ffffffffffffffff81111561230e5761230d611f45565b5b61231a89828a016121ec565b935050608061232b89828a0161223c565b92505060a061233c89828a0161223c565b9150509295509295509295565b5f805f805f6060868803121561236257612361611f41565b5b5f61236f88828901611fc0565b955050602086013567ffffffffffffffff8111156123905761238f611f45565b5b61239c88828901611f55565b9450945050604086013567ffffffffffffffff8111156123bf576123be611f45565b5b6123cb88828901611f55565b92509250509295509295909350565b5f602082840312156123ef576123ee611f41565b5b5f6123fc84828501611fc0565b91505092915050565b61240e81611f07565b8114612418575f80fd5b50565b5f8135905061242981612405565b92915050565b5f6020828403121561244457612443611f41565b5b5f6124518482850161241b565b91505092915050565b5f6020828403121561246f5761246e611f41565b5b5f82013567ffffffffffffffff81111561248c5761248b611f45565b5b612498848285016121ec565b91505092915050565b5f805f805f8060c087890312156124bb576124ba611f41565b5b5f87013567ffffffffffffffff8111156124d8576124d7611f45565b5b6124e489828a016121ec565b965050602087013567ffffffffffffffff81111561250557612504611f45565b5b61251189828a016121ec565b955050604087013567ffffffffffffffff81111561253257612531611f45565b5b61253e89828a016121ec565b945050606061254f89828a0161223c565b935050608061256089828a0161223c565b92505060a061257189828a0161241b565b9150509295509295509295565b5f805f805f6060868803121561259757612596611f41565b5b5f86013567ffffffffffffffff8111156125b4576125b3611f45565b5b6125c088828901611f55565b955095505060206125d388828901611fc0565b935050604086013567ffffffffffffffff8111156125f4576125f3611f45565b5b61260088828901611f55565b92509250509295509295909350565b5f8115159050919050565b6126238161260f565b82525050565b5f60208201905061263c5f83018461261a565b92915050565b5f805f805f6060868803121561265b5761265a611f41565b5b5f86013567ffffffffffffffff81111561267857612677611f45565b5b61268488828901611f55565b9550955050602086013567ffffffffffffffff8111156126a7576126a6611f45565b5b6126b388828901611f55565b935093505060406126c68882890161223c565b9150509295509295909350565b5f805f805f8060c087890312156126ed576126ec611f41565b5b5f87013567ffffffffffffffff81111561270a57612709611f45565b5b61271689828a016121ec565b965050602087013567ffffffffffffffff81111561273757612736611f45565b5b61274389828a016121ec565b955050604087013567ffffffffffffffff81111561276457612763611f45565b5b61277089828a016121ec565b945050606061278189828a0161223c565b935050608061279289828a0161223c565b92505060a06127a389828a01611fc0565b9150509295509295509295565b6127b98161260f565b81146127c3575f80fd5b50565b5f813590506127d4816127b0565b92915050565b5f805f805f805f60a0888a0312156127f5576127f4611f41565b5b5f88013567ffffffffffffffff81111561281257612811611f45565b5b61281e8a828b01611f55565b9750975050602088013567ffffffffffffffff81111561284157612840611f45565b5b61284d8a828b01611f55565b955095505060406128608a828b0161241b565b93505060606128718a828b016127c6565b92505060806128828a828b016127c6565b91505092959891949750929550565b5f805f805f60a086880312156128aa576128a9611f41565b5b5f86013567ffffffffffffffff8111156128c7576128c6611f45565b5b6128d3888289016121ec565b955050602086013567ffffffffffffffff8111156128f4576128f3611f45565b5b612900888289016121ec565b945050604086013567ffffffffffffffff81111561292157612920611f45565b5b61292d888289016121ec565b935050606061293e8882890161223c565b925050608061294f8882890161223c565b9150509295509295909350565b5f805f6040848603121561297357612972611f41565b5b5f84013567ffffffffffffffff8111156129905761298f611f45565b5b61299c86828701611f55565b935093505060206129af8682870161241b565b9150509250925092565b5f805f604084860312156129d0576129cf611f41565b5b5f6129dd86828701611fc0565b935050602084013567ffffffffffffffff8111156129fe576129fd611f45565b5b612a0a86828701611f55565b92509250509250925092565b5f805f8060608587031215612a2e57612a2d611f41565b5b5f85013567ffffffffffffffff811115612a4b57612a4a611f45565b5b612a5787828801611f55565b94509450506020612a6a87828801611fc0565b9250506040612a7b8782880161241b565b91505092959194509250565b5f805f8060808587031215612a9f57612a9e611f41565b5b5f85013567ffffffffffffffff811115612abc57612abb611f45565b5b612ac8878288016121ec565b945050602085013567ffffffffffffffff811115612ae957612ae8611f45565b5b612af5878288016121ec565b9350506040612b068782880161223c565b9250506060612b178782880161223c565b91505092959194509250565b5f8083601f840112612b3857612b37611f49565b5b8235905067ffffffffffffffff811115612b5557612b54611f4d565b5b602083019150836001820283011115612b7157612b70611f51565b5b9250929050565b5f805f805f805f60c0888a031215612b9357612b92611f41565b5b5f612ba08a828b01611fc0565b9750506020612bb18a828b01611fc0565b9650506040612bc28a828b0161241b565b9550506060612bd38a828b0161241b565b9450506080612be48a828b0161241b565b93505060a088013567ffffffffffffffff811115612c0557612c04611f45565b5b612c118a828b01612b23565b925092505092959891949750929550565b5f60208284031215612c3757612c36611f41565b5b5f612c44848285016127c6565b91505092915050565b5f8060408385031215612c6357612c62611f41565b5b5f612c708582860161241b565b9250506020612c818582860161241b565b9150509250929050565b5f805f8060408587031215612ca357612ca2611f41565b5b5f85013567ffffffffffffffff811115612cc057612cbf611f45565b5b612ccc87828801611f55565b9450945050602085013567ffffffffffffffff811115612cef57612cee611f45565b5b612cfb87828801611f55565b925092505092959194509250565b5f8060208385031215612d1f57612d1e611f41565b5b5f83013567ffffffffffffffff811115612d3c57612d3b611f45565b5b612d4885828601611f55565b92509250509250929050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015612d8b578082015181840152602081019050612d70565b5f8484015250505050565b5f612da082612d54565b612daa8185612d5e565b9350612dba818560208601612d6e565b612dc3816120e5565b840191505092915050565b5f6080820190508181035f830152612de68187612d96565b90508181036020830152612dfa8186612d96565b9050612e096040830185611edf565b612e166060830184611f10565b95945050505050565b5f81519050612e2d81612405565b92915050565b5f60208284031215612e4857612e47611f41565b5b5f612e5584828501612e1f565b91505092915050565b5f612e698385612d5e565b9350612e7683858461219d565b612e7f836120e5565b840190509392505050565b5f6060820190508181035f830152612ea3818688612e5e565b9050612eb26020830185611edf565b612ebf6040830184611edf565b95945050505050565b5f6060820190508181035f830152612ee181888a612e5e565b90508181036020830152612ef6818688612e5e565b90508181036040830152612f0b818486612e5e565b9050979650505050505050565b612f2181612219565b82525050565b5f60e0820190508181035f830152612f3f818a612d96565b90508181036020830152612f538189612d96565b90508181036040830152612f678188612d96565b90508181036060830152612f7b8187612d96565b9050612f8a6080830186612f18565b612f9760a0830185612f18565b612fa460c0830184611edf565b98975050505050505050565b5f608082019050612fc35f830189611edf565b8181036020830152612fd6818789612e5e565b90508181036040830152612feb818587612e5e565b9050612ffa6060830184611edf565b979650505050505050565b5f6040820190506130185f830185611edf565b6130256020830184611edf565b9392505050565b5f60408201905061303f5f830185611f10565b61304c6020830184611edf565b9392505050565b5f6040820190508181035f83015261306b8185612d96565b905061307a6020830184611edf565b9392505050565b5f60e0820190508181035f830152613099818a612d96565b905081810360208301526130ad8189612d96565b905081810360408301526130c18188612d96565b90506130d06060830187612f18565b6130dd6080830186612f18565b6130ea60a0830185611f10565b6130f760c0830184611edf565b98975050505050505050565b5f6080820190508181035f83015261311c81888a612e5e565b905061312b6020830187611edf565b818103604083015261313e818587612e5e565b905061314d6060830184611edf565b979650505050505050565b5f81519050613166816127b0565b92915050565b5f6020828403121561318157613180611f41565b5b5f61318e84828501613158565b91505092915050565b5f6060820190508181035f8301526131b0818789612e5e565b905081810360208301526131c5818587612e5e565b90506131d46040830184612f18565b9695505050505050565b7f696e76616c69642063616c6c65720000000000000000000000000000000000005f82015250565b5f613212600e83612d5e565b915061321d826131de565b602082019050919050565b5f6020820190508181035f83015261323f81613206565b9050919050565b5f60e0820190508181035f83015261325e818a612d96565b905081810360208301526132728189612d96565b905081810360408301526132868188612d96565b90506132956060830187612f18565b6132a26080830186612f18565b6132af60a0830185611edf565b6132bc60c0830184611edf565b98975050505050505050565b5f60c0820190508181035f8301526132e1818a8c612e5e565b905081810360208301526132f681888a612e5e565b90506133056040830187611f10565b613312606083018661261a565b61331f608083018561261a565b61332c60a0830184611edf565b9998505050505050505050565b5f60c0820190508181035f8301526133518189612d96565b905081810360208301526133658188612d96565b905081810360408301526133798187612d96565b90506133886060830186612f18565b6133956080830185612f18565b6133a260a0830184611edf565b979650505050505050565b5f6060820190508181035f8301526133c6818688612e5e565b90506133d56020830185611f10565b6133e26040830184611edf565b95945050505050565b5f6040820190506133fe5f830186611edf565b8181036020830152613411818486612e5e565b9050949350505050565b5f6080820190508181035f830152613434818789612e5e565b90506134436020830186611edf565b6134506040830185611f10565b61345d6060830184611edf565b9695505050505050565b5f6080820190508181035f83015261347f8187612d96565b905081810360208301526134938186612d96565b90506134a26040830185612f18565b6134af6060830184612f18565b95945050505050565b5f82825260208201905092915050565b5f6134d383856134b8565b93506134e083858461219d565b6134e9836120e5565b840190509392505050565b5f60c0820190506135075f83018a611edf565b6135146020830189611edf565b6135216040830188611f10565b61352e6060830187611f10565b61353b6080830186611f10565b81810360a083015261354e8184866134c8565b905098975050505050505050565b5f60408201905061356f5f830185611f10565b61357c6020830184611f10565b9392505050565b5f6060820190508181035f83015261359c818789612e5e565b905081810360208301526135b1818587612e5e565b90506135c06040830184611edf565b9695505050505050565b7f43616e6e6f742073657420746f20656d707479206164647265737300000000005f82015250565b5f6135fe601b83612d5e565b9150613609826135ca565b602082019050919050565b5f6020820190508181035f83015261362b816135f2565b9050919050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f61367161366c61366784613632565b61364e565b61363b565b9050919050565b61368181613657565b82525050565b5f60208201905061369a5f830184613678565b92915050565b5f6020820190508181035f8301526136b9818486612e5e565b90509392505050565b5f6136d46136cf8461216d565b612153565b9050828152602081018484840111156136f0576136ef6120e1565b5b6136fb848285612d6e565b509392505050565b5f82601f83011261371757613716611f49565b5b81516137278482602086016136c2565b91505092915050565b5f8151905061373e81611faa565b92915050565b5f805f806080858703121561375c5761375b611f41565b5b5f85015167ffffffffffffffff81111561377957613778611f45565b5b61378587828801613703565b945050602085015167ffffffffffffffff8111156137a6576137a5611f45565b5b6137b287828801613703565b93505060406137c387828801613730565b92505060606137d487828801612e1f565b9150509295919450925056fea26469706673582212207870b0a52b47d3fd873ecac5d91b7b8419f15339d1b62325d0672a758857292364736f6c63430008180033",
}

// PermInterfaceABI is the input ABI used to generate the binding from.
// Deprecated: Use PermInterfaceMetaData.ABI instead.
var PermInterfaceABI = PermInterfaceMetaData.ABI

var PermInterfaceParsedABI, _ = abi.JSON(strings.NewReader(PermInterfaceABI))

// PermInterfaceBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use PermInterfaceMetaData.Bin instead.
var PermInterfaceBin = PermInterfaceMetaData.Bin

// DeployPermInterface deploys a new Ethereum contract, binding an instance of PermInterface to it.
func DeployPermInterface(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *PermInterface, error) {
	parsed, err := PermInterfaceMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(PermInterfaceBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &PermInterface{PermInterfaceCaller: PermInterfaceCaller{contract: contract}, PermInterfaceTransactor: PermInterfaceTransactor{contract: contract}, PermInterfaceFilterer: PermInterfaceFilterer{contract: contract}}, nil
}

// PermInterface is an auto generated Go binding around an Ethereum contract.
type PermInterface struct {
	PermInterfaceCaller     // Read-only binding to the contract
	PermInterfaceTransactor // Write-only binding to the contract
	PermInterfaceFilterer   // Log filterer for contract events
}

// PermInterfaceCaller is an auto generated read-only Go binding around an Ethereum contract.
type PermInterfaceCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// PermInterfaceTransactor is an auto generated write-only Go binding around an Ethereum contract.
type PermInterfaceTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// PermInterfaceFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type PermInterfaceFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// PermInterfaceSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type PermInterfaceSession struct {
	Contract     *PermInterface    // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// PermInterfaceCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type PermInterfaceCallerSession struct {
	Contract *PermInterfaceCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts        // Call options to use throughout this session
}

// PermInterfaceTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type PermInterfaceTransactorSession struct {
	Contract     *PermInterfaceTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts        // Transaction auth options to use throughout this session
}

// PermInterfaceRaw is an auto generated low-level Go binding around an Ethereum contract.
type PermInterfaceRaw struct {
	Contract *PermInterface // Generic contract binding to access the raw methods on
}

// PermInterfaceCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type PermInterfaceCallerRaw struct {
	Contract *PermInterfaceCaller // Generic read-only contract binding to access the raw methods on
}

// PermInterfaceTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type PermInterfaceTransactorRaw struct {
	Contract *PermInterfaceTransactor // Generic write-only contract binding to access the raw methods on
}

// NewPermInterface creates a new instance of PermInterface, bound to a specific deployed contract.
func NewPermInterface(address common.Address, backend bind.ContractBackend) (*PermInterface, error) {
	contract, err := bindPermInterface(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &PermInterface{PermInterfaceCaller: PermInterfaceCaller{contract: contract}, PermInterfaceTransactor: PermInterfaceTransactor{contract: contract}, PermInterfaceFilterer: PermInterfaceFilterer{contract: contract}}, nil
}

// NewPermInterfaceCaller creates a new read-only instance of PermInterface, bound to a specific deployed contract.
func NewPermInterfaceCaller(address common.Address, caller bind.ContractCaller) (*PermInterfaceCaller, error) {
	contract, err := bindPermInterface(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &PermInterfaceCaller{contract: contract}, nil
}

// NewPermInterfaceTransactor creates a new write-only instance of PermInterface, bound to a specific deployed contract.
func NewPermInterfaceTransactor(address common.Address, transactor bind.ContractTransactor) (*PermInterfaceTransactor, error) {
	contract, err := bindPermInterface(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &PermInterfaceTransactor{contract: contract}, nil
}

// NewPermInterfaceFilterer creates a new log filterer instance of PermInterface, bound to a specific deployed contract.
func NewPermInterfaceFilterer(address common.Address, filterer bind.ContractFilterer) (*PermInterfaceFilterer, error) {
	contract, err := bindPermInterface(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &PermInterfaceFilterer{contract: contract}, nil
}

// bindPermInterface binds a generic wrapper to an already deployed contract.
func bindPermInterface(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(PermInterfaceABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_PermInterface *PermInterfaceRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _PermInterface.Contract.PermInterfaceCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_PermInterface *PermInterfaceRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _PermInterface.Contract.PermInterfaceTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_PermInterface *PermInterfaceRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _PermInterface.Contract.PermInterfaceTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_PermInterface *PermInterfaceCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _PermInterface.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_PermInterface *PermInterfaceTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _PermInterface.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_PermInterface *PermInterfaceTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _PermInterface.Contract.contract.Transact(opts, method, params...)
}

// ConnectionAllowed is a free data retrieval call binding the contract method 0x45a59e5b.
//
// Solidity: function connectionAllowed(string _enodeId, string _ip, uint16 _port) view returns(bool)
func (_PermInterface *PermInterfaceCaller) ConnectionAllowed(opts *bind.CallOpts, _enodeId string, _ip string, _port uint16) (bool, error) {
	var out []interface{}
	err := _PermInterface.contract.Call(opts, &out, "connectionAllowed", _enodeId, _ip, _port)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// ConnectionAllowed is a free data retrieval call binding the contract method 0x45a59e5b.
//
// Solidity: function connectionAllowed(string _enodeId, string _ip, uint16 _port) view returns(bool)
func (_PermInterface *PermInterfaceSession) ConnectionAllowed(_enodeId string, _ip string, _port uint16) (bool, error) {
	return _PermInterface.Contract.ConnectionAllowed(&_PermInterface.CallOpts, _enodeId, _ip, _port)
}

// ConnectionAllowed is a free data retrieval call binding the contract method 0x45a59e5b.
//
// Solidity: function connectionAllowed(string _enodeId, string _ip, uint16 _port) view returns(bool)
func (_PermInterface *PermInterfaceCallerSession) ConnectionAllowed(_enodeId string, _ip string, _port uint16) (bool, error) {
	return _PermInterface.Contract.ConnectionAllowed(&_PermInterface.CallOpts, _enodeId, _ip, _port)
}

// GetAccessLevelForUnconfiguredAccount is a free data retrieval call binding the contract method 0x0dca12f6.
//
// Solidity: function getAccessLevelForUnconfiguredAccount() view returns(uint256)
func (_PermInterface *PermInterfaceCaller) GetAccessLevelForUnconfiguredAccount(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _PermInterface.contract.Call(opts, &out, "getAccessLevelForUnconfiguredAccount")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// GetAccessLevelForUnconfiguredAccount is a free data retrieval call binding the contract method 0x0dca12f6.
//
// Solidity: function getAccessLevelForUnconfiguredAccount() view returns(uint256)
func (_PermInterface *PermInterfaceSession) GetAccessLevelForUnconfiguredAccount() (*big.Int, error) {
	return _PermInterface.Contract.GetAccessLevelForUnconfiguredAccount(&_PermInterface.CallOpts)
}

// GetAccessLevelForUnconfiguredAccount is a free data retrieval call binding the contract method 0x0dca12f6.
//
// Solidity: function getAccessLevelForUnconfiguredAccount() view returns(uint256)
func (_PermInterface *PermInterfaceCallerSession) GetAccessLevelForUnconfiguredAccount() (*big.Int, error) {
	return _PermInterface.Contract.GetAccessLevelForUnconfiguredAccount(&_PermInterface.CallOpts)
}

// GetNetworkBootStatus is a free data retrieval call binding the contract method 0x4cbfa82e.
//
// Solidity: function getNetworkBootStatus() view returns(bool)
func (_PermInterface *PermInterfaceCaller) GetNetworkBootStatus(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _PermInterface.contract.Call(opts, &out, "getNetworkBootStatus")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// GetNetworkBootStatus is a free data retrieval call binding the contract method 0x4cbfa82e.
//
// Solidity: function getNetworkBootStatus() view returns(bool)
func (_PermInterface *PermInterfaceSession) GetNetworkBootStatus() (bool, error) {
	return _PermInterface.Contract.GetNetworkBootStatus(&_PermInterface.CallOpts)
}

// GetNetworkBootStatus is a free data retrieval call binding the contract method 0x4cbfa82e.
//
// Solidity: function getNetworkBootStatus() view returns(bool)
func (_PermInterface *PermInterfaceCallerSession) GetNetworkBootStatus() (bool, error) {
	return _PermInterface.Contract.GetNetworkBootStatus(&_PermInterface.CallOpts)
}

// GetPendingOp is a free data retrieval call binding the contract method 0xf346a3a7.
//
// Solidity: function getPendingOp(string _orgId) view returns(string, string, address, uint256)
func (_PermInterface *PermInterfaceCaller) GetPendingOp(opts *bind.CallOpts, _orgId string) (string, string, common.Address, *big.Int, error) {
	var out []interface{}
	err := _PermInterface.contract.Call(opts, &out, "getPendingOp", _orgId)

	if err != nil {
		return *new(string), *new(string), *new(common.Address), *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)
	out1 := *abi.ConvertType(out[1], new(string)).(*string)
	out2 := *abi.ConvertType(out[2], new(common.Address)).(*common.Address)
	out3 := *abi.ConvertType(out[3], new(*big.Int)).(**big.Int)

	return out0, out1, out2, out3, err

}

// GetPendingOp is a free data retrieval call binding the contract method 0xf346a3a7.
//
// Solidity: function getPendingOp(string _orgId) view returns(string, string, address, uint256)
func (_PermInterface *PermInterfaceSession) GetPendingOp(_orgId string) (string, string, common.Address, *big.Int, error) {
	return _PermInterface.Contract.GetPendingOp(&_PermInterface.CallOpts, _orgId)
}

// GetPendingOp is a free data retrieval call binding the contract method 0xf346a3a7.
//
// Solidity: function getPendingOp(string _orgId) view returns(string, string, address, uint256)
func (_PermInterface *PermInterfaceCallerSession) GetPendingOp(_orgId string) (string, string, common.Address, *big.Int, error) {
	return _PermInterface.Contract.GetPendingOp(&_PermInterface.CallOpts, _orgId)
}

// GetPermissionsImpl is a free data retrieval call binding the contract method 0x03ed6933.
//
// Solidity: function getPermissionsImpl() view returns(address)
func (_PermInterface *PermInterfaceCaller) GetPermissionsImpl(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _PermInterface.contract.Call(opts, &out, "getPermissionsImpl")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetPermissionsImpl is a free data retrieval call binding the contract method 0x03ed6933.
//
// Solidity: function getPermissionsImpl() view returns(address)
func (_PermInterface *PermInterfaceSession) GetPermissionsImpl() (common.Address, error) {
	return _PermInterface.Contract.GetPermissionsImpl(&_PermInterface.CallOpts)
}

// GetPermissionsImpl is a free data retrieval call binding the contract method 0x03ed6933.
//
// Solidity: function getPermissionsImpl() view returns(address)
func (_PermInterface *PermInterfaceCallerSession) GetPermissionsImpl() (common.Address, error) {
	return _PermInterface.Contract.GetPermissionsImpl(&_PermInterface.CallOpts)
}

// IsNetworkAdmin is a free data retrieval call binding the contract method 0xd1aa0c20.
//
// Solidity: function isNetworkAdmin(address _account) view returns(bool)
func (_PermInterface *PermInterfaceCaller) IsNetworkAdmin(opts *bind.CallOpts, _account common.Address) (bool, error) {
	var out []interface{}
	err := _PermInterface.contract.Call(opts, &out, "isNetworkAdmin", _account)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsNetworkAdmin is a free data retrieval call binding the contract method 0xd1aa0c20.
//
// Solidity: function isNetworkAdmin(address _account) view returns(bool)
func (_PermInterface *PermInterfaceSession) IsNetworkAdmin(_account common.Address) (bool, error) {
	return _PermInterface.Contract.IsNetworkAdmin(&_PermInterface.CallOpts, _account)
}

// IsNetworkAdmin is a free data retrieval call binding the contract method 0xd1aa0c20.
//
// Solidity: function isNetworkAdmin(address _account) view returns(bool)
func (_PermInterface *PermInterfaceCallerSession) IsNetworkAdmin(_account common.Address) (bool, error) {
	return _PermInterface.Contract.IsNetworkAdmin(&_PermInterface.CallOpts, _account)
}

// IsOrgAdmin is a free data retrieval call binding the contract method 0x9bd38101.
//
// Solidity: function isOrgAdmin(address _account, string _orgId) view returns(bool)
func (_PermInterface *PermInterfaceCaller) IsOrgAdmin(opts *bind.CallOpts, _account common.Address, _orgId string) (bool, error) {
	var out []interface{}
	err := _PermInterface.contract.Call(opts, &out, "isOrgAdmin", _account, _orgId)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsOrgAdmin is a free data retrieval call binding the contract method 0x9bd38101.
//
// Solidity: function isOrgAdmin(address _account, string _orgId) view returns(bool)
func (_PermInterface *PermInterfaceSession) IsOrgAdmin(_account common.Address, _orgId string) (bool, error) {
	return _PermInterface.Contract.IsOrgAdmin(&_PermInterface.CallOpts, _account, _orgId)
}

// IsOrgAdmin is a free data retrieval call binding the contract method 0x9bd38101.
//
// Solidity: function isOrgAdmin(address _account, string _orgId) view returns(bool)
func (_PermInterface *PermInterfaceCallerSession) IsOrgAdmin(_account common.Address, _orgId string) (bool, error) {
	return _PermInterface.Contract.IsOrgAdmin(&_PermInterface.CallOpts, _account, _orgId)
}

// TransactionAllowed is a free data retrieval call binding the contract method 0x936421d5.
//
// Solidity: function transactionAllowed(address _sender, address _target, uint256 _value, uint256 _gasPrice, uint256 _gasLimit, bytes _payload) view returns(bool)
func (_PermInterface *PermInterfaceCaller) TransactionAllowed(opts *bind.CallOpts, _sender common.Address, _target common.Address, _value *big.Int, _gasPrice *big.Int, _gasLimit *big.Int, _payload []byte) (bool, error) {
	var out []interface{}
	err := _PermInterface.contract.Call(opts, &out, "transactionAllowed", _sender, _target, _value, _gasPrice, _gasLimit, _payload)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// TransactionAllowed is a free data retrieval call binding the contract method 0x936421d5.
//
// Solidity: function transactionAllowed(address _sender, address _target, uint256 _value, uint256 _gasPrice, uint256 _gasLimit, bytes _payload) view returns(bool)
func (_PermInterface *PermInterfaceSession) TransactionAllowed(_sender common.Address, _target common.Address, _value *big.Int, _gasPrice *big.Int, _gasLimit *big.Int, _payload []byte) (bool, error) {
	return _PermInterface.Contract.TransactionAllowed(&_PermInterface.CallOpts, _sender, _target, _value, _gasPrice, _gasLimit, _payload)
}

// TransactionAllowed is a free data retrieval call binding the contract method 0x936421d5.
//
// Solidity: function transactionAllowed(address _sender, address _target, uint256 _value, uint256 _gasPrice, uint256 _gasLimit, bytes _payload) view returns(bool)
func (_PermInterface *PermInterfaceCallerSession) TransactionAllowed(_sender common.Address, _target common.Address, _value *big.Int, _gasPrice *big.Int, _gasLimit *big.Int, _payload []byte) (bool, error) {
	return _PermInterface.Contract.TransactionAllowed(&_PermInterface.CallOpts, _sender, _target, _value, _gasPrice, _gasLimit, _payload)
}

// ValidateAccount is a free data retrieval call binding the contract method 0x6b568d76.
//
// Solidity: function validateAccount(address _account, string _orgId) view returns(bool)
func (_PermInterface *PermInterfaceCaller) ValidateAccount(opts *bind.CallOpts, _account common.Address, _orgId string) (bool, error) {
	var out []interface{}
	err := _PermInterface.contract.Call(opts, &out, "validateAccount", _account, _orgId)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// ValidateAccount is a free data retrieval call binding the contract method 0x6b568d76.
//
// Solidity: function validateAccount(address _account, string _orgId) view returns(bool)
func (_PermInterface *PermInterfaceSession) ValidateAccount(_account common.Address, _orgId string) (bool, error) {
	return _PermInterface.Contract.ValidateAccount(&_PermInterface.CallOpts, _account, _orgId)
}

// ValidateAccount is a free data retrieval call binding the contract method 0x6b568d76.
//
// Solidity: function validateAccount(address _account, string _orgId) view returns(bool)
func (_PermInterface *PermInterfaceCallerSession) ValidateAccount(_account common.Address, _orgId string) (bool, error) {
	return _PermInterface.Contract.ValidateAccount(&_PermInterface.CallOpts, _account, _orgId)
}

// AddAdminAccount is a paid mutator transaction binding the contract method 0x4fe57e7a.
//
// Solidity: function addAdminAccount(address _acct) returns()
func (_PermInterface *PermInterfaceTransactor) AddAdminAccount(opts *bind.TransactOpts, _acct common.Address) (*types.Transaction, error) {
	return _PermInterface.contract.Transact(opts, "addAdminAccount", _acct)
}

// AddAdminAccount is a paid mutator transaction binding the contract method 0x4fe57e7a.
//
// Solidity: function addAdminAccount(address _acct) returns()
func (_PermInterface *PermInterfaceSession) AddAdminAccount(_acct common.Address) (*types.Transaction, error) {
	return _PermInterface.Contract.AddAdminAccount(&_PermInterface.TransactOpts, _acct)
}

// AddAdminAccount is a paid mutator transaction binding the contract method 0x4fe57e7a.
//
// Solidity: function addAdminAccount(address _acct) returns()
func (_PermInterface *PermInterfaceTransactorSession) AddAdminAccount(_acct common.Address) (*types.Transaction, error) {
	return _PermInterface.Contract.AddAdminAccount(&_PermInterface.TransactOpts, _acct)
}

// AddAdminNode is a paid mutator transaction binding the contract method 0x8683c7fe.
//
// Solidity: function addAdminNode(string _enodeId, string _ip, uint16 _port, uint16 _raftport) returns()
func (_PermInterface *PermInterfaceTransactor) AddAdminNode(opts *bind.TransactOpts, _enodeId string, _ip string, _port uint16, _raftport uint16) (*types.Transaction, error) {
	return _PermInterface.contract.Transact(opts, "addAdminNode", _enodeId, _ip, _port, _raftport)
}

// AddAdminNode is a paid mutator transaction binding the contract method 0x8683c7fe.
//
// Solidity: function addAdminNode(string _enodeId, string _ip, uint16 _port, uint16 _raftport) returns()
func (_PermInterface *PermInterfaceSession) AddAdminNode(_enodeId string, _ip string, _port uint16, _raftport uint16) (*types.Transaction, error) {
	return _PermInterface.Contract.AddAdminNode(&_PermInterface.TransactOpts, _enodeId, _ip, _port, _raftport)
}

// AddAdminNode is a paid mutator transaction binding the contract method 0x8683c7fe.
//
// Solidity: function addAdminNode(string _enodeId, string _ip, uint16 _port, uint16 _raftport) returns()
func (_PermInterface *PermInterfaceTransactorSession) AddAdminNode(_enodeId string, _ip string, _port uint16, _raftport uint16) (*types.Transaction, error) {
	return _PermInterface.Contract.AddAdminNode(&_PermInterface.TransactOpts, _enodeId, _ip, _port, _raftport)
}

// AddContractWhitelist is a paid mutator transaction binding the contract method 0x31459617.
//
// Solidity: function addContractWhitelist(string _contractKey, address _contractAddress) returns()
func (_PermInterface *PermInterfaceTransactor) AddContractWhitelist(opts *bind.TransactOpts, _contractKey string, _contractAddress common.Address) (*types.Transaction, error) {
	return _PermInterface.contract.Transact(opts, "addContractWhitelist", _contractKey, _contractAddress)
}

// AddContractWhitelist is a paid mutator transaction binding the contract method 0x31459617.
//
// Solidity: function addContractWhitelist(string _contractKey, address _contractAddress) returns()
func (_PermInterface *PermInterfaceSession) AddContractWhitelist(_contractKey string, _contractAddress common.Address) (*types.Transaction, error) {
	return _PermInterface.Contract.AddContractWhitelist(&_PermInterface.TransactOpts, _contractKey, _contractAddress)
}

// AddContractWhitelist is a paid mutator transaction binding the contract method 0x31459617.
//
// Solidity: function addContractWhitelist(string _contractKey, address _contractAddress) returns()
func (_PermInterface *PermInterfaceTransactorSession) AddContractWhitelist(_contractKey string, _contractAddress common.Address) (*types.Transaction, error) {
	return _PermInterface.Contract.AddContractWhitelist(&_PermInterface.TransactOpts, _contractKey, _contractAddress)
}

// AddNewRole is a paid mutator transaction binding the contract method 0x51f604c3.
//
// Solidity: function addNewRole(string _roleId, string _orgId, uint256 _access, bool _voter, bool _admin) returns()
func (_PermInterface *PermInterfaceTransactor) AddNewRole(opts *bind.TransactOpts, _roleId string, _orgId string, _access *big.Int, _voter bool, _admin bool) (*types.Transaction, error) {
	return _PermInterface.contract.Transact(opts, "addNewRole", _roleId, _orgId, _access, _voter, _admin)
}

// AddNewRole is a paid mutator transaction binding the contract method 0x51f604c3.
//
// Solidity: function addNewRole(string _roleId, string _orgId, uint256 _access, bool _voter, bool _admin) returns()
func (_PermInterface *PermInterfaceSession) AddNewRole(_roleId string, _orgId string, _access *big.Int, _voter bool, _admin bool) (*types.Transaction, error) {
	return _PermInterface.Contract.AddNewRole(&_PermInterface.TransactOpts, _roleId, _orgId, _access, _voter, _admin)
}

// AddNewRole is a paid mutator transaction binding the contract method 0x51f604c3.
//
// Solidity: function addNewRole(string _roleId, string _orgId, uint256 _access, bool _voter, bool _admin) returns()
func (_PermInterface *PermInterfaceTransactorSession) AddNewRole(_roleId string, _orgId string, _access *big.Int, _voter bool, _admin bool) (*types.Transaction, error) {
	return _PermInterface.Contract.AddNewRole(&_PermInterface.TransactOpts, _roleId, _orgId, _access, _voter, _admin)
}

// AddNode is a paid mutator transaction binding the contract method 0xef5f7196.
//
// Solidity: function addNode(string _orgId, string _enodeId, string _ip, uint16 _port, uint16 _raftport) returns()
func (_PermInterface *PermInterfaceTransactor) AddNode(opts *bind.TransactOpts, _orgId string, _enodeId string, _ip string, _port uint16, _raftport uint16) (*types.Transaction, error) {
	return _PermInterface.contract.Transact(opts, "addNode", _orgId, _enodeId, _ip, _port, _raftport)
}

// AddNode is a paid mutator transaction binding the contract method 0xef5f7196.
//
// Solidity: function addNode(string _orgId, string _enodeId, string _ip, uint16 _port, uint16 _raftport) returns()
func (_PermInterface *PermInterfaceSession) AddNode(_orgId string, _enodeId string, _ip string, _port uint16, _raftport uint16) (*types.Transaction, error) {
	return _PermInterface.Contract.AddNode(&_PermInterface.TransactOpts, _orgId, _enodeId, _ip, _port, _raftport)
}

// AddNode is a paid mutator transaction binding the contract method 0xef5f7196.
//
// Solidity: function addNode(string _orgId, string _enodeId, string _ip, uint16 _port, uint16 _raftport) returns()
func (_PermInterface *PermInterfaceTransactorSession) AddNode(_orgId string, _enodeId string, _ip string, _port uint16, _raftport uint16) (*types.Transaction, error) {
	return _PermInterface.Contract.AddNode(&_PermInterface.TransactOpts, _orgId, _enodeId, _ip, _port, _raftport)
}

// AddOrg is a paid mutator transaction binding the contract method 0x513a3277.
//
// Solidity: function addOrg(string _orgId, string _enodeId, string _ip, uint16 _port, uint16 _raftport, address _account) returns()
func (_PermInterface *PermInterfaceTransactor) AddOrg(opts *bind.TransactOpts, _orgId string, _enodeId string, _ip string, _port uint16, _raftport uint16, _account common.Address) (*types.Transaction, error) {
	return _PermInterface.contract.Transact(opts, "addOrg", _orgId, _enodeId, _ip, _port, _raftport, _account)
}

// AddOrg is a paid mutator transaction binding the contract method 0x513a3277.
//
// Solidity: function addOrg(string _orgId, string _enodeId, string _ip, uint16 _port, uint16 _raftport, address _account) returns()
func (_PermInterface *PermInterfaceSession) AddOrg(_orgId string, _enodeId string, _ip string, _port uint16, _raftport uint16, _account common.Address) (*types.Transaction, error) {
	return _PermInterface.Contract.AddOrg(&_PermInterface.TransactOpts, _orgId, _enodeId, _ip, _port, _raftport, _account)
}

// AddOrg is a paid mutator transaction binding the contract method 0x513a3277.
//
// Solidity: function addOrg(string _orgId, string _enodeId, string _ip, uint16 _port, uint16 _raftport, address _account) returns()
func (_PermInterface *PermInterfaceTransactorSession) AddOrg(_orgId string, _enodeId string, _ip string, _port uint16, _raftport uint16, _account common.Address) (*types.Transaction, error) {
	return _PermInterface.Contract.AddOrg(&_PermInterface.TransactOpts, _orgId, _enodeId, _ip, _port, _raftport, _account)
}

// AddSubOrg is a paid mutator transaction binding the contract method 0x2e125a6c.
//
// Solidity: function addSubOrg(string _pOrgId, string _orgId, string _enodeId, string _ip, uint16 _port, uint16 _raftport) returns()
func (_PermInterface *PermInterfaceTransactor) AddSubOrg(opts *bind.TransactOpts, _pOrgId string, _orgId string, _enodeId string, _ip string, _port uint16, _raftport uint16) (*types.Transaction, error) {
	return _PermInterface.contract.Transact(opts, "addSubOrg", _pOrgId, _orgId, _enodeId, _ip, _port, _raftport)
}

// AddSubOrg is a paid mutator transaction binding the contract method 0x2e125a6c.
//
// Solidity: function addSubOrg(string _pOrgId, string _orgId, string _enodeId, string _ip, uint16 _port, uint16 _raftport) returns()
func (_PermInterface *PermInterfaceSession) AddSubOrg(_pOrgId string, _orgId string, _enodeId string, _ip string, _port uint16, _raftport uint16) (*types.Transaction, error) {
	return _PermInterface.Contract.AddSubOrg(&_PermInterface.TransactOpts, _pOrgId, _orgId, _enodeId, _ip, _port, _raftport)
}

// AddSubOrg is a paid mutator transaction binding the contract method 0x2e125a6c.
//
// Solidity: function addSubOrg(string _pOrgId, string _orgId, string _enodeId, string _ip, uint16 _port, uint16 _raftport) returns()
func (_PermInterface *PermInterfaceTransactorSession) AddSubOrg(_pOrgId string, _orgId string, _enodeId string, _ip string, _port uint16, _raftport uint16) (*types.Transaction, error) {
	return _PermInterface.Contract.AddSubOrg(&_PermInterface.TransactOpts, _pOrgId, _orgId, _enodeId, _ip, _port, _raftport)
}

// ApproveAdminRole is a paid mutator transaction binding the contract method 0x16724c44.
//
// Solidity: function approveAdminRole(string _orgId, address _account) returns()
func (_PermInterface *PermInterfaceTransactor) ApproveAdminRole(opts *bind.TransactOpts, _orgId string, _account common.Address) (*types.Transaction, error) {
	return _PermInterface.contract.Transact(opts, "approveAdminRole", _orgId, _account)
}

// ApproveAdminRole is a paid mutator transaction binding the contract method 0x16724c44.
//
// Solidity: function approveAdminRole(string _orgId, address _account) returns()
func (_PermInterface *PermInterfaceSession) ApproveAdminRole(_orgId string, _account common.Address) (*types.Transaction, error) {
	return _PermInterface.Contract.ApproveAdminRole(&_PermInterface.TransactOpts, _orgId, _account)
}

// ApproveAdminRole is a paid mutator transaction binding the contract method 0x16724c44.
//
// Solidity: function approveAdminRole(string _orgId, address _account) returns()
func (_PermInterface *PermInterfaceTransactorSession) ApproveAdminRole(_orgId string, _account common.Address) (*types.Transaction, error) {
	return _PermInterface.Contract.ApproveAdminRole(&_PermInterface.TransactOpts, _orgId, _account)
}

// ApproveBlacklistedAccountRecovery is a paid mutator transaction binding the contract method 0x3e239b23.
//
// Solidity: function approveBlacklistedAccountRecovery(string _orgId, address _account) returns()
func (_PermInterface *PermInterfaceTransactor) ApproveBlacklistedAccountRecovery(opts *bind.TransactOpts, _orgId string, _account common.Address) (*types.Transaction, error) {
	return _PermInterface.contract.Transact(opts, "approveBlacklistedAccountRecovery", _orgId, _account)
}

// ApproveBlacklistedAccountRecovery is a paid mutator transaction binding the contract method 0x3e239b23.
//
// Solidity: function approveBlacklistedAccountRecovery(string _orgId, address _account) returns()
func (_PermInterface *PermInterfaceSession) ApproveBlacklistedAccountRecovery(_orgId string, _account common.Address) (*types.Transaction, error) {
	return _PermInterface.Contract.ApproveBlacklistedAccountRecovery(&_PermInterface.TransactOpts, _orgId, _account)
}

// ApproveBlacklistedAccountRecovery is a paid mutator transaction binding the contract method 0x3e239b23.
//
// Solidity: function approveBlacklistedAccountRecovery(string _orgId, address _account) returns()
func (_PermInterface *PermInterfaceTransactorSession) ApproveBlacklistedAccountRecovery(_orgId string, _account common.Address) (*types.Transaction, error) {
	return _PermInterface.Contract.ApproveBlacklistedAccountRecovery(&_PermInterface.TransactOpts, _orgId, _account)
}

// ApproveBlacklistedNodeRecovery is a paid mutator transaction binding the contract method 0x58dcff71.
//
// Solidity: function approveBlacklistedNodeRecovery(string _orgId, string _enodeId, string _ip, uint16 _port, uint16 _raftport) returns()
func (_PermInterface *PermInterfaceTransactor) ApproveBlacklistedNodeRecovery(opts *bind.TransactOpts, _orgId string, _enodeId string, _ip string, _port uint16, _raftport uint16) (*types.Transaction, error) {
	return _PermInterface.contract.Transact(opts, "approveBlacklistedNodeRecovery", _orgId, _enodeId, _ip, _port, _raftport)
}

// ApproveBlacklistedNodeRecovery is a paid mutator transaction binding the contract method 0x58dcff71.
//
// Solidity: function approveBlacklistedNodeRecovery(string _orgId, string _enodeId, string _ip, uint16 _port, uint16 _raftport) returns()
func (_PermInterface *PermInterfaceSession) ApproveBlacklistedNodeRecovery(_orgId string, _enodeId string, _ip string, _port uint16, _raftport uint16) (*types.Transaction, error) {
	return _PermInterface.Contract.ApproveBlacklistedNodeRecovery(&_PermInterface.TransactOpts, _orgId, _enodeId, _ip, _port, _raftport)
}

// ApproveBlacklistedNodeRecovery is a paid mutator transaction binding the contract method 0x58dcff71.
//
// Solidity: function approveBlacklistedNodeRecovery(string _orgId, string _enodeId, string _ip, uint16 _port, uint16 _raftport) returns()
func (_PermInterface *PermInterfaceTransactorSession) ApproveBlacklistedNodeRecovery(_orgId string, _enodeId string, _ip string, _port uint16, _raftport uint16) (*types.Transaction, error) {
	return _PermInterface.Contract.ApproveBlacklistedNodeRecovery(&_PermInterface.TransactOpts, _orgId, _enodeId, _ip, _port, _raftport)
}

// ApproveOrg is a paid mutator transaction binding the contract method 0xfa279d61.
//
// Solidity: function approveOrg(string _orgId, string _enodeId, string _ip, uint16 _port, uint16 _raftport, address _account) returns()
func (_PermInterface *PermInterfaceTransactor) ApproveOrg(opts *bind.TransactOpts, _orgId string, _enodeId string, _ip string, _port uint16, _raftport uint16, _account common.Address) (*types.Transaction, error) {
	return _PermInterface.contract.Transact(opts, "approveOrg", _orgId, _enodeId, _ip, _port, _raftport, _account)
}

// ApproveOrg is a paid mutator transaction binding the contract method 0xfa279d61.
//
// Solidity: function approveOrg(string _orgId, string _enodeId, string _ip, uint16 _port, uint16 _raftport, address _account) returns()
func (_PermInterface *PermInterfaceSession) ApproveOrg(_orgId string, _enodeId string, _ip string, _port uint16, _raftport uint16, _account common.Address) (*types.Transaction, error) {
	return _PermInterface.Contract.ApproveOrg(&_PermInterface.TransactOpts, _orgId, _enodeId, _ip, _port, _raftport, _account)
}

// ApproveOrg is a paid mutator transaction binding the contract method 0xfa279d61.
//
// Solidity: function approveOrg(string _orgId, string _enodeId, string _ip, uint16 _port, uint16 _raftport, address _account) returns()
func (_PermInterface *PermInterfaceTransactorSession) ApproveOrg(_orgId string, _enodeId string, _ip string, _port uint16, _raftport uint16, _account common.Address) (*types.Transaction, error) {
	return _PermInterface.Contract.ApproveOrg(&_PermInterface.TransactOpts, _orgId, _enodeId, _ip, _port, _raftport, _account)
}

// ApproveOrgStatus is a paid mutator transaction binding the contract method 0x5be9672c.
//
// Solidity: function approveOrgStatus(string _orgId, uint256 _action) returns()
func (_PermInterface *PermInterfaceTransactor) ApproveOrgStatus(opts *bind.TransactOpts, _orgId string, _action *big.Int) (*types.Transaction, error) {
	return _PermInterface.contract.Transact(opts, "approveOrgStatus", _orgId, _action)
}

// ApproveOrgStatus is a paid mutator transaction binding the contract method 0x5be9672c.
//
// Solidity: function approveOrgStatus(string _orgId, uint256 _action) returns()
func (_PermInterface *PermInterfaceSession) ApproveOrgStatus(_orgId string, _action *big.Int) (*types.Transaction, error) {
	return _PermInterface.Contract.ApproveOrgStatus(&_PermInterface.TransactOpts, _orgId, _action)
}

// ApproveOrgStatus is a paid mutator transaction binding the contract method 0x5be9672c.
//
// Solidity: function approveOrgStatus(string _orgId, uint256 _action) returns()
func (_PermInterface *PermInterfaceTransactorSession) ApproveOrgStatus(_orgId string, _action *big.Int) (*types.Transaction, error) {
	return _PermInterface.Contract.ApproveOrgStatus(&_PermInterface.TransactOpts, _orgId, _action)
}

// AssignAccountRole is a paid mutator transaction binding the contract method 0x2f7f0a12.
//
// Solidity: function assignAccountRole(address _account, string _orgId, string _roleId) returns()
func (_PermInterface *PermInterfaceTransactor) AssignAccountRole(opts *bind.TransactOpts, _account common.Address, _orgId string, _roleId string) (*types.Transaction, error) {
	return _PermInterface.contract.Transact(opts, "assignAccountRole", _account, _orgId, _roleId)
}

// AssignAccountRole is a paid mutator transaction binding the contract method 0x2f7f0a12.
//
// Solidity: function assignAccountRole(address _account, string _orgId, string _roleId) returns()
func (_PermInterface *PermInterfaceSession) AssignAccountRole(_account common.Address, _orgId string, _roleId string) (*types.Transaction, error) {
	return _PermInterface.Contract.AssignAccountRole(&_PermInterface.TransactOpts, _account, _orgId, _roleId)
}

// AssignAccountRole is a paid mutator transaction binding the contract method 0x2f7f0a12.
//
// Solidity: function assignAccountRole(address _account, string _orgId, string _roleId) returns()
func (_PermInterface *PermInterfaceTransactorSession) AssignAccountRole(_account common.Address, _orgId string, _roleId string) (*types.Transaction, error) {
	return _PermInterface.Contract.AssignAccountRole(&_PermInterface.TransactOpts, _account, _orgId, _roleId)
}

// AssignAdminRole is a paid mutator transaction binding the contract method 0x43de646c.
//
// Solidity: function assignAdminRole(string _orgId, address _account, string _roleId) returns()
func (_PermInterface *PermInterfaceTransactor) AssignAdminRole(opts *bind.TransactOpts, _orgId string, _account common.Address, _roleId string) (*types.Transaction, error) {
	return _PermInterface.contract.Transact(opts, "assignAdminRole", _orgId, _account, _roleId)
}

// AssignAdminRole is a paid mutator transaction binding the contract method 0x43de646c.
//
// Solidity: function assignAdminRole(string _orgId, address _account, string _roleId) returns()
func (_PermInterface *PermInterfaceSession) AssignAdminRole(_orgId string, _account common.Address, _roleId string) (*types.Transaction, error) {
	return _PermInterface.Contract.AssignAdminRole(&_PermInterface.TransactOpts, _orgId, _account, _roleId)
}

// AssignAdminRole is a paid mutator transaction binding the contract method 0x43de646c.
//
// Solidity: function assignAdminRole(string _orgId, address _account, string _roleId) returns()
func (_PermInterface *PermInterfaceTransactorSession) AssignAdminRole(_orgId string, _account common.Address, _roleId string) (*types.Transaction, error) {
	return _PermInterface.Contract.AssignAdminRole(&_PermInterface.TransactOpts, _orgId, _account, _roleId)
}

// Init is a paid mutator transaction binding the contract method 0xa5843f08.
//
// Solidity: function init(uint256 _breadth, uint256 _depth) returns()
func (_PermInterface *PermInterfaceTransactor) Init(opts *bind.TransactOpts, _breadth *big.Int, _depth *big.Int) (*types.Transaction, error) {
	return _PermInterface.contract.Transact(opts, "init", _breadth, _depth)
}

// Init is a paid mutator transaction binding the contract method 0xa5843f08.
//
// Solidity: function init(uint256 _breadth, uint256 _depth) returns()
func (_PermInterface *PermInterfaceSession) Init(_breadth *big.Int, _depth *big.Int) (*types.Transaction, error) {
	return _PermInterface.Contract.Init(&_PermInterface.TransactOpts, _breadth, _depth)
}

// Init is a paid mutator transaction binding the contract method 0xa5843f08.
//
// Solidity: function init(uint256 _breadth, uint256 _depth) returns()
func (_PermInterface *PermInterfaceTransactorSession) Init(_breadth *big.Int, _depth *big.Int) (*types.Transaction, error) {
	return _PermInterface.Contract.Init(&_PermInterface.TransactOpts, _breadth, _depth)
}

// Initialize is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address _permImplUpgradeable) returns()
func (_PermInterface *PermInterfaceTransactor) Initialize(opts *bind.TransactOpts, _permImplUpgradeable common.Address) (*types.Transaction, error) {
	return _PermInterface.contract.Transact(opts, "initialize", _permImplUpgradeable)
}

// Initialize is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address _permImplUpgradeable) returns()
func (_PermInterface *PermInterfaceSession) Initialize(_permImplUpgradeable common.Address) (*types.Transaction, error) {
	return _PermInterface.Contract.Initialize(&_PermInterface.TransactOpts, _permImplUpgradeable)
}

// Initialize is a paid mutator transaction binding the contract method 0xc4d66de8.
//
// Solidity: function initialize(address _permImplUpgradeable) returns()
func (_PermInterface *PermInterfaceTransactorSession) Initialize(_permImplUpgradeable common.Address) (*types.Transaction, error) {
	return _PermInterface.Contract.Initialize(&_PermInterface.TransactOpts, _permImplUpgradeable)
}

// RemoveRole is a paid mutator transaction binding the contract method 0xa6343012.
//
// Solidity: function removeRole(string _roleId, string _orgId) returns()
func (_PermInterface *PermInterfaceTransactor) RemoveRole(opts *bind.TransactOpts, _roleId string, _orgId string) (*types.Transaction, error) {
	return _PermInterface.contract.Transact(opts, "removeRole", _roleId, _orgId)
}

// RemoveRole is a paid mutator transaction binding the contract method 0xa6343012.
//
// Solidity: function removeRole(string _roleId, string _orgId) returns()
func (_PermInterface *PermInterfaceSession) RemoveRole(_roleId string, _orgId string) (*types.Transaction, error) {
	return _PermInterface.Contract.RemoveRole(&_PermInterface.TransactOpts, _roleId, _orgId)
}

// RemoveRole is a paid mutator transaction binding the contract method 0xa6343012.
//
// Solidity: function removeRole(string _roleId, string _orgId) returns()
func (_PermInterface *PermInterfaceTransactorSession) RemoveRole(_roleId string, _orgId string) (*types.Transaction, error) {
	return _PermInterface.Contract.RemoveRole(&_PermInterface.TransactOpts, _roleId, _orgId)
}

// RevokeContractWhitelistByAddress is a paid mutator transaction binding the contract method 0x31e8a9d9.
//
// Solidity: function revokeContractWhitelistByAddress(address _contractAddress) returns()
func (_PermInterface *PermInterfaceTransactor) RevokeContractWhitelistByAddress(opts *bind.TransactOpts, _contractAddress common.Address) (*types.Transaction, error) {
	return _PermInterface.contract.Transact(opts, "revokeContractWhitelistByAddress", _contractAddress)
}

// RevokeContractWhitelistByAddress is a paid mutator transaction binding the contract method 0x31e8a9d9.
//
// Solidity: function revokeContractWhitelistByAddress(address _contractAddress) returns()
func (_PermInterface *PermInterfaceSession) RevokeContractWhitelistByAddress(_contractAddress common.Address) (*types.Transaction, error) {
	return _PermInterface.Contract.RevokeContractWhitelistByAddress(&_PermInterface.TransactOpts, _contractAddress)
}

// RevokeContractWhitelistByAddress is a paid mutator transaction binding the contract method 0x31e8a9d9.
//
// Solidity: function revokeContractWhitelistByAddress(address _contractAddress) returns()
func (_PermInterface *PermInterfaceTransactorSession) RevokeContractWhitelistByAddress(_contractAddress common.Address) (*types.Transaction, error) {
	return _PermInterface.Contract.RevokeContractWhitelistByAddress(&_PermInterface.TransactOpts, _contractAddress)
}

// RevokeContractWhitelistByKey is a paid mutator transaction binding the contract method 0x3968b9e3.
//
// Solidity: function revokeContractWhitelistByKey(string _contractKey) returns()
func (_PermInterface *PermInterfaceTransactor) RevokeContractWhitelistByKey(opts *bind.TransactOpts, _contractKey string) (*types.Transaction, error) {
	return _PermInterface.contract.Transact(opts, "revokeContractWhitelistByKey", _contractKey)
}

// RevokeContractWhitelistByKey is a paid mutator transaction binding the contract method 0x3968b9e3.
//
// Solidity: function revokeContractWhitelistByKey(string _contractKey) returns()
func (_PermInterface *PermInterfaceSession) RevokeContractWhitelistByKey(_contractKey string) (*types.Transaction, error) {
	return _PermInterface.Contract.RevokeContractWhitelistByKey(&_PermInterface.TransactOpts, _contractKey)
}

// RevokeContractWhitelistByKey is a paid mutator transaction binding the contract method 0x3968b9e3.
//
// Solidity: function revokeContractWhitelistByKey(string _contractKey) returns()
func (_PermInterface *PermInterfaceTransactorSession) RevokeContractWhitelistByKey(_contractKey string) (*types.Transaction, error) {
	return _PermInterface.Contract.RevokeContractWhitelistByKey(&_PermInterface.TransactOpts, _contractKey)
}

// SetAccessLevelForUnconfiguredAccount is a paid mutator transaction binding the contract method 0x3965c04a.
//
// Solidity: function setAccessLevelForUnconfiguredAccount(uint256 _accessLevel) returns()
func (_PermInterface *PermInterfaceTransactor) SetAccessLevelForUnconfiguredAccount(opts *bind.TransactOpts, _accessLevel *big.Int) (*types.Transaction, error) {
	return _PermInterface.contract.Transact(opts, "setAccessLevelForUnconfiguredAccount", _accessLevel)
}

// SetAccessLevelForUnconfiguredAccount is a paid mutator transaction binding the contract method 0x3965c04a.
//
// Solidity: function setAccessLevelForUnconfiguredAccount(uint256 _accessLevel) returns()
func (_PermInterface *PermInterfaceSession) SetAccessLevelForUnconfiguredAccount(_accessLevel *big.Int) (*types.Transaction, error) {
	return _PermInterface.Contract.SetAccessLevelForUnconfiguredAccount(&_PermInterface.TransactOpts, _accessLevel)
}

// SetAccessLevelForUnconfiguredAccount is a paid mutator transaction binding the contract method 0x3965c04a.
//
// Solidity: function setAccessLevelForUnconfiguredAccount(uint256 _accessLevel) returns()
func (_PermInterface *PermInterfaceTransactorSession) SetAccessLevelForUnconfiguredAccount(_accessLevel *big.Int) (*types.Transaction, error) {
	return _PermInterface.Contract.SetAccessLevelForUnconfiguredAccount(&_PermInterface.TransactOpts, _accessLevel)
}

// SetIpValidation is a paid mutator transaction binding the contract method 0x9fc666b2.
//
// Solidity: function setIpValidation(bool _isIpValidationEnabled) returns()
func (_PermInterface *PermInterfaceTransactor) SetIpValidation(opts *bind.TransactOpts, _isIpValidationEnabled bool) (*types.Transaction, error) {
	return _PermInterface.contract.Transact(opts, "setIpValidation", _isIpValidationEnabled)
}

// SetIpValidation is a paid mutator transaction binding the contract method 0x9fc666b2.
//
// Solidity: function setIpValidation(bool _isIpValidationEnabled) returns()
func (_PermInterface *PermInterfaceSession) SetIpValidation(_isIpValidationEnabled bool) (*types.Transaction, error) {
	return _PermInterface.Contract.SetIpValidation(&_PermInterface.TransactOpts, _isIpValidationEnabled)
}

// SetIpValidation is a paid mutator transaction binding the contract method 0x9fc666b2.
//
// Solidity: function setIpValidation(bool _isIpValidationEnabled) returns()
func (_PermInterface *PermInterfaceTransactorSession) SetIpValidation(_isIpValidationEnabled bool) (*types.Transaction, error) {
	return _PermInterface.Contract.SetIpValidation(&_PermInterface.TransactOpts, _isIpValidationEnabled)
}

// SetPermImplementation is a paid mutator transaction binding the contract method 0x511bbd9f.
//
// Solidity: function setPermImplementation(address _permImplementation) returns()
func (_PermInterface *PermInterfaceTransactor) SetPermImplementation(opts *bind.TransactOpts, _permImplementation common.Address) (*types.Transaction, error) {
	return _PermInterface.contract.Transact(opts, "setPermImplementation", _permImplementation)
}

// SetPermImplementation is a paid mutator transaction binding the contract method 0x511bbd9f.
//
// Solidity: function setPermImplementation(address _permImplementation) returns()
func (_PermInterface *PermInterfaceSession) SetPermImplementation(_permImplementation common.Address) (*types.Transaction, error) {
	return _PermInterface.Contract.SetPermImplementation(&_PermInterface.TransactOpts, _permImplementation)
}

// SetPermImplementation is a paid mutator transaction binding the contract method 0x511bbd9f.
//
// Solidity: function setPermImplementation(address _permImplementation) returns()
func (_PermInterface *PermInterfaceTransactorSession) SetPermImplementation(_permImplementation common.Address) (*types.Transaction, error) {
	return _PermInterface.Contract.SetPermImplementation(&_PermInterface.TransactOpts, _permImplementation)
}

// SetPolicy is a paid mutator transaction binding the contract method 0x1b610220.
//
// Solidity: function setPolicy(string _nwAdminOrg, string _nwAdminRole, string _oAdminRole) returns()
func (_PermInterface *PermInterfaceTransactor) SetPolicy(opts *bind.TransactOpts, _nwAdminOrg string, _nwAdminRole string, _oAdminRole string) (*types.Transaction, error) {
	return _PermInterface.contract.Transact(opts, "setPolicy", _nwAdminOrg, _nwAdminRole, _oAdminRole)
}

// SetPolicy is a paid mutator transaction binding the contract method 0x1b610220.
//
// Solidity: function setPolicy(string _nwAdminOrg, string _nwAdminRole, string _oAdminRole) returns()
func (_PermInterface *PermInterfaceSession) SetPolicy(_nwAdminOrg string, _nwAdminRole string, _oAdminRole string) (*types.Transaction, error) {
	return _PermInterface.Contract.SetPolicy(&_PermInterface.TransactOpts, _nwAdminOrg, _nwAdminRole, _oAdminRole)
}

// SetPolicy is a paid mutator transaction binding the contract method 0x1b610220.
//
// Solidity: function setPolicy(string _nwAdminOrg, string _nwAdminRole, string _oAdminRole) returns()
func (_PermInterface *PermInterfaceTransactorSession) SetPolicy(_nwAdminOrg string, _nwAdminRole string, _oAdminRole string) (*types.Transaction, error) {
	return _PermInterface.Contract.SetPolicy(&_PermInterface.TransactOpts, _nwAdminOrg, _nwAdminRole, _oAdminRole)
}

// StartBlacklistedAccountRecovery is a paid mutator transaction binding the contract method 0xa97914bf.
//
// Solidity: function startBlacklistedAccountRecovery(string _orgId, address _account) returns()
func (_PermInterface *PermInterfaceTransactor) StartBlacklistedAccountRecovery(opts *bind.TransactOpts, _orgId string, _account common.Address) (*types.Transaction, error) {
	return _PermInterface.contract.Transact(opts, "startBlacklistedAccountRecovery", _orgId, _account)
}

// StartBlacklistedAccountRecovery is a paid mutator transaction binding the contract method 0xa97914bf.
//
// Solidity: function startBlacklistedAccountRecovery(string _orgId, address _account) returns()
func (_PermInterface *PermInterfaceSession) StartBlacklistedAccountRecovery(_orgId string, _account common.Address) (*types.Transaction, error) {
	return _PermInterface.Contract.StartBlacklistedAccountRecovery(&_PermInterface.TransactOpts, _orgId, _account)
}

// StartBlacklistedAccountRecovery is a paid mutator transaction binding the contract method 0xa97914bf.
//
// Solidity: function startBlacklistedAccountRecovery(string _orgId, address _account) returns()
func (_PermInterface *PermInterfaceTransactorSession) StartBlacklistedAccountRecovery(_orgId string, _account common.Address) (*types.Transaction, error) {
	return _PermInterface.Contract.StartBlacklistedAccountRecovery(&_PermInterface.TransactOpts, _orgId, _account)
}

// StartBlacklistedNodeRecovery is a paid mutator transaction binding the contract method 0x91ba3f96.
//
// Solidity: function startBlacklistedNodeRecovery(string _orgId, string _enodeId, string _ip, uint16 _port, uint16 _raftport) returns()
func (_PermInterface *PermInterfaceTransactor) StartBlacklistedNodeRecovery(opts *bind.TransactOpts, _orgId string, _enodeId string, _ip string, _port uint16, _raftport uint16) (*types.Transaction, error) {
	return _PermInterface.contract.Transact(opts, "startBlacklistedNodeRecovery", _orgId, _enodeId, _ip, _port, _raftport)
}

// StartBlacklistedNodeRecovery is a paid mutator transaction binding the contract method 0x91ba3f96.
//
// Solidity: function startBlacklistedNodeRecovery(string _orgId, string _enodeId, string _ip, uint16 _port, uint16 _raftport) returns()
func (_PermInterface *PermInterfaceSession) StartBlacklistedNodeRecovery(_orgId string, _enodeId string, _ip string, _port uint16, _raftport uint16) (*types.Transaction, error) {
	return _PermInterface.Contract.StartBlacklistedNodeRecovery(&_PermInterface.TransactOpts, _orgId, _enodeId, _ip, _port, _raftport)
}

// StartBlacklistedNodeRecovery is a paid mutator transaction binding the contract method 0x91ba3f96.
//
// Solidity: function startBlacklistedNodeRecovery(string _orgId, string _enodeId, string _ip, uint16 _port, uint16 _raftport) returns()
func (_PermInterface *PermInterfaceTransactorSession) StartBlacklistedNodeRecovery(_orgId string, _enodeId string, _ip string, _port uint16, _raftport uint16) (*types.Transaction, error) {
	return _PermInterface.Contract.StartBlacklistedNodeRecovery(&_PermInterface.TransactOpts, _orgId, _enodeId, _ip, _port, _raftport)
}

// UpdateAccountStatus is a paid mutator transaction binding the contract method 0x84b7a84a.
//
// Solidity: function updateAccountStatus(string _orgId, address _account, uint256 _action) returns()
func (_PermInterface *PermInterfaceTransactor) UpdateAccountStatus(opts *bind.TransactOpts, _orgId string, _account common.Address, _action *big.Int) (*types.Transaction, error) {
	return _PermInterface.contract.Transact(opts, "updateAccountStatus", _orgId, _account, _action)
}

// UpdateAccountStatus is a paid mutator transaction binding the contract method 0x84b7a84a.
//
// Solidity: function updateAccountStatus(string _orgId, address _account, uint256 _action) returns()
func (_PermInterface *PermInterfaceSession) UpdateAccountStatus(_orgId string, _account common.Address, _action *big.Int) (*types.Transaction, error) {
	return _PermInterface.Contract.UpdateAccountStatus(&_PermInterface.TransactOpts, _orgId, _account, _action)
}

// UpdateAccountStatus is a paid mutator transaction binding the contract method 0x84b7a84a.
//
// Solidity: function updateAccountStatus(string _orgId, address _account, uint256 _action) returns()
func (_PermInterface *PermInterfaceTransactorSession) UpdateAccountStatus(_orgId string, _account common.Address, _action *big.Int) (*types.Transaction, error) {
	return _PermInterface.Contract.UpdateAccountStatus(&_PermInterface.TransactOpts, _orgId, _account, _action)
}

// UpdateNetworkBootStatus is a paid mutator transaction binding the contract method 0x44478e79.
//
// Solidity: function updateNetworkBootStatus() returns(bool)
func (_PermInterface *PermInterfaceTransactor) UpdateNetworkBootStatus(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _PermInterface.contract.Transact(opts, "updateNetworkBootStatus")
}

// UpdateNetworkBootStatus is a paid mutator transaction binding the contract method 0x44478e79.
//
// Solidity: function updateNetworkBootStatus() returns(bool)
func (_PermInterface *PermInterfaceSession) UpdateNetworkBootStatus() (*types.Transaction, error) {
	return _PermInterface.Contract.UpdateNetworkBootStatus(&_PermInterface.TransactOpts)
}

// UpdateNetworkBootStatus is a paid mutator transaction binding the contract method 0x44478e79.
//
// Solidity: function updateNetworkBootStatus() returns(bool)
func (_PermInterface *PermInterfaceTransactorSession) UpdateNetworkBootStatus() (*types.Transaction, error) {
	return _PermInterface.Contract.UpdateNetworkBootStatus(&_PermInterface.TransactOpts)
}

// UpdateNodeStatus is a paid mutator transaction binding the contract method 0x3f9be497.
//
// Solidity: function updateNodeStatus(string _orgId, string _enodeId, string _ip, uint16 _port, uint16 _raftport, uint256 _action) returns()
func (_PermInterface *PermInterfaceTransactor) UpdateNodeStatus(opts *bind.TransactOpts, _orgId string, _enodeId string, _ip string, _port uint16, _raftport uint16, _action *big.Int) (*types.Transaction, error) {
	return _PermInterface.contract.Transact(opts, "updateNodeStatus", _orgId, _enodeId, _ip, _port, _raftport, _action)
}

// UpdateNodeStatus is a paid mutator transaction binding the contract method 0x3f9be497.
//
// Solidity: function updateNodeStatus(string _orgId, string _enodeId, string _ip, uint16 _port, uint16 _raftport, uint256 _action) returns()
func (_PermInterface *PermInterfaceSession) UpdateNodeStatus(_orgId string, _enodeId string, _ip string, _port uint16, _raftport uint16, _action *big.Int) (*types.Transaction, error) {
	return _PermInterface.Contract.UpdateNodeStatus(&_PermInterface.TransactOpts, _orgId, _enodeId, _ip, _port, _raftport, _action)
}

// UpdateNodeStatus is a paid mutator transaction binding the contract method 0x3f9be497.
//
// Solidity: function updateNodeStatus(string _orgId, string _enodeId, string _ip, uint16 _port, uint16 _raftport, uint256 _action) returns()
func (_PermInterface *PermInterfaceTransactorSession) UpdateNodeStatus(_orgId string, _enodeId string, _ip string, _port uint16, _raftport uint16, _action *big.Int) (*types.Transaction, error) {
	return _PermInterface.Contract.UpdateNodeStatus(&_PermInterface.TransactOpts, _orgId, _enodeId, _ip, _port, _raftport, _action)
}

// UpdateOrgStatus is a paid mutator transaction binding the contract method 0xbb3b6e80.
//
// Solidity: function updateOrgStatus(string _orgId, uint256 _action) returns()
func (_PermInterface *PermInterfaceTransactor) UpdateOrgStatus(opts *bind.TransactOpts, _orgId string, _action *big.Int) (*types.Transaction, error) {
	return _PermInterface.contract.Transact(opts, "updateOrgStatus", _orgId, _action)
}

// UpdateOrgStatus is a paid mutator transaction binding the contract method 0xbb3b6e80.
//
// Solidity: function updateOrgStatus(string _orgId, uint256 _action) returns()
func (_PermInterface *PermInterfaceSession) UpdateOrgStatus(_orgId string, _action *big.Int) (*types.Transaction, error) {
	return _PermInterface.Contract.UpdateOrgStatus(&_PermInterface.TransactOpts, _orgId, _action)
}

// UpdateOrgStatus is a paid mutator transaction binding the contract method 0xbb3b6e80.
//
// Solidity: function updateOrgStatus(string _orgId, uint256 _action) returns()
func (_PermInterface *PermInterfaceTransactorSession) UpdateOrgStatus(_orgId string, _action *big.Int) (*types.Transaction, error) {
	return _PermInterface.Contract.UpdateOrgStatus(&_PermInterface.TransactOpts, _orgId, _action)
}

// PermInterfaceInitializedPermIfaceIterator is returned from FilterInitializedPermIface and is used to iterate over the raw logs and unpacked data for InitializedPermIface events raised by the PermInterface contract.
type PermInterfaceInitializedPermIfaceIterator struct {
	Event *PermInterfaceInitializedPermIface // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *PermInterfaceInitializedPermIfaceIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(PermInterfaceInitializedPermIface)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(PermInterfaceInitializedPermIface)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *PermInterfaceInitializedPermIfaceIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *PermInterfaceInitializedPermIfaceIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// PermInterfaceInitializedPermIface represents a InitializedPermIface event raised by the PermInterface contract.
type PermInterfaceInitializedPermIface struct {
	Version uint64
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitializedPermIface is a free log retrieval operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_PermInterface *PermInterfaceFilterer) FilterInitializedPermIface(opts *bind.FilterOpts) (*PermInterfaceInitializedPermIfaceIterator, error) {

	logs, sub, err := _PermInterface.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &PermInterfaceInitializedPermIfaceIterator{contract: _PermInterface.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

var InitializedPermIfaceTopicHash = "0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2"

// WatchInitializedPermIface is a free log subscription operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_PermInterface *PermInterfaceFilterer) WatchInitializedPermIface(opts *bind.WatchOpts, sink chan<- *PermInterfaceInitializedPermIface) (event.Subscription, error) {

	logs, sub, err := _PermInterface.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(PermInterfaceInitializedPermIface)
				if err := _PermInterface.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitializedPermIface is a log parse operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_PermInterface *PermInterfaceFilterer) ParseInitializedPermIface(log types.Log) (*PermInterfaceInitializedPermIface, error) {
	event := new(PermInterfaceInitializedPermIface)
	if err := _PermInterface.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
