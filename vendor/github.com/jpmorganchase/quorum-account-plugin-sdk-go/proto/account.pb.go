// Code generated by protoc-gen-go. DO NOT EDIT.
// source: account.proto

package proto

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Note: The Account type is used only in Response types.
// All Request types which require an account to be specified use only the address to identify the account.
// At the Quorum-level there is no knowledge of account URLs so the url field has been excluded from Requests to simplify the protocol.
type Account struct {
	Address              []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Url                  string   `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Account) Reset()         { *m = Account{} }
func (m *Account) String() string { return proto.CompactTextString(m) }
func (*Account) ProtoMessage()    {}
func (*Account) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{0}
}

func (m *Account) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Account.Unmarshal(m, b)
}
func (m *Account) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Account.Marshal(b, m, deterministic)
}
func (m *Account) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Account.Merge(m, src)
}
func (m *Account) XXX_Size() int {
	return xxx_messageInfo_Account.Size(m)
}
func (m *Account) XXX_DiscardUnknown() {
	xxx_messageInfo_Account.DiscardUnknown(m)
}

var xxx_messageInfo_Account proto.InternalMessageInfo

func (m *Account) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *Account) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type StatusRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusRequest) Reset()         { *m = StatusRequest{} }
func (m *StatusRequest) String() string { return proto.CompactTextString(m) }
func (*StatusRequest) ProtoMessage()    {}
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{1}
}

func (m *StatusRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusRequest.Unmarshal(m, b)
}
func (m *StatusRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusRequest.Marshal(b, m, deterministic)
}
func (m *StatusRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusRequest.Merge(m, src)
}
func (m *StatusRequest) XXX_Size() int {
	return xxx_messageInfo_StatusRequest.Size(m)
}
func (m *StatusRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StatusRequest proto.InternalMessageInfo

type StatusResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusResponse) Reset()         { *m = StatusResponse{} }
func (m *StatusResponse) String() string { return proto.CompactTextString(m) }
func (*StatusResponse) ProtoMessage()    {}
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{2}
}

func (m *StatusResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusResponse.Unmarshal(m, b)
}
func (m *StatusResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusResponse.Marshal(b, m, deterministic)
}
func (m *StatusResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusResponse.Merge(m, src)
}
func (m *StatusResponse) XXX_Size() int {
	return xxx_messageInfo_StatusResponse.Size(m)
}
func (m *StatusResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StatusResponse proto.InternalMessageInfo

func (m *StatusResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

type OpenRequest struct {
	Passphrase           string   `protobuf:"bytes,1,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenRequest) Reset()         { *m = OpenRequest{} }
func (m *OpenRequest) String() string { return proto.CompactTextString(m) }
func (*OpenRequest) ProtoMessage()    {}
func (*OpenRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{3}
}

func (m *OpenRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenRequest.Unmarshal(m, b)
}
func (m *OpenRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenRequest.Marshal(b, m, deterministic)
}
func (m *OpenRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenRequest.Merge(m, src)
}
func (m *OpenRequest) XXX_Size() int {
	return xxx_messageInfo_OpenRequest.Size(m)
}
func (m *OpenRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OpenRequest proto.InternalMessageInfo

func (m *OpenRequest) GetPassphrase() string {
	if m != nil {
		return m.Passphrase
	}
	return ""
}

type OpenResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenResponse) Reset()         { *m = OpenResponse{} }
func (m *OpenResponse) String() string { return proto.CompactTextString(m) }
func (*OpenResponse) ProtoMessage()    {}
func (*OpenResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{4}
}

func (m *OpenResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenResponse.Unmarshal(m, b)
}
func (m *OpenResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenResponse.Marshal(b, m, deterministic)
}
func (m *OpenResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenResponse.Merge(m, src)
}
func (m *OpenResponse) XXX_Size() int {
	return xxx_messageInfo_OpenResponse.Size(m)
}
func (m *OpenResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OpenResponse proto.InternalMessageInfo

type CloseRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseRequest) Reset()         { *m = CloseRequest{} }
func (m *CloseRequest) String() string { return proto.CompactTextString(m) }
func (*CloseRequest) ProtoMessage()    {}
func (*CloseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{5}
}

func (m *CloseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseRequest.Unmarshal(m, b)
}
func (m *CloseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseRequest.Marshal(b, m, deterministic)
}
func (m *CloseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseRequest.Merge(m, src)
}
func (m *CloseRequest) XXX_Size() int {
	return xxx_messageInfo_CloseRequest.Size(m)
}
func (m *CloseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CloseRequest proto.InternalMessageInfo

type CloseResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CloseResponse) Reset()         { *m = CloseResponse{} }
func (m *CloseResponse) String() string { return proto.CompactTextString(m) }
func (*CloseResponse) ProtoMessage()    {}
func (*CloseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{6}
}

func (m *CloseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CloseResponse.Unmarshal(m, b)
}
func (m *CloseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CloseResponse.Marshal(b, m, deterministic)
}
func (m *CloseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CloseResponse.Merge(m, src)
}
func (m *CloseResponse) XXX_Size() int {
	return xxx_messageInfo_CloseResponse.Size(m)
}
func (m *CloseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CloseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CloseResponse proto.InternalMessageInfo

type AccountsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AccountsRequest) Reset()         { *m = AccountsRequest{} }
func (m *AccountsRequest) String() string { return proto.CompactTextString(m) }
func (*AccountsRequest) ProtoMessage()    {}
func (*AccountsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{7}
}

func (m *AccountsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountsRequest.Unmarshal(m, b)
}
func (m *AccountsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountsRequest.Marshal(b, m, deterministic)
}
func (m *AccountsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountsRequest.Merge(m, src)
}
func (m *AccountsRequest) XXX_Size() int {
	return xxx_messageInfo_AccountsRequest.Size(m)
}
func (m *AccountsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AccountsRequest proto.InternalMessageInfo

type AccountsResponse struct {
	Accounts             []*Account `protobuf:"bytes,1,rep,name=accounts,proto3" json:"accounts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *AccountsResponse) Reset()         { *m = AccountsResponse{} }
func (m *AccountsResponse) String() string { return proto.CompactTextString(m) }
func (*AccountsResponse) ProtoMessage()    {}
func (*AccountsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{8}
}

func (m *AccountsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AccountsResponse.Unmarshal(m, b)
}
func (m *AccountsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AccountsResponse.Marshal(b, m, deterministic)
}
func (m *AccountsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AccountsResponse.Merge(m, src)
}
func (m *AccountsResponse) XXX_Size() int {
	return xxx_messageInfo_AccountsResponse.Size(m)
}
func (m *AccountsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AccountsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AccountsResponse proto.InternalMessageInfo

func (m *AccountsResponse) GetAccounts() []*Account {
	if m != nil {
		return m.Accounts
	}
	return nil
}

type ContainsRequest struct {
	Address              []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainsRequest) Reset()         { *m = ContainsRequest{} }
func (m *ContainsRequest) String() string { return proto.CompactTextString(m) }
func (*ContainsRequest) ProtoMessage()    {}
func (*ContainsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{9}
}

func (m *ContainsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainsRequest.Unmarshal(m, b)
}
func (m *ContainsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainsRequest.Marshal(b, m, deterministic)
}
func (m *ContainsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainsRequest.Merge(m, src)
}
func (m *ContainsRequest) XXX_Size() int {
	return xxx_messageInfo_ContainsRequest.Size(m)
}
func (m *ContainsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ContainsRequest proto.InternalMessageInfo

func (m *ContainsRequest) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

type ContainsResponse struct {
	IsContained          bool     `protobuf:"varint,1,opt,name=isContained,proto3" json:"isContained,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ContainsResponse) Reset()         { *m = ContainsResponse{} }
func (m *ContainsResponse) String() string { return proto.CompactTextString(m) }
func (*ContainsResponse) ProtoMessage()    {}
func (*ContainsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{10}
}

func (m *ContainsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ContainsResponse.Unmarshal(m, b)
}
func (m *ContainsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ContainsResponse.Marshal(b, m, deterministic)
}
func (m *ContainsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ContainsResponse.Merge(m, src)
}
func (m *ContainsResponse) XXX_Size() int {
	return xxx_messageInfo_ContainsResponse.Size(m)
}
func (m *ContainsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ContainsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ContainsResponse proto.InternalMessageInfo

func (m *ContainsResponse) GetIsContained() bool {
	if m != nil {
		return m.IsContained
	}
	return false
}

type SignRequest struct {
	Address              []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	ToSign               []byte   `protobuf:"bytes,2,opt,name=toSign,proto3" json:"toSign,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignRequest) Reset()         { *m = SignRequest{} }
func (m *SignRequest) String() string { return proto.CompactTextString(m) }
func (*SignRequest) ProtoMessage()    {}
func (*SignRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{11}
}

func (m *SignRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignRequest.Unmarshal(m, b)
}
func (m *SignRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignRequest.Marshal(b, m, deterministic)
}
func (m *SignRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignRequest.Merge(m, src)
}
func (m *SignRequest) XXX_Size() int {
	return xxx_messageInfo_SignRequest.Size(m)
}
func (m *SignRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SignRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SignRequest proto.InternalMessageInfo

func (m *SignRequest) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *SignRequest) GetToSign() []byte {
	if m != nil {
		return m.ToSign
	}
	return nil
}

type UnlockAndSignRequest struct {
	Address              []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	ToSign               []byte   `protobuf:"bytes,2,opt,name=toSign,proto3" json:"toSign,omitempty"`
	Passphrase           string   `protobuf:"bytes,3,opt,name=passphrase,proto3" json:"passphrase,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnlockAndSignRequest) Reset()         { *m = UnlockAndSignRequest{} }
func (m *UnlockAndSignRequest) String() string { return proto.CompactTextString(m) }
func (*UnlockAndSignRequest) ProtoMessage()    {}
func (*UnlockAndSignRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{12}
}

func (m *UnlockAndSignRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnlockAndSignRequest.Unmarshal(m, b)
}
func (m *UnlockAndSignRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnlockAndSignRequest.Marshal(b, m, deterministic)
}
func (m *UnlockAndSignRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnlockAndSignRequest.Merge(m, src)
}
func (m *UnlockAndSignRequest) XXX_Size() int {
	return xxx_messageInfo_UnlockAndSignRequest.Size(m)
}
func (m *UnlockAndSignRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UnlockAndSignRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UnlockAndSignRequest proto.InternalMessageInfo

func (m *UnlockAndSignRequest) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *UnlockAndSignRequest) GetToSign() []byte {
	if m != nil {
		return m.ToSign
	}
	return nil
}

func (m *UnlockAndSignRequest) GetPassphrase() string {
	if m != nil {
		return m.Passphrase
	}
	return ""
}

type SignResponse struct {
	Sig                  []byte   `protobuf:"bytes,1,opt,name=sig,proto3" json:"sig,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignResponse) Reset()         { *m = SignResponse{} }
func (m *SignResponse) String() string { return proto.CompactTextString(m) }
func (*SignResponse) ProtoMessage()    {}
func (*SignResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{13}
}

func (m *SignResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignResponse.Unmarshal(m, b)
}
func (m *SignResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignResponse.Marshal(b, m, deterministic)
}
func (m *SignResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignResponse.Merge(m, src)
}
func (m *SignResponse) XXX_Size() int {
	return xxx_messageInfo_SignResponse.Size(m)
}
func (m *SignResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SignResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SignResponse proto.InternalMessageInfo

func (m *SignResponse) GetSig() []byte {
	if m != nil {
		return m.Sig
	}
	return nil
}

type TimedUnlockRequest struct {
	Address              []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Duration             int64    `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimedUnlockRequest) Reset()         { *m = TimedUnlockRequest{} }
func (m *TimedUnlockRequest) String() string { return proto.CompactTextString(m) }
func (*TimedUnlockRequest) ProtoMessage()    {}
func (*TimedUnlockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{14}
}

func (m *TimedUnlockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimedUnlockRequest.Unmarshal(m, b)
}
func (m *TimedUnlockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimedUnlockRequest.Marshal(b, m, deterministic)
}
func (m *TimedUnlockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimedUnlockRequest.Merge(m, src)
}
func (m *TimedUnlockRequest) XXX_Size() int {
	return xxx_messageInfo_TimedUnlockRequest.Size(m)
}
func (m *TimedUnlockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TimedUnlockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TimedUnlockRequest proto.InternalMessageInfo

func (m *TimedUnlockRequest) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

func (m *TimedUnlockRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *TimedUnlockRequest) GetDuration() int64 {
	if m != nil {
		return m.Duration
	}
	return 0
}

type TimedUnlockResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TimedUnlockResponse) Reset()         { *m = TimedUnlockResponse{} }
func (m *TimedUnlockResponse) String() string { return proto.CompactTextString(m) }
func (*TimedUnlockResponse) ProtoMessage()    {}
func (*TimedUnlockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{15}
}

func (m *TimedUnlockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TimedUnlockResponse.Unmarshal(m, b)
}
func (m *TimedUnlockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TimedUnlockResponse.Marshal(b, m, deterministic)
}
func (m *TimedUnlockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TimedUnlockResponse.Merge(m, src)
}
func (m *TimedUnlockResponse) XXX_Size() int {
	return xxx_messageInfo_TimedUnlockResponse.Size(m)
}
func (m *TimedUnlockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TimedUnlockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TimedUnlockResponse proto.InternalMessageInfo

type LockRequest struct {
	Address              []byte   `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LockRequest) Reset()         { *m = LockRequest{} }
func (m *LockRequest) String() string { return proto.CompactTextString(m) }
func (*LockRequest) ProtoMessage()    {}
func (*LockRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{16}
}

func (m *LockRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LockRequest.Unmarshal(m, b)
}
func (m *LockRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LockRequest.Marshal(b, m, deterministic)
}
func (m *LockRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LockRequest.Merge(m, src)
}
func (m *LockRequest) XXX_Size() int {
	return xxx_messageInfo_LockRequest.Size(m)
}
func (m *LockRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LockRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LockRequest proto.InternalMessageInfo

func (m *LockRequest) GetAddress() []byte {
	if m != nil {
		return m.Address
	}
	return nil
}

type LockResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LockResponse) Reset()         { *m = LockResponse{} }
func (m *LockResponse) String() string { return proto.CompactTextString(m) }
func (*LockResponse) ProtoMessage()    {}
func (*LockResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{17}
}

func (m *LockResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LockResponse.Unmarshal(m, b)
}
func (m *LockResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LockResponse.Marshal(b, m, deterministic)
}
func (m *LockResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LockResponse.Merge(m, src)
}
func (m *LockResponse) XXX_Size() int {
	return xxx_messageInfo_LockResponse.Size(m)
}
func (m *LockResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LockResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LockResponse proto.InternalMessageInfo

type NewAccountRequest struct {
	NewAccountConfig     []byte   `protobuf:"bytes,1,opt,name=newAccountConfig,proto3" json:"newAccountConfig,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewAccountRequest) Reset()         { *m = NewAccountRequest{} }
func (m *NewAccountRequest) String() string { return proto.CompactTextString(m) }
func (*NewAccountRequest) ProtoMessage()    {}
func (*NewAccountRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{18}
}

func (m *NewAccountRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewAccountRequest.Unmarshal(m, b)
}
func (m *NewAccountRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewAccountRequest.Marshal(b, m, deterministic)
}
func (m *NewAccountRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewAccountRequest.Merge(m, src)
}
func (m *NewAccountRequest) XXX_Size() int {
	return xxx_messageInfo_NewAccountRequest.Size(m)
}
func (m *NewAccountRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewAccountRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewAccountRequest proto.InternalMessageInfo

func (m *NewAccountRequest) GetNewAccountConfig() []byte {
	if m != nil {
		return m.NewAccountConfig
	}
	return nil
}

type NewAccountResponse struct {
	Account              *Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewAccountResponse) Reset()         { *m = NewAccountResponse{} }
func (m *NewAccountResponse) String() string { return proto.CompactTextString(m) }
func (*NewAccountResponse) ProtoMessage()    {}
func (*NewAccountResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{19}
}

func (m *NewAccountResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewAccountResponse.Unmarshal(m, b)
}
func (m *NewAccountResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewAccountResponse.Marshal(b, m, deterministic)
}
func (m *NewAccountResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewAccountResponse.Merge(m, src)
}
func (m *NewAccountResponse) XXX_Size() int {
	return xxx_messageInfo_NewAccountResponse.Size(m)
}
func (m *NewAccountResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NewAccountResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NewAccountResponse proto.InternalMessageInfo

func (m *NewAccountResponse) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

type ImportRawKeyRequest struct {
	RawKey               string   `protobuf:"bytes,1,opt,name=rawKey,proto3" json:"rawKey,omitempty"`
	NewAccountConfig     []byte   `protobuf:"bytes,2,opt,name=newAccountConfig,proto3" json:"newAccountConfig,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportRawKeyRequest) Reset()         { *m = ImportRawKeyRequest{} }
func (m *ImportRawKeyRequest) String() string { return proto.CompactTextString(m) }
func (*ImportRawKeyRequest) ProtoMessage()    {}
func (*ImportRawKeyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{20}
}

func (m *ImportRawKeyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportRawKeyRequest.Unmarshal(m, b)
}
func (m *ImportRawKeyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportRawKeyRequest.Marshal(b, m, deterministic)
}
func (m *ImportRawKeyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportRawKeyRequest.Merge(m, src)
}
func (m *ImportRawKeyRequest) XXX_Size() int {
	return xxx_messageInfo_ImportRawKeyRequest.Size(m)
}
func (m *ImportRawKeyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportRawKeyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImportRawKeyRequest proto.InternalMessageInfo

func (m *ImportRawKeyRequest) GetRawKey() string {
	if m != nil {
		return m.RawKey
	}
	return ""
}

func (m *ImportRawKeyRequest) GetNewAccountConfig() []byte {
	if m != nil {
		return m.NewAccountConfig
	}
	return nil
}

type ImportRawKeyResponse struct {
	Account              *Account `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImportRawKeyResponse) Reset()         { *m = ImportRawKeyResponse{} }
func (m *ImportRawKeyResponse) String() string { return proto.CompactTextString(m) }
func (*ImportRawKeyResponse) ProtoMessage()    {}
func (*ImportRawKeyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8e28828dcb8d24f0, []int{21}
}

func (m *ImportRawKeyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImportRawKeyResponse.Unmarshal(m, b)
}
func (m *ImportRawKeyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImportRawKeyResponse.Marshal(b, m, deterministic)
}
func (m *ImportRawKeyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImportRawKeyResponse.Merge(m, src)
}
func (m *ImportRawKeyResponse) XXX_Size() int {
	return xxx_messageInfo_ImportRawKeyResponse.Size(m)
}
func (m *ImportRawKeyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ImportRawKeyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ImportRawKeyResponse proto.InternalMessageInfo

func (m *ImportRawKeyResponse) GetAccount() *Account {
	if m != nil {
		return m.Account
	}
	return nil
}

func init() {
	proto.RegisterType((*Account)(nil), "proto.Account")
	proto.RegisterType((*StatusRequest)(nil), "proto.StatusRequest")
	proto.RegisterType((*StatusResponse)(nil), "proto.StatusResponse")
	proto.RegisterType((*OpenRequest)(nil), "proto.OpenRequest")
	proto.RegisterType((*OpenResponse)(nil), "proto.OpenResponse")
	proto.RegisterType((*CloseRequest)(nil), "proto.CloseRequest")
	proto.RegisterType((*CloseResponse)(nil), "proto.CloseResponse")
	proto.RegisterType((*AccountsRequest)(nil), "proto.AccountsRequest")
	proto.RegisterType((*AccountsResponse)(nil), "proto.AccountsResponse")
	proto.RegisterType((*ContainsRequest)(nil), "proto.ContainsRequest")
	proto.RegisterType((*ContainsResponse)(nil), "proto.ContainsResponse")
	proto.RegisterType((*SignRequest)(nil), "proto.SignRequest")
	proto.RegisterType((*UnlockAndSignRequest)(nil), "proto.UnlockAndSignRequest")
	proto.RegisterType((*SignResponse)(nil), "proto.SignResponse")
	proto.RegisterType((*TimedUnlockRequest)(nil), "proto.TimedUnlockRequest")
	proto.RegisterType((*TimedUnlockResponse)(nil), "proto.TimedUnlockResponse")
	proto.RegisterType((*LockRequest)(nil), "proto.LockRequest")
	proto.RegisterType((*LockResponse)(nil), "proto.LockResponse")
	proto.RegisterType((*NewAccountRequest)(nil), "proto.NewAccountRequest")
	proto.RegisterType((*NewAccountResponse)(nil), "proto.NewAccountResponse")
	proto.RegisterType((*ImportRawKeyRequest)(nil), "proto.ImportRawKeyRequest")
	proto.RegisterType((*ImportRawKeyResponse)(nil), "proto.ImportRawKeyResponse")
}

func init() { proto.RegisterFile("account.proto", fileDescriptor_8e28828dcb8d24f0) }

var fileDescriptor_8e28828dcb8d24f0 = []byte{
	// 607 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0x5b, 0x6f, 0xd3, 0x30,
	0x14, 0x56, 0xd7, 0xf5, 0xb2, 0x93, 0xde, 0xe6, 0x76, 0xa5, 0xcb, 0x24, 0x54, 0xf9, 0x85, 0x6a,
	0x88, 0x4d, 0x2a, 0xec, 0x09, 0x69, 0xa3, 0x2a, 0x12, 0x42, 0x4c, 0x20, 0xa5, 0xf0, 0xc0, 0x63,
	0x68, 0xbc, 0x2d, 0xa2, 0x8b, 0x43, 0x9c, 0x52, 0xf1, 0x63, 0xf8, 0xaf, 0xc8, 0xce, 0xb1, 0xeb,
	0x34, 0x99, 0x06, 0xe2, 0x29, 0x39, 0xdf, 0xb9, 0x7d, 0xc7, 0x3e, 0x9f, 0xa1, 0xed, 0x2f, 0x97,
	0x7c, 0x1d, 0xa5, 0x67, 0x71, 0xc2, 0x53, 0x4e, 0x6a, 0xea, 0x43, 0x2f, 0xa0, 0x31, 0xcb, 0x70,
	0x32, 0x82, 0x86, 0x1f, 0x04, 0x09, 0x13, 0x62, 0x54, 0x19, 0x57, 0x26, 0x2d, 0x4f, 0x9b, 0xa4,
	0x07, 0xd5, 0x75, 0xb2, 0x1a, 0xed, 0x8d, 0x2b, 0x93, 0x03, 0x4f, 0xfe, 0xd2, 0x2e, 0xb4, 0x17,
	0xa9, 0x9f, 0xae, 0x85, 0xc7, 0x7e, 0xac, 0x99, 0x48, 0xe9, 0x04, 0x3a, 0x1a, 0x10, 0x31, 0x8f,
	0x04, 0x23, 0x43, 0xa8, 0x0b, 0x85, 0xa8, 0x6a, 0x07, 0x1e, 0x5a, 0xf4, 0x05, 0x38, 0x9f, 0x62,
	0x16, 0x61, 0x22, 0x79, 0x0a, 0x10, 0xfb, 0x42, 0xc4, 0x77, 0x89, 0x2f, 0x18, 0x86, 0x5a, 0x08,
	0xed, 0x40, 0x2b, 0x0b, 0xcf, 0xca, 0x4a, 0x7b, 0xbe, 0xe2, 0x82, 0xe9, 0xc6, 0x5d, 0x68, 0xa3,
	0x8d, 0x01, 0x87, 0xd0, 0xc5, 0x89, 0x0c, 0xb9, 0x4b, 0xe8, 0x6d, 0x21, 0xa4, 0x77, 0x0a, 0x4d,
	0x3c, 0x10, 0x49, 0xb0, 0x3a, 0x71, 0xa6, 0x9d, 0xec, 0x64, 0xce, 0x30, 0xd4, 0x33, 0x7e, 0xfa,
	0x1c, 0xba, 0x73, 0x1e, 0xa5, 0x7e, 0x18, 0xe9, 0x92, 0x0f, 0x1f, 0x16, 0x7d, 0x05, 0xbd, 0x6d,
	0x30, 0x36, 0x1b, 0x83, 0x13, 0x0a, 0x44, 0x59, 0xa0, 0x32, 0x9a, 0x9e, 0x0d, 0xd1, 0x2b, 0x70,
	0x16, 0xe1, 0x6d, 0xf4, 0x68, 0x79, 0x79, 0xac, 0x29, 0x97, 0xa1, 0xea, 0x3a, 0x5a, 0x1e, 0x5a,
	0xf4, 0x0e, 0x06, 0x5f, 0xa2, 0x15, 0x5f, 0x7e, 0x9f, 0x45, 0xc1, 0x7f, 0x55, 0xda, 0xb9, 0x91,
	0x6a, 0xe1, 0x46, 0xc6, 0xd0, 0xca, 0x1a, 0xe0, 0x70, 0x3d, 0xa8, 0x8a, 0xf0, 0x16, 0xab, 0xcb,
	0x5f, 0x7a, 0x03, 0xe4, 0x73, 0x78, 0xcf, 0x82, 0x8c, 0xd0, 0xe3, 0x4c, 0x5c, 0x68, 0xca, 0xfa,
	0x1b, 0x9e, 0x04, 0xb8, 0x64, 0xc6, 0x96, 0xbe, 0x60, 0x9d, 0xf8, 0x69, 0xc8, 0x23, 0xc5, 0xa5,
	0xea, 0x19, 0x9b, 0x1e, 0x41, 0x3f, 0xd7, 0x07, 0x37, 0xe0, 0x19, 0x38, 0xd7, 0x7f, 0xd3, 0x57,
	0xee, 0xd2, 0xb5, 0x9d, 0x78, 0x05, 0x87, 0x1f, 0xd9, 0x46, 0xdf, 0x3f, 0xa6, 0x9f, 0x42, 0x2f,
	0x32, 0xe0, 0x9c, 0x47, 0x37, 0x66, 0xd6, 0x02, 0x4e, 0x2f, 0x81, 0xd8, 0x05, 0xf0, 0x80, 0x26,
	0xd0, 0xc0, 0x55, 0x52, 0x89, 0xc5, 0x4d, 0xd3, 0x6e, 0xfa, 0x15, 0xfa, 0xef, 0xef, 0x63, 0x9e,
	0xa4, 0x9e, 0xbf, 0xf9, 0xc0, 0x7e, 0x69, 0x0a, 0x43, 0xa8, 0x27, 0x0a, 0xd0, 0x52, 0xca, 0xac,
	0x52, 0x6a, 0x7b, 0x0f, 0x50, 0x7b, 0x03, 0x83, 0x7c, 0xe9, 0x7f, 0x25, 0x37, 0xfd, 0x5d, 0x83,
	0x0e, 0x82, 0x0b, 0x96, 0xfc, 0x0c, 0x97, 0x8c, 0x5c, 0x40, 0x3d, 0x53, 0x3d, 0x19, 0x60, 0x56,
	0xee, 0x55, 0x70, 0x8f, 0x76, 0x50, 0xec, 0x79, 0x0e, 0xfb, 0x52, 0xd3, 0x84, 0xa0, 0xdb, 0x7a,
	0x0f, 0xdc, 0x7e, 0x0e, 0xc3, 0x84, 0x29, 0xd4, 0x94, 0xc8, 0x89, 0xf6, 0xda, 0x4f, 0x80, 0x3b,
	0xc8, 0x83, 0x98, 0xf3, 0x1a, 0x9a, 0x5a, 0xf4, 0x64, 0x98, 0x9f, 0xc9, 0xf0, 0x7b, 0x52, 0xc0,
	0xb7, 0xc9, 0x5a, 0xc4, 0x26, 0x79, 0xe7, 0x09, 0x30, 0xc9, 0x05, 0xb5, 0x9f, 0xc3, 0xbe, 0x12,
	0x92, 0x1e, 0xcf, 0x92, 0xa3, 0x19, 0x2f, 0xa7, 0xa0, 0x19, 0xb4, 0x73, 0xda, 0x25, 0x27, 0x18,
	0x55, 0xa6, 0xe8, 0xf2, 0x12, 0x6f, 0xc1, 0xb1, 0xa4, 0x40, 0x8e, 0x31, 0xa6, 0x28, 0x43, 0xd7,
	0x2d, 0x73, 0x6d, 0x99, 0x4b, 0x41, 0x18, 0xe6, 0x96, 0x8c, 0x4c, 0x5b, 0x5b, 0x31, 0x64, 0x06,
	0xb0, 0x5d, 0x78, 0x32, 0xc2, 0x90, 0x82, 0x88, 0xdc, 0xe3, 0x12, 0x0f, 0x96, 0x78, 0x07, 0x2d,
	0x7b, 0x31, 0x89, 0xe6, 0x57, 0x22, 0x04, 0xf7, 0xa4, 0xd4, 0x97, 0x15, 0xfa, 0x56, 0x57, 0xbe,
	0x97, 0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0xa7, 0x24, 0x9f, 0x52, 0xe9, 0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AccountServiceClient is the client API for AccountService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AccountServiceClient interface {
	// Status provides a string message describing the current state of the plugin.
	// The content of the returned state is left to the developer's discretion.
	// Examples include information on the business-level state (e.g. currently unlocked accounts) and process-level state (e.g. is plugin healthy)
	Status(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (*StatusResponse, error)
	// The specific behaviour of Open will depend on the backend being implemented.
	// It may be that Open is not required in which case it should be implemented as a no-op.
	// It should not unlock or decrypt account keys.
	// Open may be used to initialize resources or create a connection to the storage backend.
	// It should be expected that any allocated resources or connections can be released by calling Close.
	Open(ctx context.Context, in *OpenRequest, opts ...grpc.CallOption) (*OpenResponse, error)
	// The specific behaviour of Close will depend on the backend being implemented.
	// It may be that Close is not required, in which case it should be implemented as a no-op.
	// Close releases any resources or connections allocated by Open.
	Close(ctx context.Context, in *CloseRequest, opts ...grpc.CallOption) (*CloseResponse, error)
	// Accounts returns the currently available accounts managed by the plugin.
	Accounts(ctx context.Context, in *AccountsRequest, opts ...grpc.CallOption) (*AccountsResponse, error)
	// Contains returns whether the provided account is managed by the plugin.
	Contains(ctx context.Context, in *ContainsRequest, opts ...grpc.CallOption) (*ContainsResponse, error)
	// Sign signs the provided data with the specified account
	Sign(ctx context.Context, in *SignRequest, opts ...grpc.CallOption) (*SignResponse, error)
	// UnlockAndSign unlocks the specified account with the provided passphrase and uses it to sign the provided data.
	// The account will be locked once the signing is complete.
	// It may be that the storage backend being implemented does not rely on passphrase-encryption, in which case the
	// passphrase parameter should be ignored when unlocking.
	UnlockAndSign(ctx context.Context, in *UnlockAndSignRequest, opts ...grpc.CallOption) (*SignResponse, error)
	// TimedUnlock unlocks the specified account with the provided passphrase for the duration provided.
	// The duration is provided in nanoseconds.
	// It may be that the storage backend being implemented does not rely on passphrase-encryption, in which case the
	// passphrase parameter should be ignored when unlocking.
	TimedUnlock(ctx context.Context, in *TimedUnlockRequest, opts ...grpc.CallOption) (*TimedUnlockResponse, error)
	// Lock immediately locks the specified account, overriding any existing timed unlocks.
	Lock(ctx context.Context, in *LockRequest, opts ...grpc.CallOption) (*LockResponse, error)
	// NewAccount creates a new account and stores it in the backend.
	// The newAccountConfig is provided as a generic json-encoded byte array to allow for the structure of the config
	// to be left to the developer's discretion.
	NewAccount(ctx context.Context, in *NewAccountRequest, opts ...grpc.CallOption) (*NewAccountResponse, error)
	// ImportRawKey creates a new account from the provided hex-encoded private key and stores it in the backend.
	// Validation of the hex string private key is not required as this handled by Quorum.
	// The newAccountConfig is provided as a generic json-encoded byte array to allow for the structure of the config
	// to be left to the developer's discretion.
	ImportRawKey(ctx context.Context, in *ImportRawKeyRequest, opts ...grpc.CallOption) (*ImportRawKeyResponse, error)
}

type accountServiceClient struct {
	cc *grpc.ClientConn
}

func NewAccountServiceClient(cc *grpc.ClientConn) AccountServiceClient {
	return &accountServiceClient{cc}
}

func (c *accountServiceClient) Status(ctx context.Context, in *StatusRequest, opts ...grpc.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := c.cc.Invoke(ctx, "/proto.AccountService/Status", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) Open(ctx context.Context, in *OpenRequest, opts ...grpc.CallOption) (*OpenResponse, error) {
	out := new(OpenResponse)
	err := c.cc.Invoke(ctx, "/proto.AccountService/Open", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) Close(ctx context.Context, in *CloseRequest, opts ...grpc.CallOption) (*CloseResponse, error) {
	out := new(CloseResponse)
	err := c.cc.Invoke(ctx, "/proto.AccountService/Close", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) Accounts(ctx context.Context, in *AccountsRequest, opts ...grpc.CallOption) (*AccountsResponse, error) {
	out := new(AccountsResponse)
	err := c.cc.Invoke(ctx, "/proto.AccountService/Accounts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) Contains(ctx context.Context, in *ContainsRequest, opts ...grpc.CallOption) (*ContainsResponse, error) {
	out := new(ContainsResponse)
	err := c.cc.Invoke(ctx, "/proto.AccountService/Contains", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) Sign(ctx context.Context, in *SignRequest, opts ...grpc.CallOption) (*SignResponse, error) {
	out := new(SignResponse)
	err := c.cc.Invoke(ctx, "/proto.AccountService/Sign", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) UnlockAndSign(ctx context.Context, in *UnlockAndSignRequest, opts ...grpc.CallOption) (*SignResponse, error) {
	out := new(SignResponse)
	err := c.cc.Invoke(ctx, "/proto.AccountService/UnlockAndSign", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) TimedUnlock(ctx context.Context, in *TimedUnlockRequest, opts ...grpc.CallOption) (*TimedUnlockResponse, error) {
	out := new(TimedUnlockResponse)
	err := c.cc.Invoke(ctx, "/proto.AccountService/TimedUnlock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) Lock(ctx context.Context, in *LockRequest, opts ...grpc.CallOption) (*LockResponse, error) {
	out := new(LockResponse)
	err := c.cc.Invoke(ctx, "/proto.AccountService/Lock", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) NewAccount(ctx context.Context, in *NewAccountRequest, opts ...grpc.CallOption) (*NewAccountResponse, error) {
	out := new(NewAccountResponse)
	err := c.cc.Invoke(ctx, "/proto.AccountService/NewAccount", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountServiceClient) ImportRawKey(ctx context.Context, in *ImportRawKeyRequest, opts ...grpc.CallOption) (*ImportRawKeyResponse, error) {
	out := new(ImportRawKeyResponse)
	err := c.cc.Invoke(ctx, "/proto.AccountService/ImportRawKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AccountServiceServer is the server API for AccountService service.
type AccountServiceServer interface {
	// Status provides a string message describing the current state of the plugin.
	// The content of the returned state is left to the developer's discretion.
	// Examples include information on the business-level state (e.g. currently unlocked accounts) and process-level state (e.g. is plugin healthy)
	Status(context.Context, *StatusRequest) (*StatusResponse, error)
	// The specific behaviour of Open will depend on the backend being implemented.
	// It may be that Open is not required in which case it should be implemented as a no-op.
	// It should not unlock or decrypt account keys.
	// Open may be used to initialize resources or create a connection to the storage backend.
	// It should be expected that any allocated resources or connections can be released by calling Close.
	Open(context.Context, *OpenRequest) (*OpenResponse, error)
	// The specific behaviour of Close will depend on the backend being implemented.
	// It may be that Close is not required, in which case it should be implemented as a no-op.
	// Close releases any resources or connections allocated by Open.
	Close(context.Context, *CloseRequest) (*CloseResponse, error)
	// Accounts returns the currently available accounts managed by the plugin.
	Accounts(context.Context, *AccountsRequest) (*AccountsResponse, error)
	// Contains returns whether the provided account is managed by the plugin.
	Contains(context.Context, *ContainsRequest) (*ContainsResponse, error)
	// Sign signs the provided data with the specified account
	Sign(context.Context, *SignRequest) (*SignResponse, error)
	// UnlockAndSign unlocks the specified account with the provided passphrase and uses it to sign the provided data.
	// The account will be locked once the signing is complete.
	// It may be that the storage backend being implemented does not rely on passphrase-encryption, in which case the
	// passphrase parameter should be ignored when unlocking.
	UnlockAndSign(context.Context, *UnlockAndSignRequest) (*SignResponse, error)
	// TimedUnlock unlocks the specified account with the provided passphrase for the duration provided.
	// The duration is provided in nanoseconds.
	// It may be that the storage backend being implemented does not rely on passphrase-encryption, in which case the
	// passphrase parameter should be ignored when unlocking.
	TimedUnlock(context.Context, *TimedUnlockRequest) (*TimedUnlockResponse, error)
	// Lock immediately locks the specified account, overriding any existing timed unlocks.
	Lock(context.Context, *LockRequest) (*LockResponse, error)
	// NewAccount creates a new account and stores it in the backend.
	// The newAccountConfig is provided as a generic json-encoded byte array to allow for the structure of the config
	// to be left to the developer's discretion.
	NewAccount(context.Context, *NewAccountRequest) (*NewAccountResponse, error)
	// ImportRawKey creates a new account from the provided hex-encoded private key and stores it in the backend.
	// Validation of the hex string private key is not required as this handled by Quorum.
	// The newAccountConfig is provided as a generic json-encoded byte array to allow for the structure of the config
	// to be left to the developer's discretion.
	ImportRawKey(context.Context, *ImportRawKeyRequest) (*ImportRawKeyResponse, error)
}

// UnimplementedAccountServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAccountServiceServer struct {
}

func (*UnimplementedAccountServiceServer) Status(ctx context.Context, req *StatusRequest) (*StatusResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Status not implemented")
}
func (*UnimplementedAccountServiceServer) Open(ctx context.Context, req *OpenRequest) (*OpenResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Open not implemented")
}
func (*UnimplementedAccountServiceServer) Close(ctx context.Context, req *CloseRequest) (*CloseResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Close not implemented")
}
func (*UnimplementedAccountServiceServer) Accounts(ctx context.Context, req *AccountsRequest) (*AccountsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Accounts not implemented")
}
func (*UnimplementedAccountServiceServer) Contains(ctx context.Context, req *ContainsRequest) (*ContainsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Contains not implemented")
}
func (*UnimplementedAccountServiceServer) Sign(ctx context.Context, req *SignRequest) (*SignResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Sign not implemented")
}
func (*UnimplementedAccountServiceServer) UnlockAndSign(ctx context.Context, req *UnlockAndSignRequest) (*SignResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnlockAndSign not implemented")
}
func (*UnimplementedAccountServiceServer) TimedUnlock(ctx context.Context, req *TimedUnlockRequest) (*TimedUnlockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TimedUnlock not implemented")
}
func (*UnimplementedAccountServiceServer) Lock(ctx context.Context, req *LockRequest) (*LockResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Lock not implemented")
}
func (*UnimplementedAccountServiceServer) NewAccount(ctx context.Context, req *NewAccountRequest) (*NewAccountResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewAccount not implemented")
}
func (*UnimplementedAccountServiceServer) ImportRawKey(ctx context.Context, req *ImportRawKeyRequest) (*ImportRawKeyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ImportRawKey not implemented")
}

func RegisterAccountServiceServer(s *grpc.Server, srv AccountServiceServer) {
	s.RegisterService(&_AccountService_serviceDesc, srv)
}

func _AccountService_Status_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).Status(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AccountService/Status",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).Status(ctx, req.(*StatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_Open_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).Open(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AccountService/Open",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).Open(ctx, req.(*OpenRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_Close_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CloseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).Close(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AccountService/Close",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).Close(ctx, req.(*CloseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_Accounts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AccountsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).Accounts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AccountService/Accounts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).Accounts(ctx, req.(*AccountsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_Contains_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ContainsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).Contains(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AccountService/Contains",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).Contains(ctx, req.(*ContainsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_Sign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SignRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).Sign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AccountService/Sign",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).Sign(ctx, req.(*SignRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_UnlockAndSign_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnlockAndSignRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).UnlockAndSign(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AccountService/UnlockAndSign",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).UnlockAndSign(ctx, req.(*UnlockAndSignRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_TimedUnlock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TimedUnlockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).TimedUnlock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AccountService/TimedUnlock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).TimedUnlock(ctx, req.(*TimedUnlockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_Lock_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LockRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).Lock(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AccountService/Lock",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).Lock(ctx, req.(*LockRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_NewAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewAccountRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).NewAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AccountService/NewAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).NewAccount(ctx, req.(*NewAccountRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _AccountService_ImportRawKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImportRawKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServiceServer).ImportRawKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.AccountService/ImportRawKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServiceServer).ImportRawKey(ctx, req.(*ImportRawKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AccountService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.AccountService",
	HandlerType: (*AccountServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Status",
			Handler:    _AccountService_Status_Handler,
		},
		{
			MethodName: "Open",
			Handler:    _AccountService_Open_Handler,
		},
		{
			MethodName: "Close",
			Handler:    _AccountService_Close_Handler,
		},
		{
			MethodName: "Accounts",
			Handler:    _AccountService_Accounts_Handler,
		},
		{
			MethodName: "Contains",
			Handler:    _AccountService_Contains_Handler,
		},
		{
			MethodName: "Sign",
			Handler:    _AccountService_Sign_Handler,
		},
		{
			MethodName: "UnlockAndSign",
			Handler:    _AccountService_UnlockAndSign_Handler,
		},
		{
			MethodName: "TimedUnlock",
			Handler:    _AccountService_TimedUnlock_Handler,
		},
		{
			MethodName: "Lock",
			Handler:    _AccountService_Lock_Handler,
		},
		{
			MethodName: "NewAccount",
			Handler:    _AccountService_NewAccount_Handler,
		},
		{
			MethodName: "ImportRawKey",
			Handler:    _AccountService_ImportRawKey_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "account.proto",
}
