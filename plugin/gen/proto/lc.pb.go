// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: lc.proto

package proto

import (
	context "context"
	reflect "reflect"
	sync "sync"

	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EncodedDataForQuorumTransaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EncodedDataForQuorumTransaction) Reset() {
	*x = EncodedDataForQuorumTransaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lc_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncodedDataForQuorumTransaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncodedDataForQuorumTransaction) ProtoMessage() {}

func (x *EncodedDataForQuorumTransaction) ProtoReflect() protoreflect.Message {
	mi := &file_lc_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncodedDataForQuorumTransaction.ProtoReflect.Descriptor instead.
func (*EncodedDataForQuorumTransaction) Descriptor() ([]byte, []int) {
	return file_lc_proto_rawDescGZIP(), []int{0}
}

type LetterOfCreditInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LetterOfCreditInput) Reset() {
	*x = LetterOfCreditInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lc_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LetterOfCreditInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LetterOfCreditInput) ProtoMessage() {}

func (x *LetterOfCreditInput) ProtoReflect() protoreflect.Message {
	mi := &file_lc_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LetterOfCreditInput.ProtoReflect.Descriptor instead.
func (*LetterOfCreditInput) Descriptor() ([]byte, []int) {
	return file_lc_proto_rawDescGZIP(), []int{1}
}

type PresentationDocumentInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PresentationDocumentInput) Reset() {
	*x = PresentationDocumentInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lc_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PresentationDocumentInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresentationDocumentInput) ProtoMessage() {}

func (x *PresentationDocumentInput) ProtoReflect() protoreflect.Message {
	mi := &file_lc_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresentationDocumentInput.ProtoReflect.Descriptor instead.
func (*PresentationDocumentInput) Descriptor() ([]byte, []int) {
	return file_lc_proto_rawDescGZIP(), []int{2}
}

type DocumentationResultNotificationInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DocumentationResultNotificationInput) Reset() {
	*x = DocumentationResultNotificationInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lc_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentationResultNotificationInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentationResultNotificationInput) ProtoMessage() {}

func (x *DocumentationResultNotificationInput) ProtoReflect() protoreflect.Message {
	mi := &file_lc_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentationResultNotificationInput.ProtoReflect.Descriptor instead.
func (*DocumentationResultNotificationInput) Descriptor() ([]byte, []int) {
	return file_lc_proto_rawDescGZIP(), []int{3}
}

type UPASLCPaymentAcceptanceInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UPASLCPaymentAcceptanceInput) Reset() {
	*x = UPASLCPaymentAcceptanceInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lc_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UPASLCPaymentAcceptanceInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UPASLCPaymentAcceptanceInput) ProtoMessage() {}

func (x *UPASLCPaymentAcceptanceInput) ProtoReflect() protoreflect.Message {
	mi := &file_lc_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UPASLCPaymentAcceptanceInput.ProtoReflect.Descriptor instead.
func (*UPASLCPaymentAcceptanceInput) Descriptor() ([]byte, []int) {
	return file_lc_proto_rawDescGZIP(), []int{4}
}

type LCPaymentAcceptanceInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LCPaymentAcceptanceInput) Reset() {
	*x = LCPaymentAcceptanceInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lc_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LCPaymentAcceptanceInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LCPaymentAcceptanceInput) ProtoMessage() {}

func (x *LCPaymentAcceptanceInput) ProtoReflect() protoreflect.Message {
	mi := &file_lc_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LCPaymentAcceptanceInput.ProtoReflect.Descriptor instead.
func (*LCPaymentAcceptanceInput) Descriptor() ([]byte, []int) {
	return file_lc_proto_rawDescGZIP(), []int{5}
}

type UPASLCReimbursingBankToAdvisingBankPaymentInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UPASLCReimbursingBankToAdvisingBankPaymentInput) Reset() {
	*x = UPASLCReimbursingBankToAdvisingBankPaymentInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lc_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UPASLCReimbursingBankToAdvisingBankPaymentInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UPASLCReimbursingBankToAdvisingBankPaymentInput) ProtoMessage() {}

func (x *UPASLCReimbursingBankToAdvisingBankPaymentInput) ProtoReflect() protoreflect.Message {
	mi := &file_lc_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UPASLCReimbursingBankToAdvisingBankPaymentInput.ProtoReflect.Descriptor instead.
func (*UPASLCReimbursingBankToAdvisingBankPaymentInput) Descriptor() ([]byte, []int) {
	return file_lc_proto_rawDescGZIP(), []int{6}
}

type UPASLCIssuanceBankToReimbursingBankPaymentInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UPASLCIssuanceBankToReimbursingBankPaymentInput) Reset() {
	*x = UPASLCIssuanceBankToReimbursingBankPaymentInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lc_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UPASLCIssuanceBankToReimbursingBankPaymentInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UPASLCIssuanceBankToReimbursingBankPaymentInput) ProtoMessage() {}

func (x *UPASLCIssuanceBankToReimbursingBankPaymentInput) ProtoReflect() protoreflect.Message {
	mi := &file_lc_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UPASLCIssuanceBankToReimbursingBankPaymentInput.ProtoReflect.Descriptor instead.
func (*UPASLCIssuanceBankToReimbursingBankPaymentInput) Descriptor() ([]byte, []int) {
	return file_lc_proto_rawDescGZIP(), []int{7}
}

type LCIssuanceBankToAdvisingBankPaymentInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LCIssuanceBankToAdvisingBankPaymentInput) Reset() {
	*x = LCIssuanceBankToAdvisingBankPaymentInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lc_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LCIssuanceBankToAdvisingBankPaymentInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LCIssuanceBankToAdvisingBankPaymentInput) ProtoMessage() {}

func (x *LCIssuanceBankToAdvisingBankPaymentInput) ProtoReflect() protoreflect.Message {
	mi := &file_lc_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LCIssuanceBankToAdvisingBankPaymentInput.ProtoReflect.Descriptor instead.
func (*LCIssuanceBankToAdvisingBankPaymentInput) Descriptor() ([]byte, []int) {
	return file_lc_proto_rawDescGZIP(), []int{8}
}

type LCAdvisingBankToBeneficiaryPaymentInput struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LCAdvisingBankToBeneficiaryPaymentInput) Reset() {
	*x = LCAdvisingBankToBeneficiaryPaymentInput{}
	if protoimpl.UnsafeEnabled {
		mi := &file_lc_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LCAdvisingBankToBeneficiaryPaymentInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LCAdvisingBankToBeneficiaryPaymentInput) ProtoMessage() {}

func (x *LCAdvisingBankToBeneficiaryPaymentInput) ProtoReflect() protoreflect.Message {
	mi := &file_lc_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LCAdvisingBankToBeneficiaryPaymentInput.ProtoReflect.Descriptor instead.
func (*LCAdvisingBankToBeneficiaryPaymentInput) Descriptor() ([]byte, []int) {
	return file_lc_proto_rawDescGZIP(), []int{9}
}

var File_lc_proto protoreflect.FileDescriptor

var file_lc_proto_rawDesc = []byte{
	0x0a, 0x08, 0x6c, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x21, 0x0a, 0x1f, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61,
	0x46, 0x6f, 0x72, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x15, 0x0a, 0x13, 0x4c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x4f, 0x66,
	0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x1b, 0x0a, 0x19, 0x50,
	0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x26, 0x0a, 0x24, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x22, 0x1e, 0x0a, 0x1c, 0x55, 0x50, 0x41, 0x53, 0x4c, 0x43, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74,
	0x22, 0x1a, 0x0a, 0x18, 0x4c, 0x43, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63,
	0x65, 0x70, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x31, 0x0a, 0x2f,
	0x55, 0x50, 0x41, 0x53, 0x4c, 0x43, 0x52, 0x65, 0x69, 0x6d, 0x62, 0x75, 0x72, 0x73, 0x69, 0x6e,
	0x67, 0x42, 0x61, 0x6e, 0x6b, 0x54, 0x6f, 0x41, 0x64, 0x76, 0x69, 0x73, 0x69, 0x6e, 0x67, 0x42,
	0x61, 0x6e, 0x6b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x22,
	0x31, 0x0a, 0x2f, 0x55, 0x50, 0x41, 0x53, 0x4c, 0x43, 0x49, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63,
	0x65, 0x42, 0x61, 0x6e, 0x6b, 0x54, 0x6f, 0x52, 0x65, 0x69, 0x6d, 0x62, 0x75, 0x72, 0x73, 0x69,
	0x6e, 0x67, 0x42, 0x61, 0x6e, 0x6b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x22, 0x2a, 0x0a, 0x28, 0x4c, 0x43, 0x49, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65,
	0x42, 0x61, 0x6e, 0x6b, 0x54, 0x6f, 0x41, 0x64, 0x76, 0x69, 0x73, 0x69, 0x6e, 0x67, 0x42, 0x61,
	0x6e, 0x6b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x22, 0x29,
	0x0a, 0x27, 0x4c, 0x43, 0x41, 0x64, 0x76, 0x69, 0x73, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6e, 0x6b,
	0x54, 0x6f, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x32, 0xa7, 0x08, 0x0a, 0x11, 0x4c, 0x43,
	0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x54, 0x0a, 0x0e, 0x4c, 0x65, 0x74, 0x74, 0x65, 0x72, 0x4f, 0x66, 0x43, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x65, 0x74, 0x74, 0x65, 0x72,
	0x4f, 0x66, 0x43, 0x72, 0x65, 0x64, 0x69, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x26, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x46, 0x6f, 0x72, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x60, 0x0a, 0x14, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x76, 0x0a, 0x1f, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x51, 0x75,
	0x6f, 0x72, 0x75, 0x6d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x66, 0x0a, 0x17, 0x55, 0x50, 0x41, 0x53, 0x4c, 0x43, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x23, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x55, 0x50, 0x41, 0x53, 0x4c, 0x43, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5e, 0x0a, 0x13, 0x4c, 0x43, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x1f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x43, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a,
	0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x46, 0x6f, 0x72, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x8c, 0x01, 0x0a, 0x2a, 0x55, 0x50, 0x41, 0x53,
	0x4c, 0x43, 0x52, 0x65, 0x69, 0x6d, 0x62, 0x75, 0x72, 0x73, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6e,
	0x6b, 0x54, 0x6f, 0x41, 0x64, 0x76, 0x69, 0x73, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6e, 0x6b, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55,
	0x50, 0x41, 0x53, 0x4c, 0x43, 0x52, 0x65, 0x69, 0x6d, 0x62, 0x75, 0x72, 0x73, 0x69, 0x6e, 0x67,
	0x42, 0x61, 0x6e, 0x6b, 0x54, 0x6f, 0x41, 0x64, 0x76, 0x69, 0x73, 0x69, 0x6e, 0x67, 0x42, 0x61,
	0x6e, 0x6b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x26,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x46, 0x6f, 0x72, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x8c, 0x01, 0x0a, 0x2a, 0x55, 0x50, 0x41, 0x53, 0x4c,
	0x43, 0x49, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x54, 0x6f, 0x52,
	0x65, 0x69, 0x6d, 0x62, 0x75, 0x72, 0x73, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6e, 0x6b, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x50,
	0x41, 0x53, 0x4c, 0x43, 0x49, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x61, 0x6e, 0x6b,
	0x54, 0x6f, 0x52, 0x65, 0x69, 0x6d, 0x62, 0x75, 0x72, 0x73, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6e,
	0x6b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x26, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x46, 0x6f, 0x72, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x7e, 0x0a, 0x23, 0x4c, 0x43, 0x49, 0x73, 0x73, 0x75, 0x61,
	0x6e, 0x63, 0x65, 0x42, 0x61, 0x6e, 0x6b, 0x54, 0x6f, 0x41, 0x64, 0x76, 0x69, 0x73, 0x69, 0x6e,
	0x67, 0x42, 0x61, 0x6e, 0x6b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2f, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x43, 0x49, 0x73, 0x73, 0x75, 0x61, 0x6e, 0x63, 0x65, 0x42,
	0x61, 0x6e, 0x6b, 0x54, 0x6f, 0x41, 0x64, 0x76, 0x69, 0x73, 0x69, 0x6e, 0x67, 0x42, 0x61, 0x6e,
	0x6b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x26, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x44, 0x61, 0x74,
	0x61, 0x46, 0x6f, 0x72, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x7c, 0x0a, 0x22, 0x4c, 0x43, 0x41, 0x64, 0x76, 0x69, 0x73,
	0x69, 0x6e, 0x67, 0x42, 0x61, 0x6e, 0x6b, 0x54, 0x6f, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63,
	0x69, 0x61, 0x72, 0x79, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x43, 0x41, 0x64, 0x76, 0x69, 0x73, 0x69, 0x6e, 0x67, 0x42, 0x61,
	0x6e, 0x6b, 0x54, 0x6f, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x63, 0x69, 0x61, 0x72, 0x79, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x1a, 0x26, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x46,
	0x6f, 0x72, 0x51, 0x75, 0x6f, 0x72, 0x75, 0x6d, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_lc_proto_rawDescOnce sync.Once
	file_lc_proto_rawDescData = file_lc_proto_rawDesc
)

func file_lc_proto_rawDescGZIP() []byte {
	file_lc_proto_rawDescOnce.Do(func() {
		file_lc_proto_rawDescData = protoimpl.X.CompressGZIP(file_lc_proto_rawDescData)
	})
	return file_lc_proto_rawDescData
}

var file_lc_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_lc_proto_goTypes = []interface{}{
	(*EncodedDataForQuorumTransaction)(nil),                 // 0: proto.EncodedDataForQuorumTransaction
	(*LetterOfCreditInput)(nil),                             // 1: proto.LetterOfCreditInput
	(*PresentationDocumentInput)(nil),                       // 2: proto.PresentationDocumentInput
	(*DocumentationResultNotificationInput)(nil),            // 3: proto.DocumentationResultNotificationInput
	(*UPASLCPaymentAcceptanceInput)(nil),                    // 4: proto.UPASLCPaymentAcceptanceInput
	(*LCPaymentAcceptanceInput)(nil),                        // 5: proto.LCPaymentAcceptanceInput
	(*UPASLCReimbursingBankToAdvisingBankPaymentInput)(nil), // 6: proto.UPASLCReimbursingBankToAdvisingBankPaymentInput
	(*UPASLCIssuanceBankToReimbursingBankPaymentInput)(nil), // 7: proto.UPASLCIssuanceBankToReimbursingBankPaymentInput
	(*LCIssuanceBankToAdvisingBankPaymentInput)(nil),        // 8: proto.LCIssuanceBankToAdvisingBankPaymentInput
	(*LCAdvisingBankToBeneficiaryPaymentInput)(nil),         // 9: proto.LCAdvisingBankToBeneficiaryPaymentInput
}
var file_lc_proto_depIdxs = []int32{
	1, // 0: proto.LCProtocolService.LetterOfCredit:input_type -> proto.LetterOfCreditInput
	2, // 1: proto.LCProtocolService.PresentationDocument:input_type -> proto.PresentationDocumentInput
	3, // 2: proto.LCProtocolService.DocumentationResultNotification:input_type -> proto.DocumentationResultNotificationInput
	4, // 3: proto.LCProtocolService.UPASLCPaymentAcceptance:input_type -> proto.UPASLCPaymentAcceptanceInput
	5, // 4: proto.LCProtocolService.LCPaymentAcceptance:input_type -> proto.LCPaymentAcceptanceInput
	6, // 5: proto.LCProtocolService.UPASLCReimbursingBankToAdvisingBankPayment:input_type -> proto.UPASLCReimbursingBankToAdvisingBankPaymentInput
	7, // 6: proto.LCProtocolService.UPASLCIssuanceBankToReimbursingBankPayment:input_type -> proto.UPASLCIssuanceBankToReimbursingBankPaymentInput
	8, // 7: proto.LCProtocolService.LCIssuanceBankToAdvisingBankPayment:input_type -> proto.LCIssuanceBankToAdvisingBankPaymentInput
	9, // 8: proto.LCProtocolService.LCAdvisingBankToBeneficiaryPayment:input_type -> proto.LCAdvisingBankToBeneficiaryPaymentInput
	0, // 9: proto.LCProtocolService.LetterOfCredit:output_type -> proto.EncodedDataForQuorumTransaction
	0, // 10: proto.LCProtocolService.PresentationDocument:output_type -> proto.EncodedDataForQuorumTransaction
	0, // 11: proto.LCProtocolService.DocumentationResultNotification:output_type -> proto.EncodedDataForQuorumTransaction
	0, // 12: proto.LCProtocolService.UPASLCPaymentAcceptance:output_type -> proto.EncodedDataForQuorumTransaction
	0, // 13: proto.LCProtocolService.LCPaymentAcceptance:output_type -> proto.EncodedDataForQuorumTransaction
	0, // 14: proto.LCProtocolService.UPASLCReimbursingBankToAdvisingBankPayment:output_type -> proto.EncodedDataForQuorumTransaction
	0, // 15: proto.LCProtocolService.UPASLCIssuanceBankToReimbursingBankPayment:output_type -> proto.EncodedDataForQuorumTransaction
	0, // 16: proto.LCProtocolService.LCIssuanceBankToAdvisingBankPayment:output_type -> proto.EncodedDataForQuorumTransaction
	0, // 17: proto.LCProtocolService.LCAdvisingBankToBeneficiaryPayment:output_type -> proto.EncodedDataForQuorumTransaction
	9, // [9:18] is the sub-list for method output_type
	0, // [0:9] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_lc_proto_init() }
func file_lc_proto_init() {
	if File_lc_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_lc_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncodedDataForQuorumTransaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lc_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LetterOfCreditInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lc_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PresentationDocumentInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lc_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentationResultNotificationInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lc_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UPASLCPaymentAcceptanceInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lc_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LCPaymentAcceptanceInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lc_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UPASLCReimbursingBankToAdvisingBankPaymentInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lc_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UPASLCIssuanceBankToReimbursingBankPaymentInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lc_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LCIssuanceBankToAdvisingBankPaymentInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_lc_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LCAdvisingBankToBeneficiaryPaymentInput); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_lc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_lc_proto_goTypes,
		DependencyIndexes: file_lc_proto_depIdxs,
		MessageInfos:      file_lc_proto_msgTypes,
	}.Build()
	File_lc_proto = out.File
	file_lc_proto_rawDesc = nil
	file_lc_proto_goTypes = nil
	file_lc_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LCProtocolServiceClient is the client API for LCProtocolService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LCProtocolServiceClient interface {
	LetterOfCredit(ctx context.Context, in *LetterOfCreditInput, opts ...grpc.CallOption) (*EncodedDataForQuorumTransaction, error)
	PresentationDocument(ctx context.Context, in *PresentationDocumentInput, opts ...grpc.CallOption) (*EncodedDataForQuorumTransaction, error)
	DocumentationResultNotification(ctx context.Context, in *DocumentationResultNotificationInput, opts ...grpc.CallOption) (*EncodedDataForQuorumTransaction, error)
	UPASLCPaymentAcceptance(ctx context.Context, in *UPASLCPaymentAcceptanceInput, opts ...grpc.CallOption) (*EncodedDataForQuorumTransaction, error)
	LCPaymentAcceptance(ctx context.Context, in *LCPaymentAcceptanceInput, opts ...grpc.CallOption) (*EncodedDataForQuorumTransaction, error)
	UPASLCReimbursingBankToAdvisingBankPayment(ctx context.Context, in *UPASLCReimbursingBankToAdvisingBankPaymentInput, opts ...grpc.CallOption) (*EncodedDataForQuorumTransaction, error)
	UPASLCIssuanceBankToReimbursingBankPayment(ctx context.Context, in *UPASLCIssuanceBankToReimbursingBankPaymentInput, opts ...grpc.CallOption) (*EncodedDataForQuorumTransaction, error)
	LCIssuanceBankToAdvisingBankPayment(ctx context.Context, in *LCIssuanceBankToAdvisingBankPaymentInput, opts ...grpc.CallOption) (*EncodedDataForQuorumTransaction, error)
	LCAdvisingBankToBeneficiaryPayment(ctx context.Context, in *LCAdvisingBankToBeneficiaryPaymentInput, opts ...grpc.CallOption) (*EncodedDataForQuorumTransaction, error)
}

type lCProtocolServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewLCProtocolServiceClient(cc grpc.ClientConnInterface) LCProtocolServiceClient {
	return &lCProtocolServiceClient{cc}
}

func (c *lCProtocolServiceClient) LetterOfCredit(ctx context.Context, in *LetterOfCreditInput, opts ...grpc.CallOption) (*EncodedDataForQuorumTransaction, error) {
	out := new(EncodedDataForQuorumTransaction)
	err := c.cc.Invoke(ctx, "/proto.LCProtocolService/LetterOfCredit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lCProtocolServiceClient) PresentationDocument(ctx context.Context, in *PresentationDocumentInput, opts ...grpc.CallOption) (*EncodedDataForQuorumTransaction, error) {
	out := new(EncodedDataForQuorumTransaction)
	err := c.cc.Invoke(ctx, "/proto.LCProtocolService/PresentationDocument", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lCProtocolServiceClient) DocumentationResultNotification(ctx context.Context, in *DocumentationResultNotificationInput, opts ...grpc.CallOption) (*EncodedDataForQuorumTransaction, error) {
	out := new(EncodedDataForQuorumTransaction)
	err := c.cc.Invoke(ctx, "/proto.LCProtocolService/DocumentationResultNotification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lCProtocolServiceClient) UPASLCPaymentAcceptance(ctx context.Context, in *UPASLCPaymentAcceptanceInput, opts ...grpc.CallOption) (*EncodedDataForQuorumTransaction, error) {
	out := new(EncodedDataForQuorumTransaction)
	err := c.cc.Invoke(ctx, "/proto.LCProtocolService/UPASLCPaymentAcceptance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lCProtocolServiceClient) LCPaymentAcceptance(ctx context.Context, in *LCPaymentAcceptanceInput, opts ...grpc.CallOption) (*EncodedDataForQuorumTransaction, error) {
	out := new(EncodedDataForQuorumTransaction)
	err := c.cc.Invoke(ctx, "/proto.LCProtocolService/LCPaymentAcceptance", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lCProtocolServiceClient) UPASLCReimbursingBankToAdvisingBankPayment(ctx context.Context, in *UPASLCReimbursingBankToAdvisingBankPaymentInput, opts ...grpc.CallOption) (*EncodedDataForQuorumTransaction, error) {
	out := new(EncodedDataForQuorumTransaction)
	err := c.cc.Invoke(ctx, "/proto.LCProtocolService/UPASLCReimbursingBankToAdvisingBankPayment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lCProtocolServiceClient) UPASLCIssuanceBankToReimbursingBankPayment(ctx context.Context, in *UPASLCIssuanceBankToReimbursingBankPaymentInput, opts ...grpc.CallOption) (*EncodedDataForQuorumTransaction, error) {
	out := new(EncodedDataForQuorumTransaction)
	err := c.cc.Invoke(ctx, "/proto.LCProtocolService/UPASLCIssuanceBankToReimbursingBankPayment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lCProtocolServiceClient) LCIssuanceBankToAdvisingBankPayment(ctx context.Context, in *LCIssuanceBankToAdvisingBankPaymentInput, opts ...grpc.CallOption) (*EncodedDataForQuorumTransaction, error) {
	out := new(EncodedDataForQuorumTransaction)
	err := c.cc.Invoke(ctx, "/proto.LCProtocolService/LCIssuanceBankToAdvisingBankPayment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lCProtocolServiceClient) LCAdvisingBankToBeneficiaryPayment(ctx context.Context, in *LCAdvisingBankToBeneficiaryPaymentInput, opts ...grpc.CallOption) (*EncodedDataForQuorumTransaction, error) {
	out := new(EncodedDataForQuorumTransaction)
	err := c.cc.Invoke(ctx, "/proto.LCProtocolService/LCAdvisingBankToBeneficiaryPayment", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LCProtocolServiceServer is the server API for LCProtocolService service.
type LCProtocolServiceServer interface {
	LetterOfCredit(context.Context, *LetterOfCreditInput) (*EncodedDataForQuorumTransaction, error)
	PresentationDocument(context.Context, *PresentationDocumentInput) (*EncodedDataForQuorumTransaction, error)
	DocumentationResultNotification(context.Context, *DocumentationResultNotificationInput) (*EncodedDataForQuorumTransaction, error)
	UPASLCPaymentAcceptance(context.Context, *UPASLCPaymentAcceptanceInput) (*EncodedDataForQuorumTransaction, error)
	LCPaymentAcceptance(context.Context, *LCPaymentAcceptanceInput) (*EncodedDataForQuorumTransaction, error)
	UPASLCReimbursingBankToAdvisingBankPayment(context.Context, *UPASLCReimbursingBankToAdvisingBankPaymentInput) (*EncodedDataForQuorumTransaction, error)
	UPASLCIssuanceBankToReimbursingBankPayment(context.Context, *UPASLCIssuanceBankToReimbursingBankPaymentInput) (*EncodedDataForQuorumTransaction, error)
	LCIssuanceBankToAdvisingBankPayment(context.Context, *LCIssuanceBankToAdvisingBankPaymentInput) (*EncodedDataForQuorumTransaction, error)
	LCAdvisingBankToBeneficiaryPayment(context.Context, *LCAdvisingBankToBeneficiaryPaymentInput) (*EncodedDataForQuorumTransaction, error)
}

// UnimplementedLCProtocolServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLCProtocolServiceServer struct {
}

func (*UnimplementedLCProtocolServiceServer) LetterOfCredit(context.Context, *LetterOfCreditInput) (*EncodedDataForQuorumTransaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LetterOfCredit not implemented")
}
func (*UnimplementedLCProtocolServiceServer) PresentationDocument(context.Context, *PresentationDocumentInput) (*EncodedDataForQuorumTransaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PresentationDocument not implemented")
}
func (*UnimplementedLCProtocolServiceServer) DocumentationResultNotification(context.Context, *DocumentationResultNotificationInput) (*EncodedDataForQuorumTransaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DocumentationResultNotification not implemented")
}
func (*UnimplementedLCProtocolServiceServer) UPASLCPaymentAcceptance(context.Context, *UPASLCPaymentAcceptanceInput) (*EncodedDataForQuorumTransaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UPASLCPaymentAcceptance not implemented")
}
func (*UnimplementedLCProtocolServiceServer) LCPaymentAcceptance(context.Context, *LCPaymentAcceptanceInput) (*EncodedDataForQuorumTransaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LCPaymentAcceptance not implemented")
}
func (*UnimplementedLCProtocolServiceServer) UPASLCReimbursingBankToAdvisingBankPayment(context.Context, *UPASLCReimbursingBankToAdvisingBankPaymentInput) (*EncodedDataForQuorumTransaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UPASLCReimbursingBankToAdvisingBankPayment not implemented")
}
func (*UnimplementedLCProtocolServiceServer) UPASLCIssuanceBankToReimbursingBankPayment(context.Context, *UPASLCIssuanceBankToReimbursingBankPaymentInput) (*EncodedDataForQuorumTransaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UPASLCIssuanceBankToReimbursingBankPayment not implemented")
}
func (*UnimplementedLCProtocolServiceServer) LCIssuanceBankToAdvisingBankPayment(context.Context, *LCIssuanceBankToAdvisingBankPaymentInput) (*EncodedDataForQuorumTransaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LCIssuanceBankToAdvisingBankPayment not implemented")
}
func (*UnimplementedLCProtocolServiceServer) LCAdvisingBankToBeneficiaryPayment(context.Context, *LCAdvisingBankToBeneficiaryPaymentInput) (*EncodedDataForQuorumTransaction, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LCAdvisingBankToBeneficiaryPayment not implemented")
}

func RegisterLCProtocolServiceServer(s *grpc.Server, srv LCProtocolServiceServer) {
	s.RegisterService(&_LCProtocolService_serviceDesc, srv)
}

func _LCProtocolService_LetterOfCredit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LetterOfCreditInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LCProtocolServiceServer).LetterOfCredit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.LCProtocolService/LetterOfCredit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LCProtocolServiceServer).LetterOfCredit(ctx, req.(*LetterOfCreditInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _LCProtocolService_PresentationDocument_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PresentationDocumentInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LCProtocolServiceServer).PresentationDocument(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.LCProtocolService/PresentationDocument",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LCProtocolServiceServer).PresentationDocument(ctx, req.(*PresentationDocumentInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _LCProtocolService_DocumentationResultNotification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DocumentationResultNotificationInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LCProtocolServiceServer).DocumentationResultNotification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.LCProtocolService/DocumentationResultNotification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LCProtocolServiceServer).DocumentationResultNotification(ctx, req.(*DocumentationResultNotificationInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _LCProtocolService_UPASLCPaymentAcceptance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UPASLCPaymentAcceptanceInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LCProtocolServiceServer).UPASLCPaymentAcceptance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.LCProtocolService/UPASLCPaymentAcceptance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LCProtocolServiceServer).UPASLCPaymentAcceptance(ctx, req.(*UPASLCPaymentAcceptanceInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _LCProtocolService_LCPaymentAcceptance_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LCPaymentAcceptanceInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LCProtocolServiceServer).LCPaymentAcceptance(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.LCProtocolService/LCPaymentAcceptance",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LCProtocolServiceServer).LCPaymentAcceptance(ctx, req.(*LCPaymentAcceptanceInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _LCProtocolService_UPASLCReimbursingBankToAdvisingBankPayment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UPASLCReimbursingBankToAdvisingBankPaymentInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LCProtocolServiceServer).UPASLCReimbursingBankToAdvisingBankPayment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.LCProtocolService/UPASLCReimbursingBankToAdvisingBankPayment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LCProtocolServiceServer).UPASLCReimbursingBankToAdvisingBankPayment(ctx, req.(*UPASLCReimbursingBankToAdvisingBankPaymentInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _LCProtocolService_UPASLCIssuanceBankToReimbursingBankPayment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UPASLCIssuanceBankToReimbursingBankPaymentInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LCProtocolServiceServer).UPASLCIssuanceBankToReimbursingBankPayment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.LCProtocolService/UPASLCIssuanceBankToReimbursingBankPayment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LCProtocolServiceServer).UPASLCIssuanceBankToReimbursingBankPayment(ctx, req.(*UPASLCIssuanceBankToReimbursingBankPaymentInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _LCProtocolService_LCIssuanceBankToAdvisingBankPayment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LCIssuanceBankToAdvisingBankPaymentInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LCProtocolServiceServer).LCIssuanceBankToAdvisingBankPayment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.LCProtocolService/LCIssuanceBankToAdvisingBankPayment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LCProtocolServiceServer).LCIssuanceBankToAdvisingBankPayment(ctx, req.(*LCIssuanceBankToAdvisingBankPaymentInput))
	}
	return interceptor(ctx, in, info, handler)
}

func _LCProtocolService_LCAdvisingBankToBeneficiaryPayment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LCAdvisingBankToBeneficiaryPaymentInput)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LCProtocolServiceServer).LCAdvisingBankToBeneficiaryPayment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.LCProtocolService/LCAdvisingBankToBeneficiaryPayment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LCProtocolServiceServer).LCAdvisingBankToBeneficiaryPayment(ctx, req.(*LCAdvisingBankToBeneficiaryPaymentInput))
	}
	return interceptor(ctx, in, info, handler)
}

var _LCProtocolService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.LCProtocolService",
	HandlerType: (*LCProtocolServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LetterOfCredit",
			Handler:    _LCProtocolService_LetterOfCredit_Handler,
		},
		{
			MethodName: "PresentationDocument",
			Handler:    _LCProtocolService_PresentationDocument_Handler,
		},
		{
			MethodName: "DocumentationResultNotification",
			Handler:    _LCProtocolService_DocumentationResultNotification_Handler,
		},
		{
			MethodName: "UPASLCPaymentAcceptance",
			Handler:    _LCProtocolService_UPASLCPaymentAcceptance_Handler,
		},
		{
			MethodName: "LCPaymentAcceptance",
			Handler:    _LCProtocolService_LCPaymentAcceptance_Handler,
		},
		{
			MethodName: "UPASLCReimbursingBankToAdvisingBankPayment",
			Handler:    _LCProtocolService_UPASLCReimbursingBankToAdvisingBankPayment_Handler,
		},
		{
			MethodName: "UPASLCIssuanceBankToReimbursingBankPayment",
			Handler:    _LCProtocolService_UPASLCIssuanceBankToReimbursingBankPayment_Handler,
		},
		{
			MethodName: "LCIssuanceBankToAdvisingBankPayment",
			Handler:    _LCProtocolService_LCIssuanceBankToAdvisingBankPayment_Handler,
		},
		{
			MethodName: "LCAdvisingBankToBeneficiaryPayment",
			Handler:    _LCProtocolService_LCAdvisingBankToBeneficiaryPayment_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "lc.proto",
}
